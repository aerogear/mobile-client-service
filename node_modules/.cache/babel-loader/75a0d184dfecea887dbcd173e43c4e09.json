{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { noop } from '../../../common/helpers';\nimport TableHeading from '../TableHeading';\n\nvar sortableHeaderCellFormatter = function sortableHeaderCellFormatter(_ref) {\n  var cellProps = _ref.cellProps,\n      column = _ref.column,\n      sortingColumns = _ref.sortingColumns,\n      onSort = _ref.onSort;\n  var sortDirection = sortingColumns[column.property] && sortingColumns[column.property].direction;\n  return React.createElement(TableHeading, _extends({\n    onClick: function onClick(e) {\n      onSort(e, column, sortDirection);\n    },\n    sort: true,\n    sortDirection: sortDirection,\n    'aria-label': column.header.label\n  }, cellProps), column.header.label);\n};\n\nsortableHeaderCellFormatter.propTypes = {\n  /** column header cell props */\n  cellProps: PropTypes.object,\n\n  /** column definition */\n  column: PropTypes.object,\n\n  /** sorting object definition */\n  sortingColumns: PropTypes.object,\n\n  /** onSort callback */\n  onSort: PropTypes.func\n};\nsortableHeaderCellFormatter.defaultProps = {\n  cellProps: {},\n  column: {},\n  sortingColumns: {},\n  onSort: noop\n};\nexport default sortableHeaderCellFormatter;","map":null,"metadata":{},"sourceType":"module"}