{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar PatternflyIcon = function PatternflyIcon(_ref) {\n  var name = _ref.name,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['name', 'className']);\n\n  return React.createElement('span', _extends({\n    'aria-hidden': 'true',\n    className: classNames('pficon', 'pficon-' + name, className)\n  }, props));\n};\n\nPatternflyIcon.propTypes = {\n  /** Patternfly Icon font name */\n  name: PropTypes.string.isRequired,\n\n  /** additional classes */\n  className: PropTypes.string\n};\nPatternflyIcon.defaultProps = {\n  className: ''\n};\nexport default PatternflyIcon;","map":null,"metadata":{},"sourceType":"module"}