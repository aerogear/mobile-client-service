{"ast":null,"code":"var _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/create_build_config/SourceSection.js\";\nimport React from 'react';\nimport { get as _get } from 'lodash-es';\nimport { FormGroup, ControlLabel, FormControl, HelpBlock, ExpandCollapse } from 'patternfly-react';\nimport { BUILD_AUTH_TYPE_PUBLIC, KEY_CR_SOURCE_GITURL, BUILD_AUTH_TYPE_BASIC, BUILD_AUTH_TYPE_SSH, KEY_CR_SOURCE_GITREF, KEY_CR_SOURCE_JENKINS_FILE_PATH, KEY_CR_SOURCE_AUTH_TYPE, PATH_CR_SOURCE, ofValidation, KEY_CR_SOURCE_SSH_AUTH, KEY_CR_SOURCE_BASIC_AUTH } from '../Constants';\nimport FormDropdown from '../../common/FormDropdown';\nimport { sourceValidation } from './Validations';\nimport { createBuildConfigConnect } from './ReduxCommon';\nimport BasicAuthenticationSection from './BasicAuthenticationSection';\nimport SshAuthenticationSection from './SshAuthenticationSection';\n\nvar SourceSection = function SourceSection(_ref) {\n  var createBuildConfigState = _ref.createBuildConfigState,\n      setField = _ref.setField,\n      removeValues = _ref.removeValues;\n\n  var _get2 = _get(createBuildConfigState, PATH_CR_SOURCE, {}),\n      gitUrl = _get2[KEY_CR_SOURCE_GITURL],\n      gitRef = _get2[KEY_CR_SOURCE_GITREF],\n      jenkinsFilePath = _get2[KEY_CR_SOURCE_JENKINS_FILE_PATH],\n      authType = _get2[KEY_CR_SOURCE_AUTH_TYPE];\n\n  var _get3 = _get(createBuildConfigState, ofValidation(PATH_CR_SOURCE), {}),\n      gitUrlValidation = _get3[KEY_CR_SOURCE_GITURL],\n      gitRefValidation = _get3[KEY_CR_SOURCE_GITREF],\n      jenkinsFilePathValidation = _get3[KEY_CR_SOURCE_JENKINS_FILE_PATH];\n\n  return React.createElement(\"div\", {\n    className: \"section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"with-divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Source Configuration\"), React.createElement(FormGroup, {\n    validationState: gitUrlValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Git Repository URL\"), React.createElement(FormControl, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setField(KEY_CR_SOURCE_GITURL, e.target.value);\n    },\n    value: gitUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Git URL of the source code to build.\")), React.createElement(ExpandCollapse, {\n    bordered: true,\n    textExpanded: \" Hide advanced options\",\n    textCollapsed: \" Show advanced options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"advancedOptions\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    validationState: gitRefValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Git Reference\"), React.createElement(FormControl, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setField(KEY_CR_SOURCE_GITREF, e.target.value);\n    },\n    value: gitRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    validationState: jenkinsFilePathValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Jenkins file path\"), React.createElement(FormControl, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setField(KEY_CR_SOURCE_JENKINS_FILE_PATH, e.target.value);\n    },\n    value: jenkinsFilePath,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })))), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Authentication Type\"), React.createElement(FormDropdown, {\n    id: \"authType\",\n    items: [BUILD_AUTH_TYPE_PUBLIC, BUILD_AUTH_TYPE_BASIC, BUILD_AUTH_TYPE_SSH],\n    titles: ['Public', 'Basic authentication', 'SSH Authentication'],\n    onSelect: function onSelect(active) {\n      removeValues(KEY_CR_SOURCE_BASIC_AUTH, KEY_CR_SOURCE_SSH_AUTH);\n      setField(KEY_CR_SOURCE_AUTH_TYPE, active);\n    },\n    selected: authType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), authType === BUILD_AUTH_TYPE_BASIC ? React.createElement(BasicAuthenticationSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), authType === BUILD_AUTH_TYPE_SSH ? React.createElement(SshAuthenticationSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }));\n};\n\nexport default createBuildConfigConnect(PATH_CR_SOURCE, sourceValidation, SourceSection);","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/create_build_config/SourceSection.js"],"names":["React","get","_get","FormGroup","ControlLabel","FormControl","HelpBlock","ExpandCollapse","BUILD_AUTH_TYPE_PUBLIC","KEY_CR_SOURCE_GITURL","BUILD_AUTH_TYPE_BASIC","BUILD_AUTH_TYPE_SSH","KEY_CR_SOURCE_GITREF","KEY_CR_SOURCE_JENKINS_FILE_PATH","KEY_CR_SOURCE_AUTH_TYPE","PATH_CR_SOURCE","ofValidation","KEY_CR_SOURCE_SSH_AUTH","KEY_CR_SOURCE_BASIC_AUTH","FormDropdown","sourceValidation","createBuildConfigConnect","BasicAuthenticationSection","SshAuthenticationSection","SourceSection","createBuildConfigState","setField","removeValues","gitUrl","gitRef","jenkinsFilePath","authType","gitUrlValidation","gitRefValidation","jenkinsFilePathValidation","e","target","value","active"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { get as _get } from 'lodash-es';\nimport { FormGroup, ControlLabel, FormControl, HelpBlock, ExpandCollapse } from 'patternfly-react';\nimport {\n  BUILD_AUTH_TYPE_PUBLIC,\n  KEY_CR_SOURCE_GITURL,\n  BUILD_AUTH_TYPE_BASIC,\n  BUILD_AUTH_TYPE_SSH,\n  KEY_CR_SOURCE_GITREF,\n  KEY_CR_SOURCE_JENKINS_FILE_PATH,\n  KEY_CR_SOURCE_AUTH_TYPE,\n  PATH_CR_SOURCE,\n  ofValidation,\n  KEY_CR_SOURCE_SSH_AUTH,\n  KEY_CR_SOURCE_BASIC_AUTH\n} from '../Constants';\nimport FormDropdown from '../../common/FormDropdown';\nimport { sourceValidation } from './Validations';\nimport { createBuildConfigConnect } from './ReduxCommon';\nimport BasicAuthenticationSection from './BasicAuthenticationSection';\nimport SshAuthenticationSection from './SshAuthenticationSection';\n\nconst SourceSection = ({ createBuildConfigState, setField, removeValues }) => {\n  const {\n    [KEY_CR_SOURCE_GITURL]: gitUrl,\n    [KEY_CR_SOURCE_GITREF]: gitRef,\n    [KEY_CR_SOURCE_JENKINS_FILE_PATH]: jenkinsFilePath,\n    [KEY_CR_SOURCE_AUTH_TYPE]: authType\n  } = _get(createBuildConfigState, PATH_CR_SOURCE, {});\n  const {\n    [KEY_CR_SOURCE_GITURL]: gitUrlValidation,\n    [KEY_CR_SOURCE_GITREF]: gitRefValidation,\n    [KEY_CR_SOURCE_JENKINS_FILE_PATH]: jenkinsFilePathValidation\n  } = _get(createBuildConfigState, ofValidation(PATH_CR_SOURCE), {});\n  return (\n    <div className=\"section\">\n      <h3 className=\"with-divider\">Source Configuration</h3>\n      <FormGroup validationState={gitUrlValidation}>\n        <ControlLabel className=\"required\">Git Repository URL</ControlLabel>\n        <FormControl type=\"text\" onChange={e => setField(KEY_CR_SOURCE_GITURL, e.target.value)} value={gitUrl} />\n        <HelpBlock>Git URL of the source code to build.</HelpBlock>\n      </FormGroup>\n      <ExpandCollapse bordered textExpanded=\" Hide advanced options\" textCollapsed=\" Show advanced options\">\n        <div className=\"advancedOptions\">\n          <FormGroup validationState={gitRefValidation}>\n            <ControlLabel className=\"required\">Git Reference</ControlLabel>\n            <FormControl type=\"text\" onChange={e => setField(KEY_CR_SOURCE_GITREF, e.target.value)} value={gitRef} />\n          </FormGroup>\n          <FormGroup validationState={jenkinsFilePathValidation}>\n            <ControlLabel className=\"required\">Jenkins file path</ControlLabel>\n            <FormControl\n              type=\"text\"\n              onChange={e => setField(KEY_CR_SOURCE_JENKINS_FILE_PATH, e.target.value)}\n              value={jenkinsFilePath}\n            />\n          </FormGroup>\n        </div>\n      </ExpandCollapse>\n      <FormGroup>\n        <ControlLabel>Authentication Type</ControlLabel>\n        <FormDropdown\n          id=\"authType\"\n          items={[BUILD_AUTH_TYPE_PUBLIC, BUILD_AUTH_TYPE_BASIC, BUILD_AUTH_TYPE_SSH]}\n          titles={['Public', 'Basic authentication', 'SSH Authentication']}\n          onSelect={active => {\n            removeValues(KEY_CR_SOURCE_BASIC_AUTH, KEY_CR_SOURCE_SSH_AUTH);\n            setField(KEY_CR_SOURCE_AUTH_TYPE, active);\n          }}\n          selected={authType}\n        />\n      </FormGroup>\n      {authType === BUILD_AUTH_TYPE_BASIC ? <BasicAuthenticationSection /> : <React.Fragment />}\n      {authType === BUILD_AUTH_TYPE_SSH ? <SshAuthenticationSection /> : <React.Fragment />}\n    </div>\n  );\n};\n\nexport default createBuildConfigConnect(PATH_CR_SOURCE, sourceValidation, SourceSection);\n"]},"metadata":{},"sourceType":"module"}