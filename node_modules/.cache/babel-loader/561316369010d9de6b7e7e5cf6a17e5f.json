{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { Component } from 'react';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\nmomentDurationFormatSetup(moment);\n\nvar Duration =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Duration, _Component);\n\n  function Duration(props) {\n    var _this;\n\n    _classCallCheck(this, Duration);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Duration).call(this, props));\n\n    _this.tick = function () {\n      _this.setState(function (state) {\n        return {\n          timeSinceLastUpdate: state.timeSinceLastUpdate + 1\n        };\n      });\n    };\n\n    _this.state = {\n      timeSinceLastUpdate: 0\n    };\n    return _this;\n  }\n\n  _createClass(Duration, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.inProgress) {\n        this.timerID = setInterval(this.tick, 1000);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.timerID);\n      this.timerID = null;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.duration !== this.props.duration) {\n        this.setState({\n          timeSinceLastUpdate: 0\n        });\n      }\n\n      if (!this.props.inProgress && this.timerID) {\n        clearInterval(this.timerID);\n        this.timerID = null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          duration = _this$props.duration,\n          inProgress = _this$props.inProgress;\n      return moment.duration(duration + (inProgress ? this.state.timeSinceLastUpdate * 1000 : 0)).format('h[h] m[m] s[s]');\n    }\n  }]);\n\n  return Duration;\n}(Component);\n\nexport default Duration;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/common/Duration.js"],"names":["Component","moment","momentDurationFormatSetup","Duration","props","tick","setState","state","timeSinceLastUpdate","inProgress","timerID","setInterval","clearInterval","prevProps","duration","format"],"mappings":";;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,yBAAP,MAAsC,wBAAtC;AAEAA,yBAAyB,CAACD,MAAD,CAAzB;;IAEME,Q;;;;;AACJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,kFAAMA,KAAN;;AADiB,UA+BnBC,IA/BmB,GA+BZ,YAAM;AACX,YAAKC,QAAL,CAAc,UAAAC,KAAK;AAAA,eAAK;AACtBC,UAAAA,mBAAmB,EAAED,KAAK,CAACC,mBAAN,GAA4B;AAD3B,SAAL;AAAA,OAAnB;AAGD,KAnCkB;;AAGjB,UAAKD,KAAL,GAAa;AACXC,MAAAA,mBAAmB,EAAE;AADV,KAAb;AAHiB;AAMlB;;;;wCAEmB;AAClB,UAAI,KAAKJ,KAAL,CAAWK,UAAf,EAA2B;AACzB,aAAKC,OAAL,GAAeC,WAAW,CAAC,KAAKN,IAAN,EAAY,IAAZ,CAA1B;AACD;AACF;;;2CAEsB;AACrBO,MAAAA,aAAa,CAAC,KAAKF,OAAN,CAAb;AACA,WAAKA,OAAL,GAAe,IAAf;AACD;;;uCAEkBG,S,EAAW;AAC5B,UAAIA,SAAS,CAACC,QAAV,KAAuB,KAAKV,KAAL,CAAWU,QAAtC,EAAgD;AAC9C,aAAKR,QAAL,CAAc;AACZE,UAAAA,mBAAmB,EAAE;AADT,SAAd;AAGD;;AACD,UAAI,CAAC,KAAKJ,KAAL,CAAWK,UAAZ,IAA0B,KAAKC,OAAnC,EAA4C;AAC1CE,QAAAA,aAAa,CAAC,KAAKF,OAAN,CAAb;AACA,aAAKA,OAAL,GAAe,IAAf;AACD;AACF;;;6BAQQ;AAAA,wBAC0B,KAAKN,KAD/B;AAAA,UACCU,QADD,eACCA,QADD;AAAA,UACWL,UADX,eACWA,UADX;AAGP,aAAOR,MAAM,CACVa,QADI,CACKA,QAAQ,IAAIL,UAAU,GAAG,KAAKF,KAAL,CAAWC,mBAAX,GAAiC,IAApC,GAA2C,CAAzD,CADb,EAEJO,MAFI,CAEG,gBAFH,CAAP;AAGD;;;;EA5CoBf,S;;AA+CvB,eAAeG,QAAf","sourcesContent":["import { Component } from 'react';\nimport moment from 'moment';\nimport momentDurationFormatSetup from 'moment-duration-format';\n\nmomentDurationFormatSetup(moment);\n\nclass Duration extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      timeSinceLastUpdate: 0\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.inProgress) {\n      this.timerID = setInterval(this.tick, 1000);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerID);\n    this.timerID = null;\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.duration !== this.props.duration) {\n      this.setState({\n        timeSinceLastUpdate: 0\n      });\n    }\n    if (!this.props.inProgress && this.timerID) {\n      clearInterval(this.timerID);\n      this.timerID = null;\n    }\n  }\n\n  tick = () => {\n    this.setState(state => ({\n      timeSinceLastUpdate: state.timeSinceLastUpdate + 1\n    }));\n  };\n\n  render() {\n    const { duration, inProgress } = this.props;\n\n    return moment\n      .duration(duration + (inProgress ? this.state.timeSinceLastUpdate * 1000 : 0))\n      .format('h[h] m[m] s[s]');\n  }\n}\n\nexport default Duration;\n"]},"metadata":{},"sourceType":"module"}