{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../Icon';\n\nvar ModalCloseButton = function ModalCloseButton(_ref) {\n  var className = _ref.className,\n      closeText = _ref.closeText,\n      props = _objectWithoutProperties(_ref, ['className', 'closeText']);\n\n  return React.createElement('button', _extends({\n    className: classNames('close', className)\n  }, props), React.createElement(Icon, {\n    type: 'pf',\n    name: 'close',\n    'aria-hidden': 'true',\n    title: closeText\n  }), React.createElement('span', {\n    className: 'sr-only'\n  }, closeText));\n};\n\nModalCloseButton.defaultProps = {\n  className: '',\n  closeText: 'Close'\n};\nModalCloseButton.propTypes = {\n  /** additional classes */\n  className: PropTypes.string,\n\n  /** Alternate text for close button for screen readers (default 'Close') */\n  closeText: PropTypes.string\n};\nexport default ModalCloseButton;","map":null,"metadata":{},"sourceType":"module"}