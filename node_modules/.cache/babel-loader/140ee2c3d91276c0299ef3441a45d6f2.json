{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/containers/Client.js\";\nimport React, { Component } from 'react';\nimport { Nav, NavItem, TabContent, TabPane, TabContainer, Grid, Breadcrumb, DropdownButton, Alert, MenuItem } from 'patternfly-react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { find } from 'lodash-es';\nimport Moment from 'react-moment';\nimport ConfigurationView from '../components/configuration/ConfigurationView';\nimport MobileServiceView from '../components/mobileservices/MobileServiceView';\nimport { fetchApp, fetchAndWatchApps } from '../actions/apps';\nimport { fetchAndWatchBuildConfigs } from '../actions/buildConfigs';\nimport { fetchAndWatchBuilds } from '../actions/builds';\nimport DeleteItemButton from './DeleteItemButton';\nimport { MobileApp } from '../models';\nimport { MobileClientBuildOverviewList } from '../components/build/MobileClientBuildOverviewList';\nimport BuildConfigDialog from './BuildConfigDialog';\nimport './Client.css';\nimport { fetchAndWatchServices } from '../actions/services';\nexport var TAB_CONFIGURATION = {\n  key: 1,\n  hash: 'configuration'\n};\nexport var TAB_MOBILE_SERVICES = {\n  key: 2,\n  hash: 'services'\n};\nexport var TAB_BUILDS = {\n  key: 3,\n  hash: 'builds'\n};\nvar TABS = [TAB_CONFIGURATION, TAB_MOBILE_SERVICES, TAB_BUILDS];\nexport var Client =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Client, _Component);\n\n  function Client(props) {\n    var _this;\n\n    _classCallCheck(this, Client);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Client).call(this, props));\n\n    _this.handleNavSelect = function (eventKey) {\n      var selectedTab = _this.state.selectedTab;\n\n      if (selectedTab !== eventKey) {\n        _this.setState({\n          selectedTab: eventKey\n        });\n      }\n    };\n\n    _this.header = function (mobileApp) {\n      var _this$state = _this.state,\n          selectedTab = _this$state.selectedTab,\n          _this$state$showBuild = _this$state.showBuildConfigDialog,\n          showBuildConfigDialog = _this$state$showBuild === void 0 ? false : _this$state$showBuild;\n      var _mobileApp$metadata$d = mobileApp.metadata.data.creationTimestamp,\n          creationTimestamp = _mobileApp$metadata$d === void 0 ? null : _mobileApp$metadata$d; // passing empty string to build config dialog for now as the client id.\n\n      return React.createElement(\"div\", {\n        className: \"app-header-wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"app-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, mobileApp.getName(), React.createElement(\"span\", {\n        className: \"creation-timestamp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"created \", React.createElement(Moment, {\n        fromNow: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, creationTimestamp))))), React.createElement(\"div\", {\n        className: \"app-actions-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(DropdownButton, {\n        id: \"app-actions-dropdown\",\n        title: \"Actions\",\n        pullRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, mobileApp && selectedTab === TAB_BUILDS.key ? React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        onClick: function onClick() {\n          return _this.setState({\n            showBuildConfigDialog: true\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"New build config\"), React.createElement(BuildConfigDialog, {\n        update: false,\n        clientInfo: {\n          clientId: mobileApp.getName()\n        },\n        show: showBuildConfigDialog,\n        onShowStateChanged: function onShowStateChanged(isShown) {\n          return _this.setState({\n            showBuildConfigDialog: isShown\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })) : '', React.createElement(DeleteItemButton, {\n        itemType: \"app\",\n        itemName: _this.props.match.params.id,\n        navigate: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))));\n    };\n\n    var initialTab = find(TABS, {\n      hash: props.location.hash.substring(1)\n    });\n\n    if (!initialTab) {\n      initialTab = TAB_CONFIGURATION;\n    }\n\n    _this.state = {\n      buildConfigs: [],\n      selectedTab: initialTab.key\n    };\n    _this.handleNavSelect = _this.handleNavSelect.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Client, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var appName = this.props.match.params.id;\n      this.props.fetchApp(appName);\n      this.props.fetchAndWatchApps();\n\n      if (this.props.buildTabEnabled) {\n        this.props.fetchAndWatchBuilds();\n        this.props.fetchAndWatchBuildConfigs();\n      }\n\n      this.props.fetchAndWatchServices();\n    }\n  }, {\n    key: \"getMobileApp\",\n    value: function getMobileApp() {\n      return MobileApp.find(this.props.apps.items, this.props.match.params.id) || new MobileApp();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.buildConfigs !== prevProps.buildConfigs || this.props.builds !== prevProps.builds) {\n        var mobileApp = this.getMobileApp();\n\n        if (mobileApp.spec) {\n          var configs = this.props.buildConfigs.items.filter(function (config) {\n            return config.metadata.labels['mobile-client-id'] === mobileApp.getID();\n          });\n          configs.forEach(function (config) {\n            return delete config.builds;\n          });\n          this.props.builds.items.forEach(function (build) {\n            var matchingConfig = configs.find(function (config) {\n              return config.metadata.name === build.metadata.labels.buildconfig;\n            });\n\n            if (matchingConfig) {\n              matchingConfig.builds = matchingConfig.builds || [];\n              matchingConfig.builds.push(build);\n            }\n          });\n          this.setState({\n            buildConfigs: configs\n          });\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var mobileApp = this.getMobileApp();\n      var clientInfo = {\n        clientId: mobileApp.getName()\n      };\n      var selectedTab = this.state.selectedTab;\n      var appName = this.props.match.params.id;\n      return mobileApp ? React.createElement(Grid, {\n        fluid: true,\n        className: \"client-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Breadcrumb, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(Breadcrumb.Item, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Mobile Apps\")), React.createElement(Breadcrumb.Item, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, mobileApp.getName())), this.header(mobileApp), this.props.apps.readingError ? React.createElement(Alert, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, this.props.apps.readingError.message) : React.createElement(TabContainer, {\n        id: \"basic-tabs-pf\",\n        activeKey: selectedTab,\n        onSelect: this.handleNavSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        bsClass: \"nav nav-tabs nav-tabs-pf nav-tabs-pf-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        eventKey: TAB_CONFIGURATION.key,\n        href: \"#\".concat(TAB_CONFIGURATION.hash),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Configuration\"), this.props.buildTabEnabled ? React.createElement(NavItem, {\n        eventKey: TAB_BUILDS.key,\n        href: \"#\".concat(TAB_BUILDS.hash),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Builds\") : null, React.createElement(NavItem, {\n        eventKey: TAB_MOBILE_SERVICES.key,\n        href: \"#\".concat(TAB_MOBILE_SERVICES.hash),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Mobile Services\")), React.createElement(TabContent, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(TabPane, {\n        eventKey: TAB_CONFIGURATION.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(ConfigurationView, {\n        app: mobileApp,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      })), React.createElement(TabPane, {\n        eventKey: TAB_MOBILE_SERVICES.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(MobileServiceView, {\n        appName: appName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      })), this.props.buildTabEnabled ? React.createElement(TabPane, {\n        eventKey: TAB_BUILDS.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(MobileClientBuildOverviewList, {\n        appName: appName,\n        clientInfo: clientInfo,\n        buildConfigs: this.state.buildConfigs,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })) : null)))) : React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Client;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    apps: state.apps,\n    buildConfigs: state.buildConfigs,\n    builds: state.builds,\n    buildTabEnabled: state.config.buildTabEnabled\n  };\n}\n\nvar mapDispatchToProps = {\n  fetchApp: fetchApp,\n  fetchAndWatchBuildConfigs: fetchAndWatchBuildConfigs,\n  fetchAndWatchBuilds: fetchAndWatchBuilds,\n  fetchAndWatchServices: fetchAndWatchServices,\n  fetchAndWatchApps: fetchAndWatchApps\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Client);","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/containers/Client.js"],"names":["React","Component","Nav","NavItem","TabContent","TabPane","TabContainer","Grid","Breadcrumb","DropdownButton","Alert","MenuItem","connect","Link","find","Moment","ConfigurationView","MobileServiceView","fetchApp","fetchAndWatchApps","fetchAndWatchBuildConfigs","fetchAndWatchBuilds","DeleteItemButton","MobileApp","MobileClientBuildOverviewList","BuildConfigDialog","fetchAndWatchServices","TAB_CONFIGURATION","key","hash","TAB_MOBILE_SERVICES","TAB_BUILDS","TABS","Client","props","handleNavSelect","eventKey","selectedTab","state","setState","header","mobileApp","showBuildConfigDialog","metadata","data","creationTimestamp","getName","clientId","isShown","match","params","id","initialTab","location","substring","buildConfigs","bind","appName","buildTabEnabled","apps","items","prevProps","builds","getMobileApp","spec","configs","filter","config","labels","getID","forEach","build","matchingConfig","name","buildconfig","push","clientInfo","readingError","message","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Nav,\n  NavItem,\n  TabContent,\n  TabPane,\n  TabContainer,\n  Grid,\n  Breadcrumb,\n  DropdownButton,\n  Alert,\n  MenuItem\n} from 'patternfly-react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { find } from 'lodash-es';\nimport Moment from 'react-moment';\nimport ConfigurationView from '../components/configuration/ConfigurationView';\nimport MobileServiceView from '../components/mobileservices/MobileServiceView';\nimport { fetchApp, fetchAndWatchApps } from '../actions/apps';\nimport { fetchAndWatchBuildConfigs } from '../actions/buildConfigs';\nimport { fetchAndWatchBuilds } from '../actions/builds';\nimport DeleteItemButton from './DeleteItemButton';\nimport { MobileApp } from '../models';\nimport { MobileClientBuildOverviewList } from '../components/build/MobileClientBuildOverviewList';\nimport BuildConfigDialog from './BuildConfigDialog';\nimport './Client.css';\nimport { fetchAndWatchServices } from '../actions/services';\n\nexport const TAB_CONFIGURATION = { key: 1, hash: 'configuration' };\nexport const TAB_MOBILE_SERVICES = { key: 2, hash: 'services' };\nexport const TAB_BUILDS = { key: 3, hash: 'builds' };\n\nconst TABS = [TAB_CONFIGURATION, TAB_MOBILE_SERVICES, TAB_BUILDS];\n\nexport class Client extends Component {\n  constructor(props) {\n    super(props);\n    let initialTab = find(TABS, { hash: props.location.hash.substring(1) });\n    if (!initialTab) {\n      initialTab = TAB_CONFIGURATION;\n    }\n\n    this.state = {\n      buildConfigs: [],\n      selectedTab: initialTab.key\n    };\n    this.handleNavSelect = this.handleNavSelect.bind(this);\n  }\n\n  componentDidMount() {\n    const appName = this.props.match.params.id;\n\n    this.props.fetchApp(appName);\n    this.props.fetchAndWatchApps();\n\n    if (this.props.buildTabEnabled) {\n      this.props.fetchAndWatchBuilds();\n      this.props.fetchAndWatchBuildConfigs();\n    }\n\n    this.props.fetchAndWatchServices();\n  }\n\n  getMobileApp() {\n    return MobileApp.find(this.props.apps.items, this.props.match.params.id) || new MobileApp();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.buildConfigs !== prevProps.buildConfigs || this.props.builds !== prevProps.builds) {\n      const mobileApp = this.getMobileApp();\n      if (mobileApp.spec) {\n        const configs = this.props.buildConfigs.items.filter(\n          config => config.metadata.labels['mobile-client-id'] === mobileApp.getID()\n        );\n\n        configs.forEach(config => delete config.builds);\n\n        this.props.builds.items.forEach(build => {\n          const matchingConfig = configs.find(config => config.metadata.name === build.metadata.labels.buildconfig);\n          if (matchingConfig) {\n            matchingConfig.builds = matchingConfig.builds || [];\n            matchingConfig.builds.push(build);\n          }\n        });\n\n        this.setState({ buildConfigs: configs });\n      }\n    }\n  }\n\n  handleNavSelect = eventKey => {\n    const { selectedTab } = this.state;\n    if (selectedTab !== eventKey) {\n      this.setState({ selectedTab: eventKey });\n    }\n  };\n\n  header = mobileApp => {\n    const { selectedTab, showBuildConfigDialog = false } = this.state;\n    const { creationTimestamp = null } = mobileApp.metadata.data;\n    // passing empty string to build config dialog for now as the client id.\n    return (\n      <div className=\"app-header-wrapper\">\n        <div className=\"app-header\">\n          <div>\n            <h1>\n              {mobileApp.getName()}\n              <span className=\"creation-timestamp\">\n                created <Moment fromNow>{creationTimestamp}</Moment>\n              </span>\n            </h1>\n          </div>\n        </div>\n        <div className=\"app-actions-dropdown\">\n          <DropdownButton id=\"app-actions-dropdown\" title=\"Actions\" pullRight>\n            {mobileApp && selectedTab === TAB_BUILDS.key ? (\n              <React.Fragment>\n                <MenuItem onClick={() => this.setState({ showBuildConfigDialog: true })}>New build config</MenuItem>\n                <BuildConfigDialog\n                  update={false}\n                  clientInfo={{ clientId: mobileApp.getName() }}\n                  show={showBuildConfigDialog}\n                  onShowStateChanged={isShown => this.setState({ showBuildConfigDialog: isShown })}\n                />\n              </React.Fragment>\n            ) : (\n              ''\n            )}\n            <DeleteItemButton itemType=\"app\" itemName={this.props.match.params.id} navigate=\"/\" />\n          </DropdownButton>\n        </div>\n      </div>\n    );\n  };\n\n  render() {\n    const mobileApp = this.getMobileApp();\n    const clientInfo = { clientId: mobileApp.getName() };\n    const { selectedTab } = this.state;\n    const appName = this.props.match.params.id;\n    return mobileApp ? (\n      <Grid fluid className=\"client-details\">\n        <Breadcrumb>\n          <Breadcrumb.Item active>\n            <Link to=\"/overview\">Mobile Apps</Link>\n          </Breadcrumb.Item>\n          <Breadcrumb.Item active>{mobileApp.getName()}</Breadcrumb.Item>\n        </Breadcrumb>\n        {this.header(mobileApp)}\n        {this.props.apps.readingError ? (\n          <Alert>{this.props.apps.readingError.message}</Alert>\n        ) : (\n          <TabContainer id=\"basic-tabs-pf\" activeKey={selectedTab} onSelect={this.handleNavSelect}>\n            <div>\n              <Nav bsClass=\"nav nav-tabs nav-tabs-pf nav-tabs-pf-secondary\">\n                <NavItem eventKey={TAB_CONFIGURATION.key} href={`#${TAB_CONFIGURATION.hash}`}>\n                  Configuration\n                </NavItem>\n                {this.props.buildTabEnabled ? (\n                  <NavItem eventKey={TAB_BUILDS.key} href={`#${TAB_BUILDS.hash}`}>\n                    Builds\n                  </NavItem>\n                ) : null}\n                <NavItem eventKey={TAB_MOBILE_SERVICES.key} href={`#${TAB_MOBILE_SERVICES.hash}`}>\n                  Mobile Services\n                </NavItem>\n              </Nav>\n              <TabContent>\n                <TabPane eventKey={TAB_CONFIGURATION.key}>\n                  <ConfigurationView app={mobileApp} />\n                </TabPane>\n                <TabPane eventKey={TAB_MOBILE_SERVICES.key}>\n                  <MobileServiceView appName={appName} />\n                </TabPane>\n                {this.props.buildTabEnabled ? (\n                  <TabPane eventKey={TAB_BUILDS.key}>\n                    <MobileClientBuildOverviewList\n                      appName={appName}\n                      clientInfo={clientInfo}\n                      buildConfigs={this.state.buildConfigs}\n                    />\n                  </TabPane>\n                ) : null}\n              </TabContent>\n            </div>\n          </TabContainer>\n        )}\n      </Grid>\n    ) : (\n      <React.Fragment />\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    apps: state.apps,\n    buildConfigs: state.buildConfigs,\n    builds: state.builds,\n    buildTabEnabled: state.config.buildTabEnabled\n  };\n}\n\nconst mapDispatchToProps = {\n  fetchApp,\n  fetchAndWatchBuildConfigs,\n  fetchAndWatchBuilds,\n  fetchAndWatchServices,\n  fetchAndWatchApps\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Client);\n"]},"metadata":{},"sourceType":"module"}