{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from '../Dropdown';\nimport CustomMastheadDropdown from './InnerComponents/CustomMastheadDropdown';\n/**\n * Masthead\n */\n\nvar MastheadDropdown = function MastheadDropdown(_ref) {\n  var className = _ref.className,\n      id = _ref.id,\n      title = _ref.title,\n      noCaret = _ref.noCaret,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, ['className', 'id', 'title', 'noCaret', 'children']);\n\n  return React.createElement(Dropdown, _extends({\n    id: id,\n    componentClass: CustomMastheadDropdown,\n    className: className\n  }, props), React.createElement(Dropdown.Toggle, {\n    className: 'nav-item-iconic',\n    bsStyle: 'link',\n    noCaret: noCaret\n  }, title), React.createElement(Dropdown.Menu, null, children));\n};\n\nMastheadDropdown.propTypes = {\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** ID of dropdown */\n  id: PropTypes.string.isRequired,\n\n  /** Title of dropdown */\n  title: PropTypes.node,\n\n  /** Children (likely MenuItem's) */\n  children: PropTypes.node,\n\n  /** Caret in Dropdown */\n  noCaret: PropTypes.bool\n};\nMastheadDropdown.defaultProps = {\n  className: '',\n  title: null,\n  children: null,\n  noCaret: false\n};\nexport default MastheadDropdown;","map":null,"metadata":{},"sourceType":"module"}