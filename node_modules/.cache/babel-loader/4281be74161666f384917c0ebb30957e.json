{"ast":null,"code":"import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from '../Label';\nimport { OverlayTrigger } from '../OverlayTrigger';\nimport { Tooltip } from '../Tooltip';\n\nvar tooltip = function tooltip(text) {\n  return React.createElement(Tooltip, {\n    id: 'tooltip'\n  }, text);\n};\n\nvar LabelWithTooltip = function LabelWithTooltip(_ref) {\n  var onDeleteClick = _ref.onDeleteClick,\n      category = _ref.category,\n      value = _ref.value,\n      truncate = _ref.truncate,\n      bsStyle = _ref.bsStyle,\n      className = _ref.className,\n      overlayPlacement = _ref.overlayPlacement;\n  return React.createElement('li', {\n    key: value.id\n  }, React.createElement(OverlayTrigger, {\n    placement: overlayPlacement,\n    overlay: tooltip(value.label)\n  }, React.createElement(Label, {\n    key: value.id,\n    onRemoveClick: function onRemoveClick() {\n      return onDeleteClick(category, value);\n    },\n    bsStyle: bsStyle,\n    className: 'compound-label-inner-color-pf ' + className\n  }, truncate(value.label))));\n};\n\nLabelWithTooltip.propTypes = {\n  /** Fuction callback called when X button is clicked */\n  onDeleteClick: PropTypes.func.isRequired,\n\n  /** Category in CATEGORY: value(s) pair */\n\n  /**  Parent of label, it does not get displayed in this component */\n  category: PropTypes.shape({\n    id: PropTypes.any.isRequired,\n    label: PropTypes.string.isRequired\n  }).isRequired,\n\n  /** Individual Value in Category:VALUE(s) pair  */\n\n  /** id uniquily identify value within its category, label is text which is displayed */\n  value: PropTypes.PropTypes.shape({\n    id: PropTypes.any.isRequired,\n    label: PropTypes.string.isRequired\n  }).isRequired,\n\n  /** Function used to truncate value label */\n  truncate: PropTypes.func.isRequired,\n\n  /** Name of CSS class(es) which are set to label */\n  className: PropTypes.string,\n\n  /** Bootstrap style which is set to label */\n  bsStyle: PropTypes.string,\n\n  /** Placement of the overlay */\n  overlayPlacement: PropTypes.oneOf(['top', 'right', 'bottom', 'left'])\n};\nLabelWithTooltip.defaultProps = {\n  className: '',\n  bsStyle: 'primary',\n  overlayPlacement: 'bottom'\n};\nexport default LabelWithTooltip;","map":null,"metadata":{},"sourceType":"module"}