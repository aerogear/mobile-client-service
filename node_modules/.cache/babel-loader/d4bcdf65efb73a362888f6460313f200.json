{"ast":null,"code":"import _regeneratorRuntime from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { fetchAction, fetchAndWatchOpenShiftResource } from './fetch';\nimport { buildConfigsService } from '../services/buildconfigs';\nexport var BUILD_CONFIGS_REQUEST = 'BUILD_CONFIGS_REQUEST';\nexport var BUILD_CONFIGS_SUCCESS = 'BUILD_CONFIGS_SUCCESS';\nexport var BUILD_CONFIGS_FAILURE = 'BUILD_CONFIGS_FAILURE';\nexport var BUILD_CONFIG_DELETE_REQUEST = 'BUILD_CONFIG_DELETE_REQUEST';\nexport var BUILD_CONFIG_DELETE_SUCCESS = 'BUILD_CONFIG_DELETE_SUCCESS';\nexport var BUILD_CONFIG_DELETE_FAILURE = 'BUILD_CONFIG_DELETE_FAILURE';\nexport var deleteBuildConfig = function deleteBuildConfig(name) {\n  return fetchAction([BUILD_CONFIG_DELETE_REQUEST, BUILD_CONFIG_DELETE_SUCCESS, BUILD_CONFIG_DELETE_FAILURE],\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", buildConfigsService.deleteBuildConfig(name));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })))();\n};\nexport var BUILD_CONFIG_CREATE_REQUEST = 'BUILD_CONFIG_CREATE_REQUEST';\nexport var BUILD_CONFIG_CREATE_SUCCESS = 'BUILD_CONFIG_CREATE_SUCCESS';\nexport var BUILD_CONFIG_CREATE_FAILURE = 'BUILD_CONFIG_CREATE_FAILURE';\nexport var createBuildConfig = function createBuildConfig(config) {\n  return fetchAction([BUILD_CONFIG_CREATE_REQUEST, BUILD_CONFIG_CREATE_SUCCESS, BUILD_CONFIG_CREATE_FAILURE],\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", buildConfigsService.createBuildConfig(config));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })))();\n};\nexport var BUILD_CONFIG_UPDATE_SUCCESS = 'BUILD_CONFIG_UPDATE_SUCCESS';\nexport var fetchAndWatchBuildConfigs = fetchAndWatchOpenShiftResource(buildConfigsService.buildConfigsRes, 'buildConfigs', {\n  REQUEST: BUILD_CONFIGS_REQUEST,\n  SUCCESS: BUILD_CONFIGS_SUCCESS,\n  FAILURE: BUILD_CONFIGS_FAILURE,\n  ADDED: BUILD_CONFIG_CREATE_SUCCESS,\n  MODIFIED: BUILD_CONFIG_UPDATE_SUCCESS,\n  DELETED: BUILD_CONFIG_DELETE_SUCCESS\n});\nexport var BUILD_CONFIG_FIELD_SET_VALUE = 'BUILD_CONFIG_FIELD_SET_VALUE';\nexport var BUILD_CONFIG_FIELD_REMOVE_VALUE = 'BUILD_CONFIG_FIELD_REMOVE_VALUE';\nexport var BUILD_CONFIG_FIELD_SET_UI_STATE = 'BUILD_CONFIG_FIELD_SET_UI_STATE';\nexport var BUILD_CONFIG_CLEAR_STATE = 'BUILD_CONFIG_CLEAR_STATE';\n/**\n * Creates action for setting the value of a field into the state\n * @param {path} path part of the build config path\n */\n\nexport var createSetBuildConfigValue = function createSetBuildConfigValue() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return function (fieldId, value, isValid) {\n    return {\n      type: BUILD_CONFIG_FIELD_SET_VALUE,\n      payload: {\n        path: path,\n        name: fieldId,\n        value: value,\n        valid: isValid\n      }\n    };\n  };\n};\n/**\n * Action for setting the UI state\n * @param {fieldId} key\n * @param {value} value\n */\n\nexport var setUiState = function setUiState(fieldId, value) {\n  return {\n    type: BUILD_CONFIG_FIELD_SET_UI_STATE,\n    payload: {\n      name: fieldId,\n      value: value\n    }\n  };\n};\n/**\n * Action for removing field from the Build Config\n * @param {string} path path to the field\n * @param {...string} values multiple field names\n */\n\nexport var createRemoveValues = function createRemoveValues() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n  return function () {\n    for (var _len = arguments.length, values = new Array(_len), _key = 0; _key < _len; _key++) {\n      values[_key] = arguments[_key];\n    }\n\n    return {\n      type: BUILD_CONFIG_FIELD_REMOVE_VALUE,\n      payload: {\n        path: path,\n        values: values\n      }\n    };\n  };\n};\n/**\n * Clears the state for create build config dialog.\n */\n\nexport var clearState = function clearState() {\n  return {\n    type: BUILD_CONFIG_CLEAR_STATE\n  };\n};","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/actions/buildConfigs.js"],"names":["fetchAction","fetchAndWatchOpenShiftResource","buildConfigsService","BUILD_CONFIGS_REQUEST","BUILD_CONFIGS_SUCCESS","BUILD_CONFIGS_FAILURE","BUILD_CONFIG_DELETE_REQUEST","BUILD_CONFIG_DELETE_SUCCESS","BUILD_CONFIG_DELETE_FAILURE","deleteBuildConfig","name","BUILD_CONFIG_CREATE_REQUEST","BUILD_CONFIG_CREATE_SUCCESS","BUILD_CONFIG_CREATE_FAILURE","createBuildConfig","config","BUILD_CONFIG_UPDATE_SUCCESS","fetchAndWatchBuildConfigs","buildConfigsRes","REQUEST","SUCCESS","FAILURE","ADDED","MODIFIED","DELETED","BUILD_CONFIG_FIELD_SET_VALUE","BUILD_CONFIG_FIELD_REMOVE_VALUE","BUILD_CONFIG_FIELD_SET_UI_STATE","BUILD_CONFIG_CLEAR_STATE","createSetBuildConfigValue","path","fieldId","value","isValid","type","payload","valid","setUiState","createRemoveValues","values","clearState"],"mappings":"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","sourcesContent":["import { fetchAction, fetchAndWatchOpenShiftResource } from './fetch';\nimport { buildConfigsService } from '../services/buildconfigs';\n\nexport const BUILD_CONFIGS_REQUEST = 'BUILD_CONFIGS_REQUEST';\nexport const BUILD_CONFIGS_SUCCESS = 'BUILD_CONFIGS_SUCCESS';\nexport const BUILD_CONFIGS_FAILURE = 'BUILD_CONFIGS_FAILURE';\n\nexport const BUILD_CONFIG_DELETE_REQUEST = 'BUILD_CONFIG_DELETE_REQUEST';\nexport const BUILD_CONFIG_DELETE_SUCCESS = 'BUILD_CONFIG_DELETE_SUCCESS';\nexport const BUILD_CONFIG_DELETE_FAILURE = 'BUILD_CONFIG_DELETE_FAILURE';\n\nexport const deleteBuildConfig = name =>\n  fetchAction([BUILD_CONFIG_DELETE_REQUEST, BUILD_CONFIG_DELETE_SUCCESS, BUILD_CONFIG_DELETE_FAILURE], async () =>\n    buildConfigsService.deleteBuildConfig(name)\n  )();\n\nexport const BUILD_CONFIG_CREATE_REQUEST = 'BUILD_CONFIG_CREATE_REQUEST';\nexport const BUILD_CONFIG_CREATE_SUCCESS = 'BUILD_CONFIG_CREATE_SUCCESS';\nexport const BUILD_CONFIG_CREATE_FAILURE = 'BUILD_CONFIG_CREATE_FAILURE';\n\nexport const createBuildConfig = config =>\n  fetchAction([BUILD_CONFIG_CREATE_REQUEST, BUILD_CONFIG_CREATE_SUCCESS, BUILD_CONFIG_CREATE_FAILURE], async () =>\n    buildConfigsService.createBuildConfig(config)\n  )();\n\nexport const BUILD_CONFIG_UPDATE_SUCCESS = 'BUILD_CONFIG_UPDATE_SUCCESS';\nexport const fetchAndWatchBuildConfigs = fetchAndWatchOpenShiftResource(\n  buildConfigsService.buildConfigsRes,\n  'buildConfigs',\n  {\n    REQUEST: BUILD_CONFIGS_REQUEST,\n    SUCCESS: BUILD_CONFIGS_SUCCESS,\n    FAILURE: BUILD_CONFIGS_FAILURE,\n    ADDED: BUILD_CONFIG_CREATE_SUCCESS,\n    MODIFIED: BUILD_CONFIG_UPDATE_SUCCESS,\n    DELETED: BUILD_CONFIG_DELETE_SUCCESS\n  }\n);\n\nexport const BUILD_CONFIG_FIELD_SET_VALUE = 'BUILD_CONFIG_FIELD_SET_VALUE';\nexport const BUILD_CONFIG_FIELD_REMOVE_VALUE = 'BUILD_CONFIG_FIELD_REMOVE_VALUE';\nexport const BUILD_CONFIG_FIELD_SET_UI_STATE = 'BUILD_CONFIG_FIELD_SET_UI_STATE';\nexport const BUILD_CONFIG_CLEAR_STATE = 'BUILD_CONFIG_CLEAR_STATE';\n\n/**\n * Creates action for setting the value of a field into the state\n * @param {path} path part of the build config path\n */\nexport const createSetBuildConfigValue = (path = null) => (fieldId, value, isValid) => ({\n  type: BUILD_CONFIG_FIELD_SET_VALUE,\n  payload: { path, name: fieldId, value, valid: isValid }\n});\n\n/**\n * Action for setting the UI state\n * @param {fieldId} key\n * @param {value} value\n */\nexport const setUiState = (fieldId, value) => ({\n  type: BUILD_CONFIG_FIELD_SET_UI_STATE,\n  payload: { name: fieldId, value }\n});\n\n/**\n * Action for removing field from the Build Config\n * @param {string} path path to the field\n * @param {...string} values multiple field names\n */\nexport const createRemoveValues = (path = null) => (...values) => ({\n  type: BUILD_CONFIG_FIELD_REMOVE_VALUE,\n  payload: { path, values }\n});\n\n/**\n * Clears the state for create build config dialog.\n */\nexport const clearState = () => ({ type: BUILD_CONFIG_CLEAR_STATE });\n"]},"metadata":{},"sourceType":"module"}