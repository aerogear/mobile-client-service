{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { noop } from '../../common/helpers';\nimport MastheadCollapse from './MastheadCollapse';\nimport MastheadDropdown from './MastheadDropdown';\n/**\n * Masthead\n */\n\nvar Masthead = function Masthead(_ref) {\n  var className = _ref.className,\n      title = _ref.title,\n      titleImg = _ref.titleImg,\n      iconImg = _ref.iconImg,\n      href = _ref.href,\n      onTitleClick = _ref.onTitleClick,\n      navToggle = _ref.navToggle,\n      onNavToggleClick = _ref.onNavToggleClick,\n      middleContent = _ref.middleContent,\n      thin = _ref.thin,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, ['className', 'title', 'titleImg', 'iconImg', 'href', 'onTitleClick', 'navToggle', 'onNavToggleClick', 'middleContent', 'thin', 'children']);\n\n  var mastheadClasses = classNames({\n    navbar: true,\n    'navbar-default': thin,\n    'navbar-pf': thin,\n    'navbar-pf-vertical': !thin\n  }, className);\n\n  var handleTitleClick = function handleTitleClick(e) {\n    if (onTitleClick !== noop) {\n      if (e) {\n        e.preventDefault();\n      }\n\n      onTitleClick();\n    }\n  };\n\n  return React.createElement('nav', _extends({\n    className: mastheadClasses\n  }, props), React.createElement('div', {\n    className: 'navbar-header'\n  }, navToggle && React.createElement('button', {\n    className: 'navbar-toggle',\n    onClick: onNavToggleClick\n  }, React.createElement('span', {\n    className: 'sr-only'\n  }, 'Toggle navigation'), React.createElement('span', {\n    'aria-hidden': 'true',\n    className: 'icon-bar'\n  }), React.createElement('span', {\n    'aria-hidden': 'true',\n    className: 'icon-bar'\n  }), React.createElement('span', {\n    'aria-hidden': 'true',\n    className: 'icon-bar'\n  })), React.createElement('a', {\n    href: href,\n    role: 'button',\n    className: 'navbar-brand',\n    onClick: handleTitleClick\n  }, iconImg && React.createElement('img', {\n    className: 'navbar-brand-icon',\n    src: iconImg,\n    alt: ''\n  }), titleImg && React.createElement('img', {\n    className: 'navbar-brand-name',\n    src: titleImg,\n    alt: title\n  }), !titleImg && title), middleContent), children);\n};\n\nMasthead.propTypes = {\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** Title of the application (use either this or titleImg) */\n  title: PropTypes.string,\n\n  /** URL of an image for the app's title (use either this or title) */\n  titleImg: PropTypes.string,\n\n  /** URL of an image for the app's icon */\n  iconImg: PropTypes.string,\n\n  /** URL of the application's homepage if the title should be a link */\n  href: PropTypes.string,\n\n  /** Alternative to href, callback to call when the brand link is clicked */\n  onTitleClick: PropTypes.func,\n\n  /** Option to have the nav toggle (hamburger), default is true */\n  navToggle: PropTypes.bool,\n\n  /** Option to have the fit nav, default is false */\n  thin: PropTypes.bool,\n\n  /** Callback when the nav toggle (hamburger) is clicked */\n  onNavToggleClick: PropTypes.func,\n\n  /** Content for the center area of the masthead (context selector) */\n  middleContent: PropTypes.node,\n\n  /** Children (typically MastheadCollapse) */\n  children: PropTypes.node\n};\nMasthead.defaultProps = {\n  className: '',\n  title: '',\n  titleImg: '',\n  iconImg: '',\n  href: '#',\n  onTitleClick: noop,\n  navToggle: true,\n  thin: false,\n  onNavToggleClick: noop,\n  middleContent: null,\n  children: null\n};\nMasthead.Collapse = MastheadCollapse;\nMasthead.Dropdown = MastheadDropdown;\nexport default Masthead;","map":null,"metadata":{},"sourceType":"module"}