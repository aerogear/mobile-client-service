{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/overview/MobileClientCardView.js\";\nimport React, { Component } from 'react';\nimport { Toolbar, Filter, EmptyState, EmptyStateTitle, EmptyStateAction, CardGrid } from 'patternfly-react';\nimport DebounceInput from 'react-debounce-input';\nimport './MobileClientCardView.css';\nimport MobileClientCardViewItem from './MobileClientCardViewItem';\nimport CreateClient from '../../containers/CreateClient';\n\nvar MobileClientCardView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MobileClientCardView, _Component);\n\n  function MobileClientCardView(props) {\n    var _this;\n\n    _classCallCheck(this, MobileClientCardView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MobileClientCardView).call(this, props));\n\n    _this.getBuilds = function (app) {\n      var mobileClientBuilds = _this.props.mobileClientBuilds;\n      var builds = mobileClientBuilds.filter(function (build) {\n        return build.metadata.labels['mobile-client-id'] === app.metadata.name;\n      });\n      var lastBuilds = builds.reduce(function (prev, curr) {\n        var bcName = curr.metadata.annotations['openshift.io/build-config.name'];\n        var buildNumber = curr.metadata.annotations['openshift.io/build.number'];\n        var buildStatus = curr.status.phase;\n\n        if (!prev[bcName] || prev[bcName].buildNumber < buildNumber) {\n          prev[bcName] = {\n            buildNumber: buildNumber,\n            buildStatus: buildStatus\n          };\n        }\n\n        return prev;\n      }, {});\n      var numFailedBuilds = 0;\n\n      for (var build in lastBuilds) {\n        if (lastBuilds[build].buildStatus === 'Failed') {\n          numFailedBuilds++;\n        }\n      }\n\n      var numInProgressBuilds = builds.filter(function (build) {\n        return build.status.phase === 'Running';\n      }).length;\n      return {\n        numFailedBuilds: numFailedBuilds,\n        numInProgressBuilds: numInProgressBuilds\n      };\n    };\n\n    _this.state = {\n      filter: '',\n      currentValue: ''\n    };\n    _this.emptyStateMessage = {\n      noAppsCreated: 'You have no mobile apps right now. Create one to get started.',\n      noAppsAfterFiltering: 'No mobile apps match the entered filter.'\n    };\n    return _this;\n  }\n\n  _createClass(MobileClientCardView, [{\n    key: \"onValueKeyPress\",\n    value: function onValueKeyPress(keyEvent) {\n      var currentValue = this.state.currentValue;\n\n      if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n        this.setState({\n          currentValue: ''\n        });\n        this.setFilter(currentValue);\n        keyEvent.stopPropagation();\n        keyEvent.preventDefault();\n      }\n    }\n  }, {\n    key: \"getEmptyState\",\n    value: function getEmptyState() {\n      return React.createElement(EmptyState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(EmptyStateTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, this.emptyStateMessage.noAppsCreated), React.createElement(EmptyStateAction, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(CreateClient, {\n        createButtonSize: \"large\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      })));\n    }\n  }, {\n    key: \"setFilter\",\n    value: function setFilter(filterValue) {\n      this.setState({\n        filter: filterValue\n      });\n    }\n  }, {\n    key: \"removeFilter\",\n    value: function removeFilter() {\n      this.setState({\n        filter: '',\n        currentValue: ''\n      });\n    }\n  }, {\n    key: \"updateCurrentValue\",\n    value: function updateCurrentValue(event) {\n      var value = event.target.value;\n      this.setState({\n        currentValue: value\n      });\n      this.setFilter(value);\n    }\n  }, {\n    key: \"filterClients\",\n    value: function filterClients(mobileClients) {\n      var _this2 = this;\n\n      return mobileClients.map(function (app) {\n        var clientAppName = app.metadata.name;\n        var filter = _this2.state.filter;\n        return clientAppName.indexOf(filter) > -1 ? React.createElement(MobileClientCardViewItem, {\n          key: clientAppName,\n          app: app,\n          services: app.status.services,\n          builds: _this2.getBuilds(app),\n          buildTabEnabled: _this2.props.buildTabEnabled,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }) : null;\n      }).filter(function (app) {\n        return app !== null;\n      });\n    }\n  }, {\n    key: \"renderAppCards\",\n    value: function renderAppCards() {\n      var mobileClients = this.props.mobileClients;\n      var filteredClients = this.filterClients(mobileClients);\n      return filteredClients.length ? React.createElement(CardGrid, {\n        matchHeight: true,\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(CardGrid.Row, {\n        key: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, filteredClients)) : React.createElement(EmptyState, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(EmptyStateTitle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, this.emptyStateMessage.noAppsAfterFiltering));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var mobileClients = this.props.mobileClients;\n      var _this$state = this.state,\n          filter = _this$state.filter,\n          currentValue = _this$state.currentValue;\n      return React.createElement(\"div\", {\n        className: \"overview\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Filter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(DebounceInput, {\n        minLength: 1,\n        debounceTimeout: 300,\n        type: \"text\",\n        placeholder: \"Filter by Name\",\n        className: \"toolbarFilter\",\n        value: currentValue,\n        onChange: function onChange(e) {\n          return _this3.updateCurrentValue(e);\n        },\n        onKeyPress: function onKeyPress(e) {\n          return _this3.onValueKeyPress(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(CreateClient, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), filter && filter.length > 0 && React.createElement(Toolbar.Results, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Filter.ActiveLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Active Filters:\"), React.createElement(Filter.List, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(Filter.Item, {\n        key: \"1\",\n        filterData: {\n          filter: filter\n        },\n        onRemove: function onRemove(e) {\n          return _this3.removeFilter(e);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, filter)))), mobileClients.length ? this.renderAppCards() : this.getEmptyState());\n    }\n  }]);\n\n  return MobileClientCardView;\n}(Component);\n\nexport default MobileClientCardView;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/overview/MobileClientCardView.js"],"names":["React","Component","Toolbar","Filter","EmptyState","EmptyStateTitle","EmptyStateAction","CardGrid","DebounceInput","MobileClientCardViewItem","CreateClient","MobileClientCardView","props","getBuilds","app","mobileClientBuilds","builds","filter","build","metadata","labels","name","lastBuilds","reduce","prev","curr","bcName","annotations","buildNumber","buildStatus","status","phase","numFailedBuilds","numInProgressBuilds","length","state","currentValue","emptyStateMessage","noAppsCreated","noAppsAfterFiltering","keyEvent","key","setState","setFilter","stopPropagation","preventDefault","filterValue","event","value","target","mobileClients","map","clientAppName","indexOf","services","buildTabEnabled","filteredClients","filterClients","e","updateCurrentValue","onValueKeyPress","removeFilter","renderAppCards","getEmptyState"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Toolbar, Filter, EmptyState, EmptyStateTitle, EmptyStateAction, CardGrid } from 'patternfly-react';\nimport DebounceInput from 'react-debounce-input';\nimport './MobileClientCardView.css';\nimport MobileClientCardViewItem from './MobileClientCardViewItem';\nimport CreateClient from '../../containers/CreateClient';\n\nclass MobileClientCardView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { filter: '', currentValue: '' };\n\n    this.emptyStateMessage = {\n      noAppsCreated: 'You have no mobile apps right now. Create one to get started.',\n      noAppsAfterFiltering: 'No mobile apps match the entered filter.'\n    };\n  }\n\n  onValueKeyPress(keyEvent) {\n    const { currentValue } = this.state;\n    if (keyEvent.key === 'Enter' && currentValue && currentValue.length > 0) {\n      this.setState({ currentValue: '' });\n      this.setFilter(currentValue);\n      keyEvent.stopPropagation();\n      keyEvent.preventDefault();\n    }\n  }\n\n  getEmptyState() {\n    return (\n      <EmptyState>\n        <EmptyStateTitle>{this.emptyStateMessage.noAppsCreated}</EmptyStateTitle>\n        <EmptyStateAction>\n          <CreateClient createButtonSize=\"large\" />\n        </EmptyStateAction>\n      </EmptyState>\n    );\n  }\n\n  setFilter(filterValue) {\n    this.setState({ filter: filterValue });\n  }\n\n  removeFilter() {\n    this.setState({ filter: '', currentValue: '' });\n  }\n\n  updateCurrentValue(event) {\n    const { value } = event.target;\n    this.setState({ currentValue: value });\n    this.setFilter(value);\n  }\n\n  getBuilds = app => {\n    const { mobileClientBuilds } = this.props;\n    const builds = mobileClientBuilds.filter(build => build.metadata.labels['mobile-client-id'] === app.metadata.name);\n    const lastBuilds = builds.reduce((prev, curr) => {\n      const bcName = curr.metadata.annotations['openshift.io/build-config.name'];\n      const buildNumber = curr.metadata.annotations['openshift.io/build.number'];\n      const buildStatus = curr.status.phase;\n      if (!prev[bcName] || prev[bcName].buildNumber < buildNumber) {\n        prev[bcName] = {\n          buildNumber,\n          buildStatus\n        };\n      }\n      return prev;\n    }, {});\n    let numFailedBuilds = 0;\n    for (const build in lastBuilds) {\n      if (lastBuilds[build].buildStatus === 'Failed') {\n        numFailedBuilds++;\n      }\n    }\n    const numInProgressBuilds = builds.filter(build => build.status.phase === 'Running').length;\n    return {\n      numFailedBuilds,\n      numInProgressBuilds\n    };\n  };\n\n  filterClients(mobileClients) {\n    return mobileClients\n      .map(app => {\n        const {\n          metadata: { name: clientAppName }\n        } = app;\n        const { filter } = this.state;\n        return clientAppName.indexOf(filter) > -1 ? (\n          <MobileClientCardViewItem\n            key={clientAppName}\n            app={app}\n            services={app.status.services}\n            builds={this.getBuilds(app)}\n            buildTabEnabled={this.props.buildTabEnabled}\n          />\n        ) : null;\n      })\n      .filter(app => app !== null);\n  }\n\n  renderAppCards() {\n    const { mobileClients } = this.props;\n    const filteredClients = this.filterClients(mobileClients);\n    return filteredClients.length ? (\n      <CardGrid matchHeight fluid>\n        <CardGrid.Row key={1}>{filteredClients}</CardGrid.Row>\n      </CardGrid>\n    ) : (\n      <EmptyState>\n        <EmptyStateTitle>{this.emptyStateMessage.noAppsAfterFiltering}</EmptyStateTitle>\n      </EmptyState>\n    );\n  }\n\n  render() {\n    const { mobileClients } = this.props;\n    const { filter, currentValue } = this.state;\n    return (\n      <div className=\"overview\">\n        <Toolbar>\n          <Filter>\n            <DebounceInput\n              minLength={1}\n              debounceTimeout={300}\n              type=\"text\"\n              placeholder=\"Filter by Name\"\n              className=\"toolbarFilter\"\n              value={currentValue}\n              onChange={e => this.updateCurrentValue(e)}\n              onKeyPress={e => this.onValueKeyPress(e)}\n            />\n          </Filter>\n          <div className=\"form-group\">\n            <CreateClient />\n          </div>\n          {filter && filter.length > 0 && (\n            <Toolbar.Results>\n              <Filter.ActiveLabel>Active Filters:</Filter.ActiveLabel>\n              <Filter.List>\n                <Filter.Item key=\"1\" filterData={{ filter }} onRemove={e => this.removeFilter(e)}>\n                  {filter}\n                </Filter.Item>\n              </Filter.List>\n            </Toolbar.Results>\n          )}\n        </Toolbar>\n        {mobileClients.length ? this.renderAppCards() : this.getEmptyState()}\n      </div>\n    );\n  }\n}\n\nexport default MobileClientCardView;\n"]},"metadata":{},"sourceType":"module"}