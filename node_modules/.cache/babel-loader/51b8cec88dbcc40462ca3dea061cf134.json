{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/BindingStatus.js\";\nimport React, { Component } from 'react';\nimport { ListView, Icon } from 'patternfly-react';\n\nvar BindingStatus =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BindingStatus, _Component);\n\n  function BindingStatus(props) {\n    var _this;\n\n    _classCallCheck(this, BindingStatus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BindingStatus).call(this, props));\n    _this.state = {\n      hasStarted: false\n    };\n    _this.updateState = _this.updateState.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BindingStatus, [{\n    key: \"updateState\",\n    value: function updateState() {\n      if (this.props.service.isBindingOperationInProgress() && !this.state.hasStarted) {\n        this.setState({\n          hasStarted: true\n        });\n      }\n\n      if (this.state.hasStarted && !this.props.service.isBindingOperationInProgress()) {\n        this.props.onFinished();\n        this.setState({\n          hasStarted: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.onFinished();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      this.updateState();\n      return React.createElement(ListView.InfoItem, {\n        key: \"bind-status\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.props.service.isBindingOperationInProgress() && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        name: \"spinner\",\n        spin: true,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), this.props.service.getBindingOperation()), this.props.service.isBindingOperationFailed() && React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"pf\",\n        name: \"error-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), \"Operation Failed. Please Try Again Later.\"));\n    }\n  }]);\n\n  return BindingStatus;\n}(Component);\n\nexport default BindingStatus;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/BindingStatus.js"],"names":["React","Component","ListView","Icon","BindingStatus","props","state","hasStarted","updateState","bind","service","isBindingOperationInProgress","setState","onFinished","getBindingOperation","isBindingOperationFailed"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,kBAA/B;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE;AADD,KAAb;AAGA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,uDAAnB;AALiB;AAMlB;;;;kCAEa;AACZ,UAAI,KAAKJ,KAAL,CAAWK,OAAX,CAAmBC,4BAAnB,MAAqD,CAAC,KAAKL,KAAL,CAAWC,UAArE,EAAiF;AAC/E,aAAKK,QAAL,CAAc;AACZL,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;;AACD,UAAI,KAAKD,KAAL,CAAWC,UAAX,IAAyB,CAAC,KAAKF,KAAL,CAAWK,OAAX,CAAmBC,4BAAnB,EAA9B,EAAiF;AAC/E,aAAKN,KAAL,CAAWQ,UAAX;AACA,aAAKD,QAAL,CAAc;AACZL,UAAAA,UAAU,EAAE;AADA,SAAd;AAGD;AACF;;;2CAEsB;AACrB,WAAKF,KAAL,CAAWQ,UAAX;AACD;;;6BAEQ;AACP,WAAKL,WAAL;AACA,aACE,oBAAC,QAAD,CAAU,QAAV;AAAmB,QAAA,GAAG,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWK,OAAX,CAAmBC,4BAAnB,MACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,SAAX;AAAqB,QAAA,IAAI,MAAzB;AAA0B,QAAA,IAAI,EAAC,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEG,KAAKN,KAAL,CAAWK,OAAX,CAAmBI,mBAAnB,EAFH,CAFJ,EAOG,KAAKT,KAAL,CAAWK,OAAX,CAAmBK,wBAAnB,MACC,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,IAAX;AAAgB,QAAA,IAAI,EAAC,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,8CARJ,CADF;AAgBD;;;;EA7CyBd,S;;AAgD5B,eAAeG,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { ListView, Icon } from 'patternfly-react';\n\nclass BindingStatus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasStarted: false\n    };\n    this.updateState = this.updateState.bind(this);\n  }\n\n  updateState() {\n    if (this.props.service.isBindingOperationInProgress() && !this.state.hasStarted) {\n      this.setState({\n        hasStarted: true\n      });\n    }\n    if (this.state.hasStarted && !this.props.service.isBindingOperationInProgress()) {\n      this.props.onFinished();\n      this.setState({\n        hasStarted: false\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.props.onFinished();\n  }\n\n  render() {\n    this.updateState();\n    return (\n      <ListView.InfoItem key=\"bind-status\">\n        {this.props.service.isBindingOperationInProgress() && (\n          <React.Fragment>\n            <Icon name=\"spinner\" spin size=\"lg\" />\n            {this.props.service.getBindingOperation()}\n          </React.Fragment>\n        )}\n        {this.props.service.isBindingOperationFailed() && (\n          <React.Fragment>\n            <Icon type=\"pf\" name=\"error-circle-o\" />\n            Operation Failed. Please Try Again Later.\n          </React.Fragment>\n        )}\n      </ListView.InfoItem>\n    );\n  }\n}\n\nexport default BindingStatus;\n"]},"metadata":{},"sourceType":"module"}