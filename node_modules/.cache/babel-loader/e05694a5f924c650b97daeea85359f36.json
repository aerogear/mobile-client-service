{"ast":null,"code":"function _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Icon } from '../Icon';\nimport { Button } from '../Button';\nimport { Popover } from '../Popover';\nimport { OverlayTrigger } from '../OverlayTrigger';\n/**\n * FieldLevelHelp Component for Patternfly React\n */\n\nvar FieldLevelHelp = function FieldLevelHelp(_ref) {\n  var children = _ref.children,\n      content = _ref.content,\n      close = _ref.close,\n      rootClose = _ref.rootClose,\n      placement = _ref.placement,\n      buttonClass = _ref.buttonClass,\n      props = _objectWithoutProperties(_ref, ['children', 'content', 'close', 'rootClose', 'placement', 'buttonClass']); // backwards compatibility of the existing `close` prop - use that prop if it exists\n\n\n  var closeProp = typeof close !== 'undefined' ? close : rootClose;\n  var overlay = React.createElement(Popover, {\n    id: 'popover'\n  }, content);\n  var buttonClasses = classNames('popover-pf-info', buttonClass);\n  return React.createElement(OverlayTrigger, {\n    overlay: overlay,\n    placement: placement,\n    trigger: ['click'],\n    rootClose: closeProp\n  }, React.createElement(Button, {\n    bsStyle: 'link',\n    className: buttonClasses\n  }, React.createElement(Icon, {\n    type: 'pf',\n    name: 'info'\n  })));\n};\n\nFieldLevelHelp.propTypes = {\n  /** additional fieldlevelhelp classes */\n  content: PropTypes.node,\n\n  /** close prop */\n  close: PropTypes.bool,\n\n  /** leave popover/tooltip open  */\n  rootClose: PropTypes.bool,\n\n  /** overlay placement */\n  placement: PropTypes.string,\n\n  /** button class */\n  buttonClass: PropTypes.string,\n\n  /** children nodes  */\n  children: PropTypes.node\n};\nFieldLevelHelp.defaultProps = {\n  content: null,\n  close: undefined,\n  rootClose: true,\n  placement: 'top',\n  buttonClass: '',\n  children: null\n};\nexport default FieldLevelHelp;","map":null,"metadata":{},"sourceType":"module"}