{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/containers/BuildDownload.js\";\nimport QRCode from 'qrcode.react';\nimport React, { Component } from 'react';\nimport { Button, MessageDialog, Alert, Spinner } from 'patternfly-react';\nimport { connect } from 'react-redux';\nimport '../components/build/BuildDownload.css';\nimport { generateDownloadURL } from '../actions/builds';\n\nvar content = function content(downloadURL) {\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Alert, {\n    type: \"info\",\n    className: \"build-alert\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"These links will remain active for 30 minutes and will not be usable after that time\"), React.createElement(\"dl\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"Download from URL:\"), React.createElement(\"dd\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: downloadURL,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, downloadURL)), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }), React.createElement(\"dt\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"or scan QR code to install:\"), React.createElement(\"dd\", {\n    className: \"build-qr-code\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(QRCode, {\n    value: downloadURL,\n    size: 200,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))));\n};\n\nvar spinner = React.createElement(\"div\", {\n  className: \"build-spinner\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28\n  },\n  __self: this\n}, React.createElement(Spinner, {\n  loading: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 29\n  },\n  __self: this\n}));\n\nvar BuildDownload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BuildDownload, _Component);\n\n  function BuildDownload(props) {\n    var _this;\n\n    _classCallCheck(this, BuildDownload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BuildDownload).call(this, props));\n\n    _this.handleDownload = function () {\n      if (!_this.props.build.metadata.annotations['aerogear.org/download-mobile-artifact']) {\n        _this.props.generateDownloadURL(_this.props.build.metadata.name);\n      }\n\n      _this.setState({\n        showModal: true\n      });\n    };\n\n    _this.handleDialogClose = function () {\n      _this.setState({\n        showModal: false\n      });\n    };\n\n    _this.state = {\n      showModal: false\n    };\n    return _this;\n  }\n\n  _createClass(BuildDownload, [{\n    key: \"render\",\n    value: function render() {\n      var downloadURL = this.props.build.metadata.annotations['aerogear.org/download-mobile-artifact-url'] || '';\n      downloadURL = downloadURL.replace('&amp;', ';');\n      var buildConfigName = this.props.build.metadata.annotations['openshift.io/build-config.name'];\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsSize: this.props.history ? 'xsmall' : null,\n        bsStyle: this.props.history ? 'default' : 'primary',\n        onClick: this.handleDownload,\n        disabled: this.props.build.status.phase !== 'Complete',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Generate Download Link\"), React.createElement(MessageDialog, {\n        show: this.state.showModal,\n        onHide: this.handleDialogClose,\n        primaryAction: function primaryAction() {},\n        primaryActionButtonContent: \"Close\",\n        footer: React.createElement(React.Fragment, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }),\n        title: \"Download \".concat(this.props.appName, \" (\").concat(buildConfigName, \")\"),\n        primaryContent: downloadURL !== '' ? content(downloadURL) : spinner,\n        className: \"build-download-dialog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BuildDownload;\n}(Component);\n\nvar mapDispatchToProps = {\n  generateDownloadURL: generateDownloadURL\n};\nexport default connect(null, mapDispatchToProps)(BuildDownload);","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/containers/BuildDownload.js"],"names":["QRCode","React","Component","Button","MessageDialog","Alert","Spinner","connect","generateDownloadURL","content","downloadURL","spinner","BuildDownload","props","handleDownload","build","metadata","annotations","name","setState","showModal","handleDialogClose","state","replace","buildConfigName","history","status","phase","appName","mapDispatchToProps"],"mappings":"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","sourcesContent":["import QRCode from 'qrcode.react';\nimport React, { Component } from 'react';\nimport { Button, MessageDialog, Alert, Spinner } from 'patternfly-react';\nimport { connect } from 'react-redux';\nimport '../components/build/BuildDownload.css';\nimport { generateDownloadURL } from '../actions/builds';\n\nconst content = downloadURL => (\n  <React.Fragment>\n    <Alert type=\"info\" className=\"build-alert\">\n      These links will remain active for 30 minutes and will not be usable after that time\n    </Alert>\n    <dl>\n      <dt>Download from URL:</dt>\n      <dd>\n        <a href={downloadURL}>{downloadURL}</a>\n      </dd>\n      <br />\n      <dt>or scan QR code to install:</dt>\n      <dd className=\"build-qr-code\">\n        <QRCode value={downloadURL} size={200} />\n      </dd>\n    </dl>\n  </React.Fragment>\n);\n\nconst spinner = (\n  <div className=\"build-spinner\">\n    <Spinner loading />\n  </div>\n);\n\nclass BuildDownload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false\n    };\n  }\n\n  handleDownload = () => {\n    if (!this.props.build.metadata.annotations['aerogear.org/download-mobile-artifact']) {\n      this.props.generateDownloadURL(this.props.build.metadata.name);\n    }\n    this.setState({\n      showModal: true\n    });\n  };\n\n  handleDialogClose = () => {\n    this.setState({\n      showModal: false\n    });\n  };\n\n  render() {\n    let downloadURL = this.props.build.metadata.annotations['aerogear.org/download-mobile-artifact-url'] || '';\n    downloadURL = downloadURL.replace('&amp;', ';');\n    const buildConfigName = this.props.build.metadata.annotations['openshift.io/build-config.name'];\n    return (\n      <React.Fragment>\n        <Button\n          bsSize={this.props.history ? 'xsmall' : null}\n          bsStyle={this.props.history ? 'default' : 'primary'}\n          onClick={this.handleDownload}\n          disabled={this.props.build.status.phase !== 'Complete'}\n        >\n          Generate Download Link\n        </Button>\n        <MessageDialog\n          show={this.state.showModal}\n          onHide={this.handleDialogClose}\n          primaryAction={() => {}}\n          primaryActionButtonContent=\"Close\"\n          footer={<React.Fragment />}\n          title={`Download ${this.props.appName} (${buildConfigName})`}\n          primaryContent={downloadURL !== '' ? content(downloadURL) : spinner}\n          className=\"build-download-dialog\"\n        />\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  generateDownloadURL\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(BuildDownload);\n"]},"metadata":{},"sourceType":"module"}