{"ast":null,"code":"import _regeneratorRuntime from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { isArray, isObject, map } from 'lodash-es';\nimport { fetchAction, fetchAndWatchOpenShiftResource } from './fetch';\nimport { buildConfigsService } from '../services/buildconfigs';\nexport var BUILDS_REQUEST = 'BUILDS_REQUEST';\nexport var BUILDS_SUCCESS = 'BUILDS_SUCCESS';\nexport var BUILDS_FAILURE = 'BUILDS_FAILURE';\nexport var BUILD_TRIGGER_REQUEST = 'BUILD_TRIGGER_REQUEST';\nexport var BUILD_TRIGGER_SUCCESS = 'BUILD_TRIGGER_SUCCESS';\nexport var BUILD_TRIGGER_FAILURE = 'BUILD_TRIGGER_FAILURE';\nexport var BUILDS_MODIFIED_SUCCESS = 'BUILDS_MODIFIED_SUCCESS';\nexport var BUILDS_DELETE_SUCCESS = 'BUILDS_DELETE_SUCCESS';\nexport var fetchAndWatchBuilds = fetchAndWatchOpenShiftResource(buildConfigsService.buildRes, 'builds', {\n  REQUEST: BUILDS_REQUEST,\n  SUCCESS: BUILDS_SUCCESS,\n  FAILURE: BUILDS_FAILURE,\n  ADDED: BUILD_TRIGGER_SUCCESS,\n  MODIFIED: BUILDS_MODIFIED_SUCCESS,\n  DELETED: BUILDS_DELETE_SUCCESS\n}, {\n  success: function success(type, data) {\n    if (data.items && isArray(data.items)) {\n      var items = map(data.items, function (item) {\n        return buildConfigsService.addBuildUrl(item);\n      });\n      data.items = items;\n      return {\n        type: type,\n        result: data\n      };\n    } else if (isObject(data)) {\n      var result = buildConfigsService.addBuildUrl(data);\n      return {\n        type: type,\n        result: result\n      };\n    }\n\n    return {\n      type: type,\n      result: data\n    };\n  }\n});\nexport var triggerBuild = function triggerBuild(name) {\n  return fetchAction([BUILD_TRIGGER_REQUEST, BUILD_TRIGGER_SUCCESS, BUILD_TRIGGER_FAILURE],\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            return _context.abrupt(\"return\", buildConfigsService.trigger(name));\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  })))();\n};\nexport var BUILD_DOWNLOAD_REQUEST = 'BUILD_DOWNLOAD_REQUEST';\nexport var BUILD_DOWNLOAD_SUCCESS = 'BUILD_DOWNLOAD_SUCCESS';\nexport var BUILD_DOWNLOAD_FAILURE = 'BUILD_DOWNLOAD_FAILURE';\nexport var generateDownloadURL = function generateDownloadURL(name) {\n  return fetchAction([BUILD_DOWNLOAD_REQUEST, BUILD_DOWNLOAD_SUCCESS, BUILD_DOWNLOAD_FAILURE],\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            return _context2.abrupt(\"return\", buildConfigsService.generateDownloadURL(name));\n\n          case 1:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  })))();\n};","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/actions/builds.js"],"names":["isArray","isObject","map","fetchAction","fetchAndWatchOpenShiftResource","buildConfigsService","BUILDS_REQUEST","BUILDS_SUCCESS","BUILDS_FAILURE","BUILD_TRIGGER_REQUEST","BUILD_TRIGGER_SUCCESS","BUILD_TRIGGER_FAILURE","BUILDS_MODIFIED_SUCCESS","BUILDS_DELETE_SUCCESS","fetchAndWatchBuilds","buildRes","REQUEST","SUCCESS","FAILURE","ADDED","MODIFIED","DELETED","success","type","data","items","item","addBuildUrl","result","triggerBuild","name","trigger","BUILD_DOWNLOAD_REQUEST","BUILD_DOWNLOAD_SUCCESS","BUILD_DOWNLOAD_FAILURE","generateDownloadURL"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,QAAlB,EAA4BC,GAA5B,QAAuC,WAAvC;AACA,SAASC,WAAT,EAAsBC,8BAAtB,QAA4D,SAA5D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AACP,OAAO,IAAMC,cAAc,GAAG,gBAAvB;AAEP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,uBAAuB,GAAG,yBAAhC;AACP,OAAO,IAAMC,qBAAqB,GAAG,uBAA9B;AAEP,OAAO,IAAMC,mBAAmB,GAAGV,8BAA8B,CAC/DC,mBAAmB,CAACU,QAD2C,EAE/D,QAF+D,EAG/D;AACEC,EAAAA,OAAO,EAAEV,cADX;AAEEW,EAAAA,OAAO,EAAEV,cAFX;AAGEW,EAAAA,OAAO,EAAEV,cAHX;AAIEW,EAAAA,KAAK,EAAET,qBAJT;AAKEU,EAAAA,QAAQ,EAAER,uBALZ;AAMES,EAAAA,OAAO,EAAER;AANX,CAH+D,EAW/D;AACES,EAAAA,OAAO,EAAE,iBAACC,IAAD,EAAOC,IAAP,EAAgB;AACvB,QAAIA,IAAI,CAACC,KAAL,IAAczB,OAAO,CAACwB,IAAI,CAACC,KAAN,CAAzB,EAAuC;AACrC,UAAMA,KAAK,GAAGvB,GAAG,CAACsB,IAAI,CAACC,KAAN,EAAa,UAAAC,IAAI;AAAA,eAAIrB,mBAAmB,CAACsB,WAApB,CAAgCD,IAAhC,CAAJ;AAAA,OAAjB,CAAjB;AACAF,MAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACA,aAAO;AAAEF,QAAAA,IAAI,EAAJA,IAAF;AAAQK,QAAAA,MAAM,EAAEJ;AAAhB,OAAP;AACD,KAJD,MAIO,IAAIvB,QAAQ,CAACuB,IAAD,CAAZ,EAAoB;AACzB,UAAMI,MAAM,GAAGvB,mBAAmB,CAACsB,WAApB,CAAgCH,IAAhC,CAAf;AACA,aAAO;AAAED,QAAAA,IAAI,EAAJA,IAAF;AAAQK,QAAAA,MAAM,EAANA;AAAR,OAAP;AACD;;AACD,WAAO;AAAEL,MAAAA,IAAI,EAAJA,IAAF;AAAQK,MAAAA,MAAM,EAAEJ;AAAhB,KAAP;AACD;AAXH,CAX+D,CAA1D;AA0BP,OAAO,IAAMK,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI;AAAA,SAC9B3B,WAAW,CAAC,CAACM,qBAAD,EAAwBC,qBAAxB,EAA+CC,qBAA/C,CAAD;AAAA;AAAA;AAAA;AAAA,2BAAwE;AAAA;AAAA;AAAA;AAAA;AAAA,6CACjFN,mBAAmB,CAAC0B,OAApB,CAA4BD,IAA5B,CADiF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAxE,GAAX,EAD8B;AAAA,CAAzB;AAKP,OAAO,IAAME,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AACP,OAAO,IAAMC,sBAAsB,GAAG,wBAA/B;AAEP,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAL,IAAI;AAAA,SACrC3B,WAAW,CAAC,CAAC6B,sBAAD,EAAyBC,sBAAzB,EAAiDC,sBAAjD,CAAD;AAAA;AAAA;AAAA;AAAA,2BAA2E;AAAA;AAAA;AAAA;AAAA;AAAA,8CACpF7B,mBAAmB,CAAC8B,mBAApB,CAAwCL,IAAxC,CADoF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3E,GAAX,EADqC;AAAA,CAAhC","sourcesContent":["import { isArray, isObject, map } from 'lodash-es';\nimport { fetchAction, fetchAndWatchOpenShiftResource } from './fetch';\nimport { buildConfigsService } from '../services/buildconfigs';\n\nexport const BUILDS_REQUEST = 'BUILDS_REQUEST';\nexport const BUILDS_SUCCESS = 'BUILDS_SUCCESS';\nexport const BUILDS_FAILURE = 'BUILDS_FAILURE';\n\nexport const BUILD_TRIGGER_REQUEST = 'BUILD_TRIGGER_REQUEST';\nexport const BUILD_TRIGGER_SUCCESS = 'BUILD_TRIGGER_SUCCESS';\nexport const BUILD_TRIGGER_FAILURE = 'BUILD_TRIGGER_FAILURE';\n\nexport const BUILDS_MODIFIED_SUCCESS = 'BUILDS_MODIFIED_SUCCESS';\nexport const BUILDS_DELETE_SUCCESS = 'BUILDS_DELETE_SUCCESS';\n\nexport const fetchAndWatchBuilds = fetchAndWatchOpenShiftResource(\n  buildConfigsService.buildRes,\n  'builds',\n  {\n    REQUEST: BUILDS_REQUEST,\n    SUCCESS: BUILDS_SUCCESS,\n    FAILURE: BUILDS_FAILURE,\n    ADDED: BUILD_TRIGGER_SUCCESS,\n    MODIFIED: BUILDS_MODIFIED_SUCCESS,\n    DELETED: BUILDS_DELETE_SUCCESS\n  },\n  {\n    success: (type, data) => {\n      if (data.items && isArray(data.items)) {\n        const items = map(data.items, item => buildConfigsService.addBuildUrl(item));\n        data.items = items;\n        return { type, result: data };\n      } else if (isObject(data)) {\n        const result = buildConfigsService.addBuildUrl(data);\n        return { type, result };\n      }\n      return { type, result: data };\n    }\n  }\n);\n\nexport const triggerBuild = name =>\n  fetchAction([BUILD_TRIGGER_REQUEST, BUILD_TRIGGER_SUCCESS, BUILD_TRIGGER_FAILURE], async () =>\n    buildConfigsService.trigger(name)\n  )();\n\nexport const BUILD_DOWNLOAD_REQUEST = 'BUILD_DOWNLOAD_REQUEST';\nexport const BUILD_DOWNLOAD_SUCCESS = 'BUILD_DOWNLOAD_SUCCESS';\nexport const BUILD_DOWNLOAD_FAILURE = 'BUILD_DOWNLOAD_FAILURE';\n\nexport const generateDownloadURL = name =>\n  fetchAction([BUILD_DOWNLOAD_REQUEST, BUILD_DOWNLOAD_SUCCESS, BUILD_DOWNLOAD_FAILURE], async () =>\n    buildConfigsService.generateDownloadURL(name)\n  )();\n"]},"metadata":{},"sourceType":"module"}