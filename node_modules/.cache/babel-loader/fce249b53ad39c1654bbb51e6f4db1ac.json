{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../Icon';\n/**\n * ListViewIcon used as a default content for ListViewLeft\n */\n\nvar ListViewIcon = function ListViewIcon(_ref) {\n  var type = _ref.type,\n      name = _ref.name,\n      className = _ref.className,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, ['type', 'name', 'className', 'size']);\n\n  return React.createElement(Icon, _extends({\n    type: type,\n    name: name,\n    className: classNames('list-view-pf-icon-' + size, className)\n  }, props));\n};\n\nListViewIcon.propTypes = {\n  /** Icon type (pf or fa) */\n  type: PropTypes.string,\n\n  /** Name of the icon font */\n  name: PropTypes.string.isRequired,\n\n  /** additional classes */\n  className: PropTypes.string,\n\n  /** Icon size (sm, md, lg), defaults to 'sm' */\n  size: PropTypes.oneOf(['sm', 'md', 'lg'])\n};\nListViewIcon.defaultProps = {\n  type: 'fa',\n  size: 'sm',\n  className: ''\n};\nexport default ListViewIcon;","map":null,"metadata":{},"sourceType":"module"}