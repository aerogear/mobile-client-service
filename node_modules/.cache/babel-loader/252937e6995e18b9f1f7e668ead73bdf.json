{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/BoundServiceRow.js\";\nimport React, { Component } from 'react';\nimport { ListViewItem, Row, Col, DropdownKebab } from 'patternfly-react';\nimport { get as _get } from 'lodash-es';\nimport '../configuration/ServiceSDKInfo.css';\nimport './ServiceRow.css';\nimport DeleteItemButton from '../../containers/DeleteItemButton';\nimport BindingStatus from './BindingStatus';\nimport BindButton from './BindButton';\n\nfunction configurationView(configuration) {\n  if (configuration.type === 'href') {\n    return React.createElement(\"a\", {\n      href: configuration.value,\n      target: \"_blank\",\n      rel: \"noreferrer noopener\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, configuration.value);\n  }\n\n  return configuration.value;\n}\n\nvar BoundServiceRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BoundServiceRow, _Component);\n\n  function BoundServiceRow(props) {\n    var _this;\n\n    _classCallCheck(this, BoundServiceRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BoundServiceRow).call(this, props));\n    _this.renderServiceBadge = _this.renderServiceBadge.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderServiceDetails = _this.renderServiceDetails.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(BoundServiceRow, [{\n    key: \"renderServiceBadge\",\n    value: function renderServiceBadge() {\n      var icon = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      });\n\n      if (this.props.service.getIconClass() != null && this.props.service.getIconClass().length > 0) {\n        icon = React.createElement(\"span\", {\n          className: \"\".concat(this.props.service.getIconClass(), \" logo\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        });\n      } else {\n        icon = React.createElement(\"img\", {\n          src: this.props.service.getLogoUrl(),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n\n      var serviceDetailName = this.props.service.getId();\n\n      var mdcDisplayName = _get(this.props.service, 'serviceInstance.metadata.data.labels.mdcName');\n\n      if (mdcDisplayName) {\n        serviceDetailName = mdcDisplayName;\n      }\n\n      return React.createElement(Col, {\n        key: this.props.service.getId(),\n        md: 3,\n        className: \"service-sdk-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, icon, React.createElement(\"div\", {\n        className: \"service-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.props.service.getName()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, serviceDetailName))))));\n    }\n  }, {\n    key: \"renderServiceDetails\",\n    value: function renderServiceDetails() {\n      var documentationFragment;\n      var propertyFragment;\n      var docUrl = this.props.service.getDocumentationUrl();\n      var serviceConfigurations = this.props.service.getConfiguration(this.props.appName);\n\n      if (docUrl) {\n        documentationFragment = React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 2,\n          className: \"detailsKey\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71\n          },\n          __self: this\n        }, \"Documentation:\"), React.createElement(Col, {\n          md: 10,\n          className: \"detailsValue\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: docUrl,\n          target: \"_blank\",\n          rel: \"noreferrer noopener\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }, \"SDK Setup \", React.createElement(\"i\", {\n          className: \"fa fa-external-link\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }))));\n      }\n\n      if (serviceConfigurations) {\n        propertyFragment = serviceConfigurations.map(function (configuration) {\n          return React.createElement(Row, {\n            key: configuration.label,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }, React.createElement(Col, {\n            md: 2,\n            className: \"detailsKey\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86\n            },\n            __self: this\n          }, configuration.label, \":\"), React.createElement(Col, {\n            md: 10,\n            className: \"detailsValue\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89\n            },\n            __self: this\n          }, configurationView(configuration)));\n        });\n      } else {\n        propertyFragment = React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, \"No configuration data to show for this service.\");\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, documentationFragment, propertyFragment);\n    }\n  }, {\n    key: \"renderBindingStatus\",\n    value: function renderBindingStatus() {\n      // check if the service is UPS.\n      // binding status is not shown for other services in the BoundServiceRow view.\n      // binding status is normally shown in UnboundServiceRow views.\n      if (!this.props.service.isUPSService()) {\n        return null;\n      }\n\n      return React.createElement(BindingStatus, {\n        key: \"\".concat(this.props.service.getId(), \"binding status\"),\n        service: this.props.service,\n        onFinished: this.props.onFinished,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderBindingButtons\",\n    value: function renderBindingButtons() {\n      // check if the service is UPS. we only allow multiple bindings in case of UPS\n      if (!this.props.service.isUPSService()) {\n        return null;\n      }\n\n      var configurationExt = this.props.service.getConfigurationExtAsJSON(); // sample value for configurationExt\n\n      /*\n        [\n          {\"type\":\"ios\",\"typeLabel\":\"iOS\",\"url\":\"https://ups-mdc.127.0.0.1.nip.io/#/app/8936dead-7552-4b55-905c-926752c759af/variants/c8d70b96-bd52-499c-845b-756089e06d36\",\"id\":\"c8d70b96-bd52-499c-845b-756089e06d36\"},\n          {\"type\":\"android\",\"typeLabel\":\"Android\",\"url\":\"https://ups-mdc.127.0.0.1.nip.io/#/app/8936dead-7552-4b55-905c-926752c759af/variants/2d76d1eb-65ef-471c-8d21-75f80c3f370f\",\"id\":\"2d76d1eb-65ef-471c-8d21-75f80c3f370f\"}\n        ]\n      */\n\n      if (configurationExt && configurationExt.length) {\n        if (configurationExt[0] && configurationExt[0].length && configurationExt[0].length >= 2) {\n          // there are 2 variants already. can't create another variant.\n          return null;\n        }\n      }\n\n      return React.createElement(BindButton, {\n        service: this.props.service,\n        onClick: this.props.onCreateBinding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderDeleteBindingDropdowns\",\n    value: function renderDeleteBindingDropdowns() {\n      var _this2 = this;\n\n      var crs = this.props.service.getCustomResourcesForApp(this.props.appName);\n      return React.createElement(DropdownKebab, {\n        id: \"delete-binding}\",\n        pullRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, crs.map(function (cr) {\n        return React.createElement(DeleteItemButton, {\n          key: \"delete-cr-\".concat(cr.getName()),\n          title: cr.getPlatform ? \"Delete \".concat(cr.getPlatform()) : undefined,\n          itemType: \"config\",\n          itemName: cr.getName(),\n          onDelete: function onDelete() {\n            return _this2.props.onDeleteBinding(cr);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151\n          },\n          __self: this\n        });\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ListViewItem, {\n        additionalInfo: [this.renderServiceBadge(), this.renderBindingStatus()],\n        className: \"boundService\",\n        actions: React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169\n          },\n          __self: this\n        }, this.renderBindingButtons(), this.renderDeleteBindingDropdowns()),\n        hideCloseIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, this.renderServiceDetails());\n    }\n  }]);\n\n  return BoundServiceRow;\n}(Component);\n\nexport default BoundServiceRow;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/BoundServiceRow.js"],"names":["React","Component","ListViewItem","Row","Col","DropdownKebab","get","_get","DeleteItemButton","BindingStatus","BindButton","configurationView","configuration","type","value","BoundServiceRow","props","renderServiceBadge","bind","renderServiceDetails","icon","service","getIconClass","length","getLogoUrl","serviceDetailName","getId","mdcDisplayName","getName","documentationFragment","propertyFragment","docUrl","getDocumentationUrl","serviceConfigurations","getConfiguration","appName","map","label","isUPSService","onFinished","configurationExt","getConfigurationExtAsJSON","onCreateBinding","crs","getCustomResourcesForApp","cr","getPlatform","undefined","onDeleteBinding","renderBindingStatus","renderBindingButtons","renderDeleteBindingDropdowns"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ListViewItem, Row, Col, DropdownKebab } from 'patternfly-react';\nimport { get as _get } from 'lodash-es';\nimport '../configuration/ServiceSDKInfo.css';\nimport './ServiceRow.css';\nimport DeleteItemButton from '../../containers/DeleteItemButton';\nimport BindingStatus from './BindingStatus';\nimport BindButton from './BindButton';\n\nfunction configurationView(configuration) {\n  if (configuration.type === 'href') {\n    return (\n      <a href={configuration.value} target=\"_blank\" rel=\"noreferrer noopener\">\n        {configuration.value}\n      </a>\n    );\n  }\n\n  return configuration.value;\n}\n\nclass BoundServiceRow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderServiceBadge = this.renderServiceBadge.bind(this);\n    this.renderServiceDetails = this.renderServiceDetails.bind(this);\n  }\n\n  renderServiceBadge() {\n    let icon = <div />;\n    if (this.props.service.getIconClass() != null && this.props.service.getIconClass().length > 0) {\n      icon = <span className={`${this.props.service.getIconClass()} logo`} />;\n    } else {\n      icon = <img src={this.props.service.getLogoUrl()} alt=\"\" />;\n    }\n\n    let serviceDetailName = this.props.service.getId();\n    const mdcDisplayName = _get(this.props.service, 'serviceInstance.metadata.data.labels.mdcName');\n    if (mdcDisplayName) {\n      serviceDetailName = mdcDisplayName;\n    }\n\n    return (\n      <Col key={this.props.service.getId()} md={3} className=\"service-sdk-info\">\n        <Col md={12}>\n          {icon}\n          <div className=\"service-name\">\n            <h4>\n              <div>{this.props.service.getName()}</div>\n              <div>\n                <small>{serviceDetailName}</small>\n              </div>\n            </h4>\n          </div>\n        </Col>\n      </Col>\n    );\n  }\n\n  renderServiceDetails() {\n    let documentationFragment;\n    let propertyFragment;\n\n    const docUrl = this.props.service.getDocumentationUrl();\n    const serviceConfigurations = this.props.service.getConfiguration(this.props.appName);\n\n    if (docUrl) {\n      documentationFragment = (\n        <Row>\n          <Col md={2} className=\"detailsKey\">\n            Documentation:\n          </Col>\n          <Col md={10} className=\"detailsValue\">\n            <a href={docUrl} target=\"_blank\" rel=\"noreferrer noopener\">\n              SDK Setup <i className=\"fa fa-external-link\" aria-hidden=\"true\" />\n            </a>\n          </Col>\n        </Row>\n      );\n    }\n\n    if (serviceConfigurations) {\n      propertyFragment = serviceConfigurations.map(configuration => (\n        <Row key={configuration.label}>\n          <Col md={2} className=\"detailsKey\">\n            {configuration.label}:\n          </Col>\n          <Col md={10} className=\"detailsValue\">\n            {configurationView(configuration)}\n          </Col>\n        </Row>\n      ));\n    } else {\n      propertyFragment = <div>No configuration data to show for this service.</div>;\n    }\n\n    return (\n      <div>\n        {documentationFragment}\n        {propertyFragment}\n      </div>\n    );\n  }\n\n  renderBindingStatus() {\n    // check if the service is UPS.\n    // binding status is not shown for other services in the BoundServiceRow view.\n    // binding status is normally shown in UnboundServiceRow views.\n    if (!this.props.service.isUPSService()) {\n      return null;\n    }\n\n    return (\n      <BindingStatus\n        key={`${this.props.service.getId()}binding status`}\n        service={this.props.service}\n        onFinished={this.props.onFinished}\n      />\n    );\n  }\n\n  renderBindingButtons() {\n    // check if the service is UPS. we only allow multiple bindings in case of UPS\n    if (!this.props.service.isUPSService()) {\n      return null;\n    }\n    const configurationExt = this.props.service.getConfigurationExtAsJSON();\n    // sample value for configurationExt\n    /*\n      [\n        {\"type\":\"ios\",\"typeLabel\":\"iOS\",\"url\":\"https://ups-mdc.127.0.0.1.nip.io/#/app/8936dead-7552-4b55-905c-926752c759af/variants/c8d70b96-bd52-499c-845b-756089e06d36\",\"id\":\"c8d70b96-bd52-499c-845b-756089e06d36\"},\n        {\"type\":\"android\",\"typeLabel\":\"Android\",\"url\":\"https://ups-mdc.127.0.0.1.nip.io/#/app/8936dead-7552-4b55-905c-926752c759af/variants/2d76d1eb-65ef-471c-8d21-75f80c3f370f\",\"id\":\"2d76d1eb-65ef-471c-8d21-75f80c3f370f\"}\n      ]\n    */\n    if (configurationExt && configurationExt.length) {\n      if (configurationExt[0] && configurationExt[0].length && configurationExt[0].length >= 2) {\n        // there are 2 variants already. can't create another variant.\n        return null;\n      }\n    }\n\n    return <BindButton service={this.props.service} onClick={this.props.onCreateBinding} />;\n  }\n\n  renderDeleteBindingDropdowns() {\n    const crs = this.props.service.getCustomResourcesForApp(this.props.appName);\n    return (\n      <DropdownKebab id={`delete-binding}`} pullRight>\n        {crs.map(cr => (\n          <DeleteItemButton\n            key={`delete-cr-${cr.getName()}`}\n            title={cr.getPlatform ? `Delete ${cr.getPlatform()}` : undefined}\n            itemType=\"config\"\n            itemName={cr.getName()}\n            onDelete={() => this.props.onDeleteBinding(cr)}\n          />\n        ))}\n      </DropdownKebab>\n    );\n  }\n\n  render() {\n    return (\n      <ListViewItem\n        additionalInfo={[this.renderServiceBadge(), this.renderBindingStatus()]}\n        className=\"boundService\"\n        actions={\n          <div>\n            {this.renderBindingButtons()}\n            {this.renderDeleteBindingDropdowns()}\n          </div>\n        }\n        hideCloseIcon\n      >\n        {this.renderServiceDetails()}\n      </ListViewItem>\n    );\n  }\n}\n\nexport default BoundServiceRow;\n"]},"metadata":{},"sourceType":"module"}