{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LoginCardInput from './LoginCardInput';\nimport LoginCardSettings from './LoginCardSettings';\nimport LoginCardSubmitButton from './LoginCardSubmitButton';\nimport LoginFormError from './LoginFormError';\nimport { Form } from '../../../../index';\nimport { noop } from '../../../../common/helpers';\n\nvar LoginCardForm = function LoginCardForm(_ref) {\n  var usernameField = _ref.usernameField,\n      passwordField = _ref.passwordField,\n      additionalFields = _ref.additionalFields,\n      submitText = _ref.submitText,\n      disableSubmit = _ref.disableSubmit,\n      onSubmit = _ref.onSubmit,\n      forgotPassword = _ref.forgotPassword,\n      rememberMe = _ref.rememberMe,\n      submitError = _ref.submitError,\n      showError = _ref.showError,\n      attributes = _ref.attributes,\n      isSubmitting = _ref.isSubmitting,\n      topErrorOnly = _ref.topErrorOnly;\n  return React.createElement(Form, _extends({\n    onSubmit: onSubmit,\n    noValidate: true\n  }, attributes), React.createElement(LoginFormError, {\n    show: showError,\n    topErrorOnly: topErrorOnly\n  }, submitError), React.createElement(LoginCardInput, _extends({}, usernameField, {\n    topErrorOnly: topErrorOnly\n  })), React.createElement(LoginCardInput, _extends({}, passwordField, {\n    topErrorOnly: topErrorOnly\n  })), additionalFields, React.createElement(LoginCardSettings, {\n    rememberMe: rememberMe,\n    forgotPassword: forgotPassword\n  }), React.createElement(LoginCardSubmitButton, {\n    isDisabled: disableSubmit,\n    isLoading: isSubmitting\n  }, submitText));\n};\n\nLoginCardForm.propTypes = {\n  /** login username input's props */\n  usernameField: PropTypes.shape(_extends({}, LoginCardInput.propTypes)),\n\n  /** login password input's props */\n  passwordField: PropTypes.shape(_extends({}, LoginCardInput.propTypes)),\n\n  /** Add additional fields under the inputs  */\n  additionalFields: PropTypes.node,\n\n  /** The submit button text */\n  submitText: PropTypes.string,\n\n  /** Sets the submit button disability */\n  disableSubmit: PropTypes.bool,\n\n  /** A callback that will be triggered when the form is submitted */\n  onSubmit: PropTypes.func,\n\n  /** The forgotPassowrd section props */\n  forgotPassword: LoginCardSettings.propTypes.forgotPassword,\n\n  /** The rememberMe section props */\n  rememberMe: LoginCardSettings.propTypes.rememberMe,\n\n  /** The login form error which is usually shown after the submit - a server error. */\n  submitError: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** Controlls the form error visibility */\n  showError: PropTypes.bool,\n\n  /** Additional HTML attributes to pass to the form */\n  attributes: PropTypes.object,\n\n  /** Indicates the state of the form submit and whether to show a spinner or not */\n  isSubmitting: PropTypes.bool,\n\n  /** when topErrorOnly is set to true,\n   * the helpblock errors/warnings under each input won't appear,\n   * instead we will have only the form error above.\n   */\n  topErrorOnly: PropTypes.bool\n};\nLoginCardForm.defaultProps = {\n  usernameField: _extends({}, LoginCardInput.defaultProps, {\n    id: 'card_email',\n    type: 'email',\n    placeholder: 'Email Address'\n  }),\n  passwordField: _extends({}, LoginCardInput.defaultProps, {\n    id: 'card_password',\n    type: 'password',\n    placeholder: 'Password',\n    minLength: 8\n  }),\n  additionalFields: null,\n  submitText: null,\n  disableSubmit: false,\n  onSubmit: noop,\n  forgotPassword: {\n    label: null,\n    href: '#',\n    onClick: noop\n  },\n  rememberMe: {\n    label: null\n  },\n  submitError: null,\n  showError: false,\n  attributes: null,\n  isSubmitting: false,\n  topErrorOnly: false\n};\nexport default LoginCardForm;","map":null,"metadata":{},"sourceType":"module"}