{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport WizardPattern from './WizardPattern';\nimport { wizardStepShape } from './WizardPatternConstants';\nimport { noop, propOrState, excludeKeys } from '../../../index';\n/**\n * StatefulWizardPattern - the Stateful Wizard Pattern component.\n */\n\nvar StatefulWizardPattern = function (_React$Component) {\n  _inherits(StatefulWizardPattern, _React$Component);\n\n  _createClass(StatefulWizardPattern, null, [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return {\n        activeStepIndex: propOrState(nextProps, prevState, 'activeStepIndex')\n      };\n    }\n  }]);\n\n  function StatefulWizardPattern(props) {\n    _classCallCheck(this, StatefulWizardPattern);\n\n    var _this = _possibleConstructorReturn(this, (StatefulWizardPattern.__proto__ || Object.getPrototypeOf(StatefulWizardPattern)).call(this, props));\n\n    _this.onStepChanged = function (newStepIndex) {\n      var _this$props = _this.props,\n          shouldPreventStepChange = _this$props.shouldPreventStepChange,\n          steps = _this$props.steps;\n      var activeStepIndex = _this.state.activeStepIndex;\n      var shouldPreventExit = steps[activeStepIndex].shouldPreventExit;\n      var shouldPreventEnter = steps[newStepIndex].shouldPreventEnter;\n\n      if (shouldPreventStepChange(activeStepIndex, newStepIndex) || shouldPreventExit && shouldPreventExit(newStepIndex) || shouldPreventEnter && shouldPreventEnter(activeStepIndex)) {\n        return;\n      }\n\n      _this.setState({\n        activeStepIndex: newStepIndex\n      });\n    };\n\n    _this.state = {\n      activeStepIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(StatefulWizardPattern, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          shouldDisableNextStep = _props.shouldDisableNextStep,\n          shouldDisablePreviousStep = _props.shouldDisablePreviousStep,\n          shouldDisableCancelButton = _props.shouldDisableCancelButton,\n          otherProps = _objectWithoutProperties(_props, ['shouldDisableNextStep', 'shouldDisablePreviousStep', 'shouldDisableCancelButton']);\n\n      var activeStepIndex = this.state.activeStepIndex; // NOTE: the steps array is passed down with ...otherProps, including any shouldPreventEnter or shouldPreventExit functions inside it.\n      // These functions are for StatefulWizardPattern only and should not be used in WizardPattern despite being passed down here.\n\n      return React.createElement(WizardPattern, _extends({\n        nextStepDisabled: shouldDisableNextStep(activeStepIndex),\n        previousStepDisabled: shouldDisablePreviousStep(activeStepIndex),\n        cancelButtonDisabled: shouldDisableCancelButton(activeStepIndex)\n      }, excludeKeys(otherProps, ['shouldPreventStepChange']), {\n        activeStepIndex: activeStepIndex // Value from state, as set by getDerivedStateFromProps\n        ,\n        onStepChanged: this.onStepChanged\n      }));\n    }\n  }]);\n\n  return StatefulWizardPattern;\n}(React.Component);\n\nStatefulWizardPattern.propTypes = _extends({}, excludeKeys(WizardPattern.propTypes, ['activeStepIndex', 'nextStepDisabled', 'previousStepDisabled', 'cancelButtonDisabled']), {\n  steps: PropTypes.arrayOf(PropTypes.shape(_extends({}, wizardStepShape, {\n    shouldPreventEnter: PropTypes.func,\n    shouldPreventExit: PropTypes.func\n  }))),\n  shouldDisableNextStep: PropTypes.func,\n  shouldDisablePreviousStep: PropTypes.func,\n  shouldDisableCancelButton: PropTypes.func,\n  shouldPreventStepChange: PropTypes.func\n});\nStatefulWizardPattern.defaultProps = _extends({}, excludeKeys(WizardPattern.defaultProps, ['activeStepIndex', 'nextStepDisabled', 'previousStepDisabled', 'cancelButtonDisabled']), {\n  shouldDisableNextStep: noop,\n  shouldDisablePreviousStep: noop,\n  shouldDisableCancelButton: noop,\n  shouldPreventStepChange: noop\n});\nStatefulWizardPattern.displayName = 'StatefulWizardPattern';\nexport default StatefulWizardPattern;","map":null,"metadata":{},"sourceType":"module"}