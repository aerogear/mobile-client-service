{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { noop } from '../../common/helpers';\n\nvar RemoveButton = function RemoveButton(_ref) {\n  var className = _ref.className,\n      title = _ref.title,\n      onRemoveClick = _ref.onRemoveClick,\n      props = _objectWithoutProperties(_ref, ['className', 'title', 'onRemoveClick']);\n\n  var classes = classNames('pficon pficon-close', className);\n  return React.createElement('a', {\n    href: '#',\n    onClick: function onClick(e) {\n      e.preventDefault();\n      onRemoveClick && onRemoveClick();\n    },\n    className: 'pf-remove-button'\n  }, React.createElement('span', _extends({\n    className: classes\n  }, props, {\n    'aria-hidden': 'true'\n  })), React.createElement('span', {\n    className: 'sr-only'\n  }, title));\n};\n\nRemoveButton.propTypes = {\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** Reader title text */\n  title: PropTypes.string,\n\n  /** Callback when remove button is clicked */\n  onRemoveClick: PropTypes.func\n};\nRemoveButton.defaultProps = {\n  className: '',\n  title: 'Remove',\n  onRemoveClick: noop\n};\nexport default RemoveButton;","map":null,"metadata":{},"sourceType":"module"}