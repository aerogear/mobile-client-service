{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PaginationRowArrowIcon from './PaginationRowArrowIcon';\nimport { noop } from '../../common/helpers';\n/**\n * PaginationRowBack component for Patternfly React\n */\n\nvar PaginationRowBack = function PaginationRowBack(_ref) {\n  var className = _ref.className,\n      page = _ref.page,\n      messagesFirstPage = _ref.messagesFirstPage,\n      messagesPreviousPage = _ref.messagesPreviousPage,\n      onFirstPage = _ref.onFirstPage,\n      onPreviousPage = _ref.onPreviousPage,\n      props = _objectWithoutProperties(_ref, ['className', 'page', 'messagesFirstPage', 'messagesPreviousPage', 'onFirstPage', 'onPreviousPage']);\n\n  var classes = classNames('pagination', 'pagination-pf-back', className);\n  return React.createElement('ul', _extends({\n    className: classes\n  }, props), React.createElement('li', {\n    className: page === 1 ? 'disabled' : ''\n  }, React.createElement('a', {\n    href: '#',\n    title: messagesFirstPage,\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      if (page !== 1) {\n        onFirstPage(e);\n      }\n    }\n  }, React.createElement(PaginationRowArrowIcon, {\n    name: 'double-left'\n  }))), React.createElement('li', {\n    className: page === 1 ? 'disabled' : ''\n  }, React.createElement('a', {\n    href: '#',\n    title: messagesPreviousPage,\n    onClick: function onClick(e) {\n      e.preventDefault();\n\n      if (page !== 1) {\n        onPreviousPage(e);\n      }\n    }\n  }, React.createElement(PaginationRowArrowIcon, {\n    name: 'left'\n  }))));\n};\n\nPaginationRowBack.propTypes = {\n  /** additional class names */\n  className: PropTypes.string,\n\n  /** pagination page */\n  page: PropTypes.number.isRequired,\n\n  /** messages firstPage */\n  messagesFirstPage: PropTypes.string.isRequired,\n\n  /** messages previousPage */\n  messagesPreviousPage: PropTypes.string.isRequired,\n\n  /** first page callback */\n  onFirstPage: PropTypes.func,\n\n  /** previous page selection callback */\n  onPreviousPage: PropTypes.func\n};\nPaginationRowBack.defaultProps = {\n  className: '',\n  onFirstPage: noop,\n  onPreviousPage: noop\n};\nexport default PaginationRowBack;","map":null,"metadata":{},"sourceType":"module"}