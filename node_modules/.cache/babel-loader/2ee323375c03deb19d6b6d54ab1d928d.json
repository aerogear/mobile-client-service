{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from '../Dropdown';\nimport { KEY_CODES } from '../../common/helpers';\nimport { default as InfoTipToggle } from './InfoTipToggle';\nimport { default as InfoTipMenu } from './InfoTipMenu';\nimport { default as InfoTipMenuFooter } from './InfoTipMenuFooter';\nimport { default as InfoTipMenuItemIcon } from './InfoTipMenuItemIcon';\n\nvar InfoTip = function (_React$Component) {\n  _inherits(InfoTip, _React$Component);\n\n  function InfoTip() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, InfoTip);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = InfoTip.__proto__ || Object.getPrototypeOf(InfoTip)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      open: false,\n      footerFocused: false\n    }, _this.handleEnterKeyDown = function (event) {\n      _this.setState({\n        open: !_this.state.open\n      });\n\n      event.preventDefault();\n    }, _this.handleTabKeyDown = function (event) {\n      if (_this.state.footerFocused) {\n        _this.setState({\n          open: false,\n          footerFocused: false\n        });\n      } else {\n        _this.setState({\n          footerFocused: true\n        });\n      }\n\n      event.stopPropagation();\n      event.nativeEvent.stopImmediatePropagation();\n    }, _this.handleKeyDown = function (event) {\n      if (event.shiftKey && event.keyCode) {\n        return _this.handleBackFocus();\n      }\n\n      switch (event.keyCode) {\n        case KEY_CODES.ENTER_KEY:\n          return _this.handleEnterKeyDown(event);\n\n        case KEY_CODES.TAB_KEY:\n          return _this.handleTabKeyDown(event);\n\n        case KEY_CODES.ESCAPE_KEY:\n          return _this.setState({\n            open: false\n          });\n\n        default:\n          return null;\n      }\n    }, _this.handleBackFocus = function () {\n      if (_this.state.open) {\n        _this.setState({\n          open: false\n        });\n      }\n    }, _this.handleClick = function (event) {\n      event.preventDefault();\n\n      _this.setState({\n        open: !_this.state.open\n      });\n    }, _this.handleBlur = function (event) {\n      if (event && event.relatedTarget) {\n        event.relatedTarget.click();\n      }\n\n      _this.setState({\n        open: false\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(InfoTip, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          onToggle = _props.onToggle,\n          props = _objectWithoutProperties(_props, ['children', 'onToggle']);\n\n      return React.createElement(Dropdown, _extends({\n        componentClass: 'li',\n        onClick: this.handleClick,\n        onKeyDown: this.handleKeyDown,\n        onToggle: this.handleKeyDown,\n        open: this.state.open,\n        onBlur: this.handleBlur\n      }, props), children);\n    }\n  }]);\n\n  return InfoTip;\n}(React.Component);\n\nInfoTip.propTypes = _extends({}, Dropdown.propTypes, {\n  children: PropTypes.node.isRequired,\n  id: PropTypes.string.isRequired\n});\nInfoTip.Toggle = InfoTipToggle;\nInfoTip.Menu = InfoTipMenu;\nInfoTip.MenuItemIcon = InfoTipMenuItemIcon;\nInfoTip.MenuFooter = InfoTipMenuFooter;\nexport default InfoTip;","map":null,"metadata":{},"sourceType":"module"}