{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport 'patternfly/dist/js/patternfly-settings';\nimport 'patternfly/dist/js/patternfly-settings-charts';\nimport Break from 'breakjs';\nvar _window = window,\n    patternfly = _window.patternfly;\nvar c3ChartDefaults = patternfly.c3ChartDefaults();\nvar mockLayout = {\n  is: function is(layout) {\n    return layout === 'desktop';\n  },\n  addChangeListener: function addChangeListener() {},\n  removeChangeListener: function removeChangeListener() {}\n};\nvar layout = process.env.NODE_ENV === 'test' ? mockLayout : Break(_extends({\n  mobile: 0\n}, patternfly.pfBreakpoints));\nexport { patternfly, c3ChartDefaults, layout };","map":null,"metadata":{},"sourceType":"module"}