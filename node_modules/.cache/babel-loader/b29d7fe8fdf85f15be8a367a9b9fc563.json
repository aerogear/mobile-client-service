{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/UnboundServiceRow.js\";\nimport React, { Component } from 'react';\nimport { ListViewItem, Col } from 'patternfly-react';\nimport { get as _get } from 'lodash-es';\nimport BindingStatus from './BindingStatus';\nimport BindButton from './BindButton';\nimport '../configuration/ServiceSDKInfo.css';\nimport './ServiceRow.css';\n\nvar UnboundServiceRow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UnboundServiceRow, _Component);\n\n  function UnboundServiceRow(props) {\n    var _this;\n\n    _classCallCheck(this, UnboundServiceRow);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UnboundServiceRow).call(this, props));\n    _this.renderServiceBadge = _this.renderServiceBadge.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderBindingStatus = _this.renderBindingStatus.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UnboundServiceRow, [{\n    key: \"renderServiceBadge\",\n    value: function renderServiceBadge() {\n      var serviceDetailName = this.props.service.getId();\n\n      var mdcDisplayName = _get(this.props.service, 'serviceInstance.metadata.data.labels.mdcName');\n\n      if (mdcDisplayName) {\n        serviceDetailName = mdcDisplayName;\n      }\n\n      var icon = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      });\n\n      if (this.props.service.getIconClass() != null && this.props.service.getIconClass().length > 0) {\n        icon = React.createElement(\"span\", {\n          className: \"\".concat(this.props.service.getIconClass(), \" logo\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      } else {\n        icon = React.createElement(\"img\", {\n          src: this.props.service.getLogoUrl(),\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Col, {\n        md: 3,\n        key: this.props.service.getId(),\n        className: \"service-sdk-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, icon, React.createElement(\"div\", {\n        className: \"service-name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#\".concat(this.props.service.getId()),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, this.props.service.getName())), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, serviceDetailName))))));\n    }\n  }, {\n    key: \"renderBindingStatus\",\n    value: function renderBindingStatus() {\n      return React.createElement(BindingStatus, {\n        key: \"\".concat(this.props.service.getId(), \"binding status\"),\n        service: this.props.service,\n        onFinished: this.props.onFinished,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"renderBindingButtons\",\n    value: function renderBindingButtons() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(BindButton, {\n        service: this.props.service,\n        onClick: this.props.onCreateBinding,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ListViewItem, {\n        additionalInfo: [this.renderServiceBadge(), this.renderBindingStatus()],\n        className: \"unboundService\",\n        actions: this.renderBindingButtons(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return UnboundServiceRow;\n}(Component);\n\nexport default UnboundServiceRow;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/UnboundServiceRow.js"],"names":["React","Component","ListViewItem","Col","get","_get","BindingStatus","BindButton","UnboundServiceRow","props","renderServiceBadge","bind","renderBindingStatus","serviceDetailName","service","getId","mdcDisplayName","icon","getIconClass","length","getLogoUrl","getName","onFinished","onCreateBinding","renderBindingButtons"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { ListViewItem, Col } from 'patternfly-react';\nimport { get as _get } from 'lodash-es';\nimport BindingStatus from './BindingStatus';\nimport BindButton from './BindButton';\nimport '../configuration/ServiceSDKInfo.css';\nimport './ServiceRow.css';\n\nclass UnboundServiceRow extends Component {\n  constructor(props) {\n    super(props);\n\n    this.renderServiceBadge = this.renderServiceBadge.bind(this);\n    this.renderBindingStatus = this.renderBindingStatus.bind(this);\n  }\n\n  renderServiceBadge() {\n    let serviceDetailName = this.props.service.getId();\n    const mdcDisplayName = _get(this.props.service, 'serviceInstance.metadata.data.labels.mdcName');\n    if (mdcDisplayName) {\n      serviceDetailName = mdcDisplayName;\n    }\n\n    let icon = <div />;\n    if (this.props.service.getIconClass() != null && this.props.service.getIconClass().length > 0) {\n      icon = <span className={`${this.props.service.getIconClass()} logo`} />;\n    } else {\n      icon = <img src={this.props.service.getLogoUrl()} alt=\"\" />;\n    }\n    return (\n      <Col md={3} key={this.props.service.getId()} className=\"service-sdk-info\">\n        <Col md={12}>\n          {icon}\n          <div className=\"service-name\">\n            <h4>\n              <div>\n                <a href={`#${this.props.service.getId()}`}>{this.props.service.getName()}</a>\n              </div>\n              <div>\n                <small>{serviceDetailName}</small>\n              </div>\n            </h4>\n          </div>\n        </Col>\n      </Col>\n    );\n  }\n\n  renderBindingStatus() {\n    return (\n      <BindingStatus\n        key={`${this.props.service.getId()}binding status`}\n        service={this.props.service}\n        onFinished={this.props.onFinished}\n      />\n    );\n  }\n\n  renderBindingButtons() {\n    return (\n      <div>\n        <BindButton service={this.props.service} onClick={this.props.onCreateBinding} />\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <ListViewItem\n        additionalInfo={[this.renderServiceBadge(), this.renderBindingStatus()]}\n        className=\"unboundService\"\n        actions={this.renderBindingButtons()}\n      />\n    );\n  }\n}\n\nexport default UnboundServiceRow;\n"]},"metadata":{},"sourceType":"module"}