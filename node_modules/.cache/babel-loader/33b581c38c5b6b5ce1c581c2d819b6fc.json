{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from '../../Icon';\n\nvar NotificationDrawerTitle = function NotificationDrawerTitle(_ref) {\n  var expandable = _ref.expandable,\n      onCloseClick = _ref.onCloseClick,\n      onExpandClick = _ref.onExpandClick,\n      title = _ref.title,\n      children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['expandable', 'onCloseClick', 'onExpandClick', 'title', 'children', 'className']);\n\n  var classes = classNames('drawer-pf-title', className);\n  return React.createElement('div', _extends({\n    className: classes\n  }, props), expandable && React.createElement('a', {\n    className: 'drawer-pf-toggle-expand',\n    onClick: onExpandClick\n  }), React.createElement('a', {\n    className: 'drawer-pf-close',\n    onClick: onCloseClick\n  }, React.createElement(Icon, {\n    name: 'close'\n  })), React.createElement('h3', {\n    className: 'text-center'\n  }, title), children);\n};\n\nNotificationDrawerTitle.propTypes = {\n  /** Child node - contents of the element */\n  children: PropTypes.node,\n\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** Title prop */\n  title: PropTypes.string,\n\n  /** Close/Expand Functions */\n  onCloseClick: PropTypes.func,\n  onExpandClick: PropTypes.func,\n\n  /** is the Drawer expandable prop */\n  expandable: PropTypes.bool\n};\nNotificationDrawerTitle.defaultProps = {\n  className: '',\n  title: 'Notifications',\n  onCloseClick: null,\n  onExpandClick: null,\n  children: null,\n  expandable: true\n};\nexport default NotificationDrawerTitle;","map":null,"metadata":{},"sourceType":"module"}