{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar VerticalNavBrand = function VerticalNavBrand(props) {\n  var title = props.title,\n      href = props.href,\n      onClick = props.onClick,\n      iconImg = props.iconImg,\n      children = props.children; // The img prop is just a shorthand for the titleImg prop.\n  // When also using iconImg, it is less confusing to pass titleImg instead of img.\n\n  var titleImg = props.titleImg || props.img;\n  var brandChildren = children || React.createElement('span', null, iconImg && React.createElement('img', {\n    className: 'navbar-brand-icon',\n    src: iconImg,\n    alt: title\n  }), titleImg && React.createElement('img', {\n    className: 'navbar-brand-name',\n    src: titleImg,\n    alt: title\n  }), !titleImg && title && React.createElement('span', {\n    className: 'navbar-brand-txt'\n  }, title));\n  return href || onClick ? React.createElement('a', {\n    href: href,\n    onClick: onClick,\n    className: 'navbar-brand'\n  }, brandChildren) : React.createElement('span', {\n    className: 'navbar-brand'\n  }, brandChildren);\n};\n\nVerticalNavBrand.propTypes = {\n  /** Title of the application (use either this or titleImg) */\n  title: PropTypes.string,\n\n  /** URL of an image for the app's title (use either this or title) */\n  titleImg: PropTypes.string,\n\n  /** Alias for titleImg */\n  img: PropTypes.string,\n\n  /** URL of an image for the app's icon */\n  iconImg: PropTypes.string,\n\n  /** URL of the application's homepage if the title should be a link */\n  href: PropTypes.string,\n\n  /** Alternative to href, callback to call when the brand link is clicked */\n  onClick: PropTypes.func,\n\n  /** Custom children components to render instead. If passed, above props are ignored. */\n  children: PropTypes.node\n};\nVerticalNavBrand.defaultProps = {\n  title: '',\n  titleImg: '',\n  img: '',\n  iconImg: '',\n  href: '',\n  onClick: null,\n  // noop should not be used b/c onClick differentiates render\n  children: null\n};\nVerticalNavBrand.displayName = 'VerticalNav.Brand';\nexport default VerticalNavBrand;","map":null,"metadata":{},"sourceType":"module"}