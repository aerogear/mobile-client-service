{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport { NAME as REQUIRED, RequiredRule } from './RequiredRule';\nimport { NAME as SAMEVALUEOF, SameValueOfRule } from './SameValueOfRule';\nimport { NAME as P12VALIDATOR, P12ValidationRule } from './P12ValidatorRule';\nimport { NoopRule } from './NoopRule';\n/**\n * Rules factory.\n */\n\nexport var ValidationRule =\n/*#__PURE__*/\nfunction () {\n  function ValidationRule() {\n    _classCallCheck(this, ValidationRule);\n  }\n\n  _createClass(ValidationRule, null, [{\n    key: \"forRule\",\n    value: function forRule(ruleConfig) {\n      var ruleType = ruleConfig.type;\n\n      switch (ruleType) {\n        case REQUIRED:\n          {\n            return new RequiredRule(ruleConfig);\n          }\n\n        case SAMEVALUEOF:\n          {\n            return new SameValueOfRule(ruleConfig);\n          }\n\n        case P12VALIDATOR:\n          {\n            return new P12ValidationRule(ruleConfig);\n          }\n\n        default:\n          {\n            return new NoopRule();\n          }\n      }\n    }\n  }]);\n\n  return ValidationRule;\n}();","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/validator/rules/ValidationRule.js"],"names":["NAME","REQUIRED","RequiredRule","SAMEVALUEOF","SameValueOfRule","P12VALIDATOR","P12ValidationRule","NoopRule","ValidationRule","ruleConfig","ruleType","type"],"mappings":";;AAAA,SAASA,IAAI,IAAIC,QAAjB,EAA2BC,YAA3B,QAA+C,gBAA/C;AACA,SAASF,IAAI,IAAIG,WAAjB,EAA8BC,eAA9B,QAAqD,mBAArD;AACA,SAASJ,IAAI,IAAIK,YAAjB,EAA+BC,iBAA/B,QAAwD,oBAAxD;AACA,SAASC,QAAT,QAAyB,YAAzB;AAEA;;;;AAGA,WAAaC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,4BACiBC,UADjB,EAC6B;AAAA,UACXC,QADW,GACED,UADF,CACjBE,IADiB;;AAGzB,cAAQD,QAAR;AACE,aAAKT,QAAL;AAAe;AACb,mBAAO,IAAIC,YAAJ,CAAiBO,UAAjB,CAAP;AACD;;AACD,aAAKN,WAAL;AAAkB;AAChB,mBAAO,IAAIC,eAAJ,CAAoBK,UAApB,CAAP;AACD;;AACD,aAAKJ,YAAL;AAAmB;AACjB,mBAAO,IAAIC,iBAAJ,CAAsBG,UAAtB,CAAP;AACD;;AACD;AAAS;AACP,mBAAO,IAAIF,QAAJ,EAAP;AACD;AAZH;AAcD;AAlBH;;AAAA;AAAA","sourcesContent":["import { NAME as REQUIRED, RequiredRule } from './RequiredRule';\nimport { NAME as SAMEVALUEOF, SameValueOfRule } from './SameValueOfRule';\nimport { NAME as P12VALIDATOR, P12ValidationRule } from './P12ValidatorRule';\nimport { NoopRule } from './NoopRule';\n\n/**\n * Rules factory.\n */\nexport class ValidationRule {\n  static forRule(ruleConfig) {\n    const { type: ruleType } = ruleConfig;\n\n    switch (ruleType) {\n      case REQUIRED: {\n        return new RequiredRule(ruleConfig);\n      }\n      case SAMEVALUEOF: {\n        return new SameValueOfRule(ruleConfig);\n      }\n      case P12VALIDATOR: {\n        return new P12ValidationRule(ruleConfig);\n      }\n      default: {\n        return new NoopRule();\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}