{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n/**\n * WizardContents component for Patternfly React\n */\n\nvar WizardContents = function WizardContents(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      stepIndex = _ref.stepIndex,\n      subStepIndex = _ref.subStepIndex,\n      activeStepIndex = _ref.activeStepIndex,\n      activeSubStepIndex = _ref.activeSubStepIndex,\n      props = _objectWithoutProperties(_ref, ['children', 'className', 'stepIndex', 'subStepIndex', 'activeStepIndex', 'activeSubStepIndex']);\n\n  var classes = classNames('wizard-pf-contents', {\n    // hide contents if the step is not active\n    // OR if we have sub steps and this sub step is not active\n    hidden: activeStepIndex !== stepIndex || activeSubStepIndex !== null && activeSubStepIndex !== subStepIndex\n  }, className);\n  return React.createElement('div', _extends({\n    className: classes\n  }, props), children);\n};\n\nWizardContents.propTypes = {\n  /** WizardStep nodes */\n  children: PropTypes.node,\n\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** The wizard step index for these contents */\n  stepIndex: PropTypes.number.isRequired,\n\n  /** The wizard sub step index for these contents */\n  subStepIndex: PropTypes.number,\n\n  /** The active wizard step index */\n  activeStepIndex: PropTypes.number.isRequired,\n\n  /** The active wizard sub step index */\n  activeSubStepIndex: PropTypes.number\n};\nWizardContents.defaultProps = {\n  children: null,\n  className: '',\n  subStepIndex: null,\n  activeSubStepIndex: null\n};\nexport default WizardContents;","map":null,"metadata":{},"sourceType":"module"}