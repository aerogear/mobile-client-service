{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/CreateBuildConfigDialog.js\";\nimport React, { Component } from 'react';\nimport { Grid, Row, Col, Form, Button, Modal } from 'patternfly-react';\nimport './CreateBuildConfigDialog.css';\nimport { KEY_CR } from './Constants';\nimport NameSection from './create_build_config/NameSection';\nimport { configValidation, isAllValid, checkMandatoryFields } from './create_build_config/Validations';\nimport SourceSection from './create_build_config/SourceSection';\nimport BuildSection from './create_build_config/BuildSection';\nimport { createBuildConfigConnect } from './create_build_config/ReduxCommon';\n\nvar CreateBuildConfigDialog =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateBuildConfigDialog, _Component);\n\n  function CreateBuildConfigDialog() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateBuildConfigDialog);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateBuildConfigDialog)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      valid: false\n    };\n\n    _this.onSaveBuildConfig = function () {\n      var config = _this.props.createBuildConfigState.config;\n      var onSave = _this.props.onSave;\n      onSave && onSave({\n        config: config\n      });\n    };\n\n    _this.cancel = function () {\n      var onCancel = _this.props.onCancel;\n      onCancel && onCancel();\n    };\n\n    _this.renderFormButtons = function (onCancel, valid) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        bsStyle: \"primary\",\n        onClick: _this.onSaveBuildConfig,\n        disabled: !valid,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Create\"));\n    };\n\n    _this.getValidationState = function () {};\n\n    return _this;\n  }\n\n  _createClass(CreateBuildConfigDialog, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      this.validate();\n    }\n  }, {\n    key: \"validate\",\n    value: function validate() {\n      var _this$props$createBui = this.props.createBuildConfigState.validation,\n          validation = _this$props$createBui === void 0 ? {} : _this$props$createBui;\n      var _validation$KEY_CR = validation[KEY_CR],\n          confValidation = _validation$KEY_CR === void 0 ? {} : _validation$KEY_CR;\n      var validVal = isAllValid(confValidation) && checkMandatoryFields(this.props.createBuildConfigState);\n      if (this.state.valid !== validVal) this.setState({\n        valid: validVal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          show = _this$props.show,\n          title = _this$props.title,\n          onCancel = _this$props.onCancel;\n      var _this$state$valid = this.state.valid,\n          valid = _this$state$valid === void 0 ? false : _this$state$valid;\n      return React.createElement(Modal, {\n        show: show,\n        container: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Modal.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Modal.CloseButton, {\n        onClick: onCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), React.createElement(Modal.Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, title)), React.createElement(Modal.Body, {\n        className: \"modalBody buildConfigModal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"help-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Client Build allows you to create a mobile client binary from a git source repository.\"), React.createElement(Form, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(NameSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(SourceSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(BuildSection, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })))))), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, this.renderFormButtons(onCancel, valid)));\n    }\n  }]);\n\n  return CreateBuildConfigDialog;\n}(Component);\n\nexport default createBuildConfigConnect(KEY_CR, configValidation, CreateBuildConfigDialog);","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/CreateBuildConfigDialog.js"],"names":["React","Component","Grid","Row","Col","Form","Button","Modal","KEY_CR","NameSection","configValidation","isAllValid","checkMandatoryFields","SourceSection","BuildSection","createBuildConfigConnect","CreateBuildConfigDialog","state","valid","onSaveBuildConfig","config","props","createBuildConfigState","onSave","cancel","onCancel","renderFormButtons","getValidationState","prevProps","validate","validation","confValidation","validVal","setState","show","title"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Grid, Row, Col, Form, Button, Modal } from 'patternfly-react';\nimport './CreateBuildConfigDialog.css';\nimport { KEY_CR } from './Constants';\nimport NameSection from './create_build_config/NameSection';\nimport { configValidation, isAllValid, checkMandatoryFields } from './create_build_config/Validations';\nimport SourceSection from './create_build_config/SourceSection';\nimport BuildSection from './create_build_config/BuildSection';\nimport { createBuildConfigConnect } from './create_build_config/ReduxCommon';\n\nclass CreateBuildConfigDialog extends Component {\n  state = { valid: false };\n\n  componentDidUpdate(prevProps) {\n    this.validate();\n  }\n\n  validate() {\n    const { validation = {} } = this.props.createBuildConfigState;\n    const { [KEY_CR]: confValidation = {} } = validation;\n    const validVal = isAllValid(confValidation) && checkMandatoryFields(this.props.createBuildConfigState);\n    if (this.state.valid !== validVal) this.setState({ valid: validVal });\n  }\n\n  onSaveBuildConfig = () => {\n    const { config } = this.props.createBuildConfigState;\n    const { onSave } = this.props;\n    onSave && onSave({ config });\n  };\n\n  cancel = () => {\n    const { onCancel } = this.props;\n    onCancel && onCancel();\n  };\n\n  renderFormButtons = (onCancel, valid) => (\n    <div>\n      <Button onClick={onCancel}>Cancel</Button>\n      <Button bsStyle=\"primary\" onClick={this.onSaveBuildConfig} disabled={!valid}>\n        Create\n      </Button>\n    </div>\n  );\n\n  getValidationState = () => {};\n\n  render() {\n    const { show, title, onCancel } = this.props;\n    const { valid = false } = this.state;\n    return (\n      <Modal show={show} container={this}>\n        <Modal.Header>\n          <Modal.CloseButton onClick={onCancel} />\n          <Modal.Title>{title}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body className=\"modalBody buildConfigModal\">\n          <Grid fluid>\n            <Row>\n              <Col md={12}>\n                <div className=\"help-block\">\n                  Client Build allows you to create a mobile client binary from a git source repository.\n                </div>\n                <Form>\n                  <NameSection />\n                  <SourceSection />\n                  <BuildSection />\n                </Form>\n              </Col>\n            </Row>\n          </Grid>\n        </Modal.Body>\n        <Modal.Footer>{this.renderFormButtons(onCancel, valid)}</Modal.Footer>\n      </Modal>\n    );\n  }\n}\nexport default createBuildConfigConnect(KEY_CR, configValidation, CreateBuildConfigDialog);\n"]},"metadata":{},"sourceType":"module"}