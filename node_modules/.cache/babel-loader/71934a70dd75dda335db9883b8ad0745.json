{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Modal } from '../Modal';\nimport AboutModalVersions from './AboutModalVersions';\nimport AboutModalVersionItem from './AboutModalVersionItem';\n/**\n * AboutModal Component for PatternFly\n */\n\nvar AboutModal = function AboutModal(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      show = _ref.show,\n      onHide = _ref.onHide,\n      productTitle = _ref.productTitle,\n      logo = _ref.logo,\n      altLogo = _ref.altLogo,\n      trademarkText = _ref.trademarkText,\n      closeText = _ref.closeText,\n      props = _objectWithoutProperties(_ref, ['children', 'className', 'show', 'onHide', 'productTitle', 'logo', 'altLogo', 'trademarkText', 'closeText']);\n\n  return React.createElement(Modal, _extends({\n    className: className,\n    contentClassName: 'about-modal-pf',\n    show: show,\n    onHide: onHide\n  }, props), React.createElement(Modal.Header, null, React.createElement(Modal.CloseButton, {\n    onClick: onHide,\n    closeText: closeText\n  })), React.createElement(Modal.Body, null, React.createElement('h1', null, productTitle), children, React.createElement('div', {\n    className: 'trademark-pf'\n  }, trademarkText)), React.createElement(Modal.Footer, null, React.createElement('img', {\n    src: logo,\n    alt: altLogo\n  })));\n};\n\nAboutModal.defaultProps = {\n  closeText: 'Close'\n};\nAboutModal.propTypes = {\n  /** Children nodes */\n  children: PropTypes.node,\n\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** Flag to show the modal */\n  show: PropTypes.bool.isRequired,\n\n  /** Function to call when modal is closed */\n  onHide: PropTypes.func.isRequired,\n\n  /** Text or Element to show for the product title */\n  productTitle: PropTypes.node,\n\n  /** Image Source for the Product logo */\n  logo: PropTypes.string,\n\n  /** Alternate text if invalid logo */\n  altLogo: PropTypes.string,\n\n  /** Trademark information text */\n  trademarkText: PropTypes.string,\n\n  /** Alternate text for close button for screen readers (default 'Close') */\n  closeText: PropTypes.string\n};\nAboutModal.defaultProps = {\n  children: null,\n  className: '',\n  productTitle: null,\n  logo: '',\n  altLogo: '',\n  trademarkText: ''\n};\nAboutModal.Versions = AboutModalVersions;\nAboutModal.VersionItem = AboutModalVersionItem;\nexport default AboutModal;","map":null,"metadata":{},"sourceType":"module"}