{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/BindingPanel.js\";\nimport { partition, get } from 'lodash-es';\nimport React, { Component } from 'react';\nimport { Wizard } from 'patternfly-react';\nimport { connect } from 'react-redux';\nimport Form from 'react-jsonschema-form';\nimport { createCustomResourceForService } from '../../actions/services';\nimport '../configuration/ServiceSDKInfo.css';\nimport './ServiceRow.css';\nimport { FormValidator } from './validator/FormValidator';\nimport { MobileService } from '../../models/mobileservices/mobileservice';\nexport var BindingPanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BindingPanel, _Component);\n\n  function BindingPanel(props) {\n    var _this;\n\n    _classCallCheck(this, BindingPanel);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BindingPanel).call(this, props));\n\n    _this.stepChanged = function (step) {\n      if (step === 2) {\n        _this.setState({\n          loading: true\n        });\n\n        _this.props.createCustomResourceForService(_this.state.service, _this.state.formData);\n      }\n    };\n\n    _this.validate = function (formData, errors) {\n      /* Very important facts : We only have 4 services right now and must manually validate the form data.  In Mobile core the angular form did a lot of this for free */\n      var valid = new FormValidator(_this.state.validationRules).validate(formData, function (key, message) {\n        get(errors, key).addError(message);\n      });\n\n      if (valid) {\n        // Avdance to final screen if valid\n        _this.setState({\n          activeStepIndex: 2\n        });\n\n        _this.stepChanged(2);\n      }\n\n      return errors;\n    };\n\n    _this.onNextButtonClick = _this.onNextButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onBackButtonClick = _this.onBackButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.renderPropertiesSchema = _this.renderPropertiesSchema.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.validate = _this.validate.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onFormChange = _this.onFormChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    var serviceName = _this.props.service.getName();\n\n    var p = {\n      appName: _this.props.appName,\n      service: _this.props.service\n    };\n\n    var bindingFormConfig = _this.props.service.getBindingForm(p);\n\n    var schema = bindingFormConfig.schema,\n        uiSchema = bindingFormConfig.uiSchema,\n        validationRules = bindingFormConfig.validationRules,\n        onChangeHandler = bindingFormConfig.onChangeHandler;\n    var service = _this.props.service;\n    _this.state = {\n      serviceName: serviceName,\n      schema: schema,\n      uiSchema: uiSchema,\n      loading: false,\n      service: service,\n      activeStepIndex: 0,\n      validationRules: validationRules,\n      onChangeHandler: onChangeHandler\n    };\n    return _this;\n  }\n\n  _createClass(BindingPanel, [{\n    key: \"onNextButtonClick\",\n    value: function onNextButtonClick() {\n      var activeStepIndex = this.state.activeStepIndex;\n\n      if (activeStepIndex === 1) {\n        this.form.submit();\n        return false; // swallow the event, see validate function\n      }\n\n      this.setState({\n        activeStepIndex: (activeStepIndex + 1) % 3\n      });\n      return true;\n    }\n  }, {\n    key: \"onBackButtonClick\",\n    value: function onBackButtonClick() {\n      var activeStepIndex = this.state.activeStepIndex;\n      this.setState({\n        activeStepIndex: (activeStepIndex - 1) % 3\n      });\n    }\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.stepChanged(0);\n      this.open();\n    }\n  }, {\n    key: \"onFormChange\",\n    value: function onFormChange(data) {\n      var formData = data.formData;\n\n      if (this.state.onChangeHandler) {\n        var newSchema = this.state.onChangeHandler(formData, this.state.schema);\n        return this.setState({\n          formData: formData,\n          schema: newSchema\n        });\n      }\n\n      return this.setState({\n        formData: formData\n      });\n    }\n  }, {\n    key: \"renderPropertiesSchema\",\n    value: function renderPropertiesSchema() {\n      var _this2 = this;\n\n      return React.createElement(Form, {\n        schema: this.state.schema,\n        uiSchema: this.state.uiSchema,\n        ref: function ref(form) {\n          _this2.form = form;\n        },\n        validate: this.validate,\n        showErrorList: false,\n        formData: this.state.formData,\n        onChange: this.onFormChange // eslint-disable-line no-return-assign\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderWizardSteps\",\n    value: function renderWizardSteps() {\n      var _this3 = this;\n\n      return [{\n        title: 'Binding',\n        render: function render() {\n          return React.createElement(\"form\", {\n            className: \"ng-pristine ng-valid\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"form-group\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, React.createElement(\"label\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 101\n            },\n            __self: this\n          }, React.createElement(\"h3\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, \"Create a binding for \", React.createElement(\"strong\", {\n            className: \"ng-binding\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, _this3.state.serviceName))), React.createElement(\"span\", {\n            className: \"help-block\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 106\n            },\n            __self: this\n          }, \"Bindings create a custom resource containing the necessary information for an application to use this service.\")));\n        }\n      }, {\n        title: 'Parameters',\n        render: function render() {\n          return _this3.renderPropertiesSchema();\n        }\n      }, {\n        title: 'Results',\n        render: function render() {\n          return React.createElement(\"div\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120\n            },\n            __self: this\n          }, \"review the binding\");\n        }\n      }];\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Wizard.Pattern, {\n        onHide: this.props.close,\n        onExited: this.props.close,\n        show: this.props.showModal,\n        title: \"Create a new service binding\",\n        steps: this.renderWizardSteps(),\n        loadingTitle: \"Creating mobile binding...\",\n        loadingMessage: \"This may take a while. You can close this wizard.\",\n        loading: this.state.loading,\n        onStepChanged: this.stepChanged,\n        nextText: this.state.activeStepIndex === 1 ? 'Create' : 'Next',\n        onNext: this.onNextButtonClick,\n        onBack: this.onBackButtonClick,\n        activeStepIndex: this.state.activeStepIndex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      });\n    }\n  }, {\n    key: \"getBoundServices\",\n    value: function getBoundServices() {\n      var filteredServices = partition(this.props.services, function (service) {\n        return service.isBound();\n      });\n      return filteredServices[0];\n    }\n  }, {\n    key: \"getUnboundServices\",\n    value: function getUnboundServices() {\n      var filteredServices = partition(this.props.services, function (service) {\n        return service.isBound();\n      });\n      return filteredServices[1];\n    }\n  }]);\n\n  return BindingPanel;\n}(Component);\nvar mapDispatchToProps = {\n  createCustomResourceForService: createCustomResourceForService\n};\n\nfunction mapStateToProps(state) {\n  return {\n    services: state.services.items.map(function (service) {\n      return new MobileService(service);\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BindingPanel);","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/BindingPanel.js"],"names":["partition","get","React","Component","Wizard","connect","Form","createCustomResourceForService","FormValidator","MobileService","BindingPanel","props","stepChanged","step","setState","loading","state","service","formData","validate","errors","valid","validationRules","key","message","addError","activeStepIndex","onNextButtonClick","bind","onBackButtonClick","renderPropertiesSchema","onFormChange","serviceName","getName","p","appName","bindingFormConfig","getBindingForm","schema","uiSchema","onChangeHandler","form","submit","open","data","newSchema","title","render","close","showModal","renderWizardSteps","filteredServices","services","isBound","mapDispatchToProps","mapStateToProps","items","map"],"mappings":"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","sourcesContent":["import { partition, get } from 'lodash-es';\nimport React, { Component } from 'react';\nimport { Wizard } from 'patternfly-react';\nimport { connect } from 'react-redux';\nimport Form from 'react-jsonschema-form';\nimport { createCustomResourceForService } from '../../actions/services';\nimport '../configuration/ServiceSDKInfo.css';\nimport './ServiceRow.css';\n\nimport { FormValidator } from './validator/FormValidator';\nimport { MobileService } from '../../models/mobileservices/mobileservice';\n\nexport class BindingPanel extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onNextButtonClick = this.onNextButtonClick.bind(this);\n    this.onBackButtonClick = this.onBackButtonClick.bind(this);\n    this.renderPropertiesSchema = this.renderPropertiesSchema.bind(this);\n    this.validate = this.validate.bind(this);\n    this.onFormChange = this.onFormChange.bind(this);\n    const serviceName = this.props.service.getName();\n    const p = { appName: this.props.appName, service: this.props.service };\n    const bindingFormConfig = this.props.service.getBindingForm(p);\n    const { schema, uiSchema, validationRules, onChangeHandler } = bindingFormConfig;\n    const { service } = this.props;\n\n    this.state = {\n      serviceName,\n      schema,\n      uiSchema,\n      loading: false,\n      service,\n      activeStepIndex: 0,\n      validationRules,\n      onChangeHandler\n    };\n  }\n\n  onNextButtonClick() {\n    const { activeStepIndex } = this.state;\n    if (activeStepIndex === 1) {\n      this.form.submit();\n      return false; // swallow the event, see validate function\n    }\n    this.setState({\n      activeStepIndex: (activeStepIndex + 1) % 3\n    });\n    return true;\n  }\n\n  onBackButtonClick() {\n    const { activeStepIndex } = this.state;\n    this.setState({\n      activeStepIndex: (activeStepIndex - 1) % 3\n    });\n  }\n\n  show() {\n    this.stepChanged(0);\n    this.open();\n  }\n\n  onFormChange(data) {\n    const { formData } = data;\n    if (this.state.onChangeHandler) {\n      const newSchema = this.state.onChangeHandler(formData, this.state.schema);\n      return this.setState({\n        formData,\n        schema: newSchema\n      });\n    }\n    return this.setState({ formData });\n  }\n\n  renderPropertiesSchema() {\n    return (\n      <Form\n        schema={this.state.schema}\n        uiSchema={this.state.uiSchema}\n        ref={form => {\n          this.form = form;\n        }}\n        validate={this.validate}\n        showErrorList={false}\n        formData={this.state.formData}\n        onChange={this.onFormChange} // eslint-disable-line no-return-assign\n      >\n        <div />\n      </Form>\n    );\n  }\n\n  renderWizardSteps() {\n    return [\n      {\n        title: 'Binding',\n        render: () => (\n          <form className=\"ng-pristine ng-valid\">\n            <div className=\"form-group\">\n              <label>\n                <h3>\n                  Create a binding for <strong className=\"ng-binding\">{this.state.serviceName}</strong>\n                </h3>\n              </label>\n              <span className=\"help-block\">\n                Bindings create a custom resource containing the necessary information for an application to use this\n                service.\n              </span>\n            </div>\n          </form>\n        )\n      },\n      {\n        title: 'Parameters',\n        render: () => this.renderPropertiesSchema()\n      },\n      {\n        title: 'Results',\n        render: () => <div>review the binding</div>\n      }\n    ];\n  }\n\n  stepChanged = step => {\n    if (step === 2) {\n      this.setState({ loading: true });\n      this.props.createCustomResourceForService(this.state.service, this.state.formData);\n    }\n  };\n\n  /**\n   * see https://github.com/mozilla-services/react-jsonschema-form/tree/6cb26d17c0206b610b130729db930d5906d3fdd3#form-data-validation\n   */\n  validate = (formData, errors) => {\n    /* Very important facts : We only have 4 services right now and must manually validate the form data.  In Mobile core the angular form did a lot of this for free */\n    const valid = new FormValidator(this.state.validationRules).validate(formData, (key, message) => {\n      get(errors, key).addError(message);\n    });\n\n    if (valid) {\n      // Avdance to final screen if valid\n      this.setState({\n        activeStepIndex: 2\n      });\n      this.stepChanged(2);\n    }\n\n    return errors;\n  };\n\n  render() {\n    return (\n      <Wizard.Pattern\n        onHide={this.props.close}\n        onExited={this.props.close}\n        show={this.props.showModal}\n        title=\"Create a new service binding\"\n        steps={this.renderWizardSteps()}\n        loadingTitle=\"Creating mobile binding...\"\n        loadingMessage=\"This may take a while. You can close this wizard.\"\n        loading={this.state.loading}\n        onStepChanged={this.stepChanged}\n        nextText={this.state.activeStepIndex === 1 ? 'Create' : 'Next'}\n        onNext={this.onNextButtonClick}\n        onBack={this.onBackButtonClick}\n        activeStepIndex={this.state.activeStepIndex}\n      />\n    );\n  }\n\n  getBoundServices() {\n    const filteredServices = partition(this.props.services, service => service.isBound());\n    return filteredServices[0];\n  }\n\n  getUnboundServices() {\n    const filteredServices = partition(this.props.services, service => service.isBound());\n    return filteredServices[1];\n  }\n}\n\nconst mapDispatchToProps = {\n  createCustomResourceForService\n};\n\nfunction mapStateToProps(state) {\n  return {\n    services: state.services.items.map(service => new MobileService(service))\n  };\n}\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BindingPanel);\n"]},"metadata":{},"sourceType":"module"}