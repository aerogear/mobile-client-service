{"ast":null,"code":"var _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/create_build_config/SshAuthenticationSection.js\";\nimport React from 'react';\nimport { get as _get } from 'lodash-es';\nimport { FormGroup, ControlLabel, FormControl, HelpBlock } from 'patternfly-react';\nimport { KEY_CR_SSH_AUTH_NAME, KEY_CR_SSH_PRIVATE_KEY, PATH_CR_SOURCE_SSH_AUTH, ofValidation } from '../Constants';\nimport UploadControl from '../../common/UploadControl';\nimport { createBuildConfigConnect } from './ReduxCommon';\nimport { sshAuthValidation } from './Validations';\n\nvar SshAuthenticationSection = function SshAuthenticationSection(_ref) {\n  var createBuildConfigState = _ref.createBuildConfigState,\n      setField = _ref.setField;\n\n  var _get2 = _get(createBuildConfigState, PATH_CR_SOURCE_SSH_AUTH, {}),\n      _get2$KEY_CR_SSH_AUTH = _get2[KEY_CR_SSH_AUTH_NAME],\n      name = _get2$KEY_CR_SSH_AUTH === void 0 ? '' : _get2$KEY_CR_SSH_AUTH,\n      _get2$KEY_CR_SSH_PRIV = _get2[KEY_CR_SSH_PRIVATE_KEY],\n      privateKey = _get2$KEY_CR_SSH_PRIV === void 0 ? '' : _get2$KEY_CR_SSH_PRIV;\n\n  var _get3 = _get(createBuildConfigState, ofValidation(PATH_CR_SOURCE_SSH_AUTH), {}),\n      _get3$KEY_CR_SSH_AUTH = _get3[KEY_CR_SSH_AUTH_NAME],\n      nameValidation = _get3$KEY_CR_SSH_AUTH === void 0 ? '' : _get3$KEY_CR_SSH_AUTH,\n      _get3$KEY_CR_SSH_PRIV = _get3[KEY_CR_SSH_PRIVATE_KEY],\n      privateKeyValidation = _get3$KEY_CR_SSH_PRIV === void 0 ? '' : _get3$KEY_CR_SSH_PRIV;\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    validationState: nameValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Name\"), React.createElement(FormControl, {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setField(KEY_CR_SSH_AUTH_NAME, e.target.value);\n    },\n    value: name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"A name for the credentials.\")), React.createElement(FormGroup, {\n    validationState: privateKeyValidation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    className: \"required\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"SSH Private Key\"), React.createElement(UploadControl, {\n    onTextLoaded: function onTextLoaded(text) {\n      return setField(KEY_CR_SSH_PRIVATE_KEY, text);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), React.createElement(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Upload your private SSH key file.\"), React.createElement(FormControl, {\n    componentClass: \"textarea\",\n    onChange: function onChange(e) {\n      return setField(KEY_CR_SSH_PRIVATE_KEY, e.target.value);\n    },\n    value: privateKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }), React.createElement(HelpBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Private SSH key file for Git authentication.\")));\n};\n\nexport default createBuildConfigConnect(PATH_CR_SOURCE_SSH_AUTH, sshAuthValidation, SshAuthenticationSection);","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/create_build_config/SshAuthenticationSection.js"],"names":["React","get","_get","FormGroup","ControlLabel","FormControl","HelpBlock","KEY_CR_SSH_AUTH_NAME","KEY_CR_SSH_PRIVATE_KEY","PATH_CR_SOURCE_SSH_AUTH","ofValidation","UploadControl","createBuildConfigConnect","sshAuthValidation","SshAuthenticationSection","createBuildConfigState","setField","name","privateKey","nameValidation","privateKeyValidation","e","target","value","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,WAA5B;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,WAAlC,EAA+CC,SAA/C,QAAgE,kBAAhE;AACA,SAASC,oBAAT,EAA+BC,sBAA/B,EAAuDC,uBAAvD,EAAgFC,YAAhF,QAAoG,cAApG;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,wBAAT,QAAyC,eAAzC;AACA,SAASC,iBAAT,QAAkC,eAAlC;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,OAA0C;AAAA,MAAvCC,sBAAuC,QAAvCA,sBAAuC;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,cACgBd,IAAI,CAC3Fa,sBAD2F,EAE3FN,uBAF2F,EAG3F,EAH2F,CADpB;AAAA,oCAChEF,oBADgE;AAAA,MACzCU,IADyC,sCAClC,EADkC;AAAA,oCAC7BT,sBAD6B;AAAA,MACJU,UADI,sCACS,EADT;;AAAA,cAMoChB,IAAI,CAC/Ga,sBAD+G,EAE/GL,YAAY,CAACD,uBAAD,CAFmG,EAG/G,EAH+G,CANxC;AAAA,oCAMhEF,oBANgE;AAAA,MAMzCY,cANyC,sCAMxB,EANwB;AAAA,oCAMnBX,sBANmB;AAAA,MAMMY,oBANN,sCAM6B,EAN7B;;AAWzE,SACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAED,cAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,oBAAC,WAAD;AAAa,IAAA,IAAI,EAAC,MAAlB;AAAyB,IAAA,QAAQ,EAAE,kBAAAE,CAAC;AAAA,aAAIL,QAAQ,CAACT,oBAAD,EAAuBc,CAAC,CAACC,MAAF,CAASC,KAAhC,CAAZ;AAAA,KAApC;AAAwF,IAAA,KAAK,EAAEN,IAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAHF,CADF,EAME,oBAAC,SAAD;AAAW,IAAA,eAAe,EAAEG,oBAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAE,sBAAAI,IAAI;AAAA,aAAIR,QAAQ,CAACR,sBAAD,EAAyBgB,IAAzB,CAAZ;AAAA,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAHF,EAIE,oBAAC,WAAD;AACE,IAAA,cAAc,EAAC,UADjB;AAEE,IAAA,QAAQ,EAAE,kBAAAH,CAAC;AAAA,aAAIL,QAAQ,CAACR,sBAAD,EAAyBa,CAAC,CAACC,MAAF,CAASC,KAAlC,CAAZ;AAAA,KAFb;AAGE,IAAA,KAAK,EAAEL,UAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EASE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDATF,CANF,CADF;AAoBD,CA/BD;;AAiCA,eAAeN,wBAAwB,CAACH,uBAAD,EAA0BI,iBAA1B,EAA6CC,wBAA7C,CAAvC","sourcesContent":["import React from 'react';\nimport { get as _get } from 'lodash-es';\nimport { FormGroup, ControlLabel, FormControl, HelpBlock } from 'patternfly-react';\nimport { KEY_CR_SSH_AUTH_NAME, KEY_CR_SSH_PRIVATE_KEY, PATH_CR_SOURCE_SSH_AUTH, ofValidation } from '../Constants';\nimport UploadControl from '../../common/UploadControl';\nimport { createBuildConfigConnect } from './ReduxCommon';\nimport { sshAuthValidation } from './Validations';\n\nconst SshAuthenticationSection = ({ createBuildConfigState, setField }) => {\n  const { [KEY_CR_SSH_AUTH_NAME]: name = '', [KEY_CR_SSH_PRIVATE_KEY]: privateKey = '' } = _get(\n    createBuildConfigState,\n    PATH_CR_SOURCE_SSH_AUTH,\n    {}\n  );\n  const { [KEY_CR_SSH_AUTH_NAME]: nameValidation = '', [KEY_CR_SSH_PRIVATE_KEY]: privateKeyValidation = '' } = _get(\n    createBuildConfigState,\n    ofValidation(PATH_CR_SOURCE_SSH_AUTH),\n    {}\n  );\n  return (\n    <React.Fragment>\n      <FormGroup validationState={nameValidation}>\n        <ControlLabel className=\"required\">Name</ControlLabel>\n        <FormControl type=\"text\" onChange={e => setField(KEY_CR_SSH_AUTH_NAME, e.target.value)} value={name} />\n        <HelpBlock>A name for the credentials.</HelpBlock>\n      </FormGroup>\n      <FormGroup validationState={privateKeyValidation}>\n        <ControlLabel className=\"required\">SSH Private Key</ControlLabel>\n        <UploadControl onTextLoaded={text => setField(KEY_CR_SSH_PRIVATE_KEY, text)} />\n        <HelpBlock>Upload your private SSH key file.</HelpBlock>\n        <FormControl\n          componentClass=\"textarea\"\n          onChange={e => setField(KEY_CR_SSH_PRIVATE_KEY, e.target.value)}\n          value={privateKey}\n        />\n        <HelpBlock>Private SSH key file for Git authentication.</HelpBlock>\n      </FormGroup>\n    </React.Fragment>\n  );\n};\n\nexport default createBuildConfigConnect(PATH_CR_SOURCE_SSH_AUTH, sshAuthValidation, SshAuthenticationSection);\n"]},"metadata":{},"sourceType":"module"}