{"ast":null,"code":"import _defineProperty from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _KEY_CR_SOURCE, _KEY_CR_BUILD, _config, _mandatoryFields;\n\nimport { get as _get, set as _set, cloneDeep, unset } from 'lodash-es';\nimport { BUILD_CONFIGS_REQUEST, BUILD_CONFIGS_SUCCESS, BUILD_CONFIGS_FAILURE, BUILD_CONFIG_DELETE_REQUEST, BUILD_CONFIG_DELETE_SUCCESS, BUILD_CONFIG_DELETE_FAILURE, BUILD_CONFIG_CREATE_REQUEST, BUILD_CONFIG_CREATE_SUCCESS, BUILD_CONFIG_CREATE_FAILURE, BUILD_CONFIG_UPDATE_SUCCESS, BUILD_CONFIG_FIELD_SET_VALUE, BUILD_CONFIG_FIELD_SET_UI_STATE, BUILD_CONFIG_FIELD_REMOVE_VALUE, BUILD_CONFIG_CLEAR_STATE } from '../actions/buildConfigs';\nimport resourceReducer from './resource';\nimport { ofValidation, PATH_CR_SOURCE, KEY_CR_SOURCE_GITURL, KEY_CR_SOURCE_JENKINS_FILE_PATH, PATH_CR_SOURCE_BASIC_AUTH, KEY_CR_BASIC_AUTH_NAME, KEY_CR_BASIC_AUTH_PASSWORD, KEY_CR_BASIC_AUTH_USERNAME, PATH_CR_SOURCE_SSH_AUTH, KEY_CR_SSH_AUTH_NAME, KEY_CR_SSH_PRIVATE_KEY, KEY_CR, KEY_CR_NAME, withPath, KEY_UI, KEY_CR_SOURCE, KEY_CR_SOURCE_AUTH_TYPE, BUILD_AUTH_TYPE_PUBLIC, KEY_CR_SOURCE_GITREF, KEY_CR_BUILD, KEY_CR_BUILD_PLATFORM, BUILD_PLATFORM_ANDROID, KEY_CR_BUILD_TYPE, BUILD_TYPE_DEBUG, BUILD_AUTH_TYPE_BASIC, BUILD_AUTH_TYPE_SSH } from '../components/build/Constants';\nvar buildConfigs = resourceReducer({\n  createRequest: BUILD_CONFIG_CREATE_REQUEST,\n  createSuccess: BUILD_CONFIG_CREATE_SUCCESS,\n  createFailure: BUILD_CONFIG_CREATE_FAILURE,\n  listRequest: BUILD_CONFIGS_REQUEST,\n  listSuccess: BUILD_CONFIGS_SUCCESS,\n  listFailure: BUILD_CONFIGS_FAILURE,\n  deleteRequest: BUILD_CONFIG_DELETE_REQUEST,\n  deleteSuccess: BUILD_CONFIG_DELETE_SUCCESS,\n  deleteFailure: BUILD_CONFIG_DELETE_FAILURE,\n  updateSuccess: BUILD_CONFIG_UPDATE_SUCCESS\n});\nvar initialState = {\n  config: (_config = {}, _defineProperty(_config, KEY_CR_SOURCE, (_KEY_CR_SOURCE = {}, _defineProperty(_KEY_CR_SOURCE, KEY_CR_SOURCE_AUTH_TYPE, BUILD_AUTH_TYPE_PUBLIC), _defineProperty(_KEY_CR_SOURCE, KEY_CR_SOURCE_GITREF, 'master'), _defineProperty(_KEY_CR_SOURCE, KEY_CR_SOURCE_JENKINS_FILE_PATH, './'), _KEY_CR_SOURCE)), _defineProperty(_config, KEY_CR_BUILD, (_KEY_CR_BUILD = {}, _defineProperty(_KEY_CR_BUILD, KEY_CR_BUILD_PLATFORM, BUILD_PLATFORM_ANDROID), _defineProperty(_KEY_CR_BUILD, KEY_CR_BUILD_TYPE, BUILD_TYPE_DEBUG), _KEY_CR_BUILD)), _config),\n  validation: {\n    config: {},\n    mandatoryFields: (_mandatoryFields = {}, _defineProperty(_mandatoryFields, KEY_CR, {\n      fields: [KEY_CR_NAME]\n    }), _defineProperty(_mandatoryFields, PATH_CR_SOURCE, {\n      fields: [KEY_CR_SOURCE_GITURL, KEY_CR_SOURCE_GITURL, KEY_CR_SOURCE_JENKINS_FILE_PATH]\n    }), _defineProperty(_mandatoryFields, PATH_CR_SOURCE_BASIC_AUTH, {\n      fields: [KEY_CR_BASIC_AUTH_NAME, KEY_CR_BASIC_AUTH_PASSWORD, KEY_CR_BASIC_AUTH_USERNAME],\n      affectsFun: function affectsFun(state) {\n        return _get(state, withPath(PATH_CR_SOURCE, KEY_CR_SOURCE_AUTH_TYPE)) === BUILD_AUTH_TYPE_BASIC;\n      }\n    }), _defineProperty(_mandatoryFields, PATH_CR_SOURCE_SSH_AUTH, {\n      fields: [KEY_CR_SSH_AUTH_NAME, KEY_CR_SSH_PRIVATE_KEY],\n      affectsFun: function affectsFun(state) {\n        return _get(state, withPath(PATH_CR_SOURCE, KEY_CR_SOURCE_AUTH_TYPE)) === BUILD_AUTH_TYPE_SSH;\n      }\n    }), _mandatoryFields)\n  },\n  ui: {}\n};\n/**\n * Reducer for BuildConfig dialog functionality */\n\nexport var buildConfigReducer = function buildConfigReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case BUILD_CONFIG_FIELD_SET_VALUE:\n      {\n        var state = cloneDeep(prevState);\n        var _action$payload = action.payload,\n            path = _action$payload.path,\n            name = _action$payload.name,\n            value = _action$payload.value,\n            valid = _action$payload.valid;\n\n        _set(state, \"\".concat(path, \".\").concat(name), value);\n\n        _set(state, ofValidation(\"\".concat(path, \".\").concat(name)), valid);\n\n        return state;\n      }\n\n    case BUILD_CONFIG_FIELD_SET_UI_STATE:\n      {\n        var _state = cloneDeep(prevState);\n\n        var _action$payload2 = action.payload,\n            _name = _action$payload2.name,\n            _value = _action$payload2.value;\n\n        _set(_state, withPath(KEY_UI, _name), _value);\n\n        return _state;\n      }\n\n    case BUILD_CONFIG_FIELD_REMOVE_VALUE:\n      {\n        var _state2 = cloneDeep(prevState);\n\n        var _action$payload3 = action.payload,\n            _path = _action$payload3.path,\n            values = _action$payload3.values;\n        values.forEach(function (name) {\n          var field = \"\".concat(_path, \".\").concat(name);\n          unset(_state2, field);\n          unset(_state2, ofValidation(field));\n        });\n        return _state2;\n      }\n\n    case BUILD_CONFIG_CLEAR_STATE:\n      {\n        return cloneDeep(initialState);\n      }\n\n    default:\n      return prevState;\n  }\n};\nexport default buildConfigs;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/reducers/buildConfigs.js"],"names":["get","_get","set","_set","cloneDeep","unset","BUILD_CONFIGS_REQUEST","BUILD_CONFIGS_SUCCESS","BUILD_CONFIGS_FAILURE","BUILD_CONFIG_DELETE_REQUEST","BUILD_CONFIG_DELETE_SUCCESS","BUILD_CONFIG_DELETE_FAILURE","BUILD_CONFIG_CREATE_REQUEST","BUILD_CONFIG_CREATE_SUCCESS","BUILD_CONFIG_CREATE_FAILURE","BUILD_CONFIG_UPDATE_SUCCESS","BUILD_CONFIG_FIELD_SET_VALUE","BUILD_CONFIG_FIELD_SET_UI_STATE","BUILD_CONFIG_FIELD_REMOVE_VALUE","BUILD_CONFIG_CLEAR_STATE","resourceReducer","ofValidation","PATH_CR_SOURCE","KEY_CR_SOURCE_GITURL","KEY_CR_SOURCE_JENKINS_FILE_PATH","PATH_CR_SOURCE_BASIC_AUTH","KEY_CR_BASIC_AUTH_NAME","KEY_CR_BASIC_AUTH_PASSWORD","KEY_CR_BASIC_AUTH_USERNAME","PATH_CR_SOURCE_SSH_AUTH","KEY_CR_SSH_AUTH_NAME","KEY_CR_SSH_PRIVATE_KEY","KEY_CR","KEY_CR_NAME","withPath","KEY_UI","KEY_CR_SOURCE","KEY_CR_SOURCE_AUTH_TYPE","BUILD_AUTH_TYPE_PUBLIC","KEY_CR_SOURCE_GITREF","KEY_CR_BUILD","KEY_CR_BUILD_PLATFORM","BUILD_PLATFORM_ANDROID","KEY_CR_BUILD_TYPE","BUILD_TYPE_DEBUG","BUILD_AUTH_TYPE_BASIC","BUILD_AUTH_TYPE_SSH","buildConfigs","createRequest","createSuccess","createFailure","listRequest","listSuccess","listFailure","deleteRequest","deleteSuccess","deleteFailure","updateSuccess","initialState","config","validation","mandatoryFields","fields","affectsFun","state","ui","buildConfigReducer","prevState","action","type","payload","path","name","value","valid","values","forEach","field"],"mappings":"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","sourcesContent":["import { get as _get, set as _set, cloneDeep, unset } from 'lodash-es';\nimport {\n  BUILD_CONFIGS_REQUEST,\n  BUILD_CONFIGS_SUCCESS,\n  BUILD_CONFIGS_FAILURE,\n  BUILD_CONFIG_DELETE_REQUEST,\n  BUILD_CONFIG_DELETE_SUCCESS,\n  BUILD_CONFIG_DELETE_FAILURE,\n  BUILD_CONFIG_CREATE_REQUEST,\n  BUILD_CONFIG_CREATE_SUCCESS,\n  BUILD_CONFIG_CREATE_FAILURE,\n  BUILD_CONFIG_UPDATE_SUCCESS,\n  BUILD_CONFIG_FIELD_SET_VALUE,\n  BUILD_CONFIG_FIELD_SET_UI_STATE,\n  BUILD_CONFIG_FIELD_REMOVE_VALUE,\n  BUILD_CONFIG_CLEAR_STATE\n} from '../actions/buildConfigs';\nimport resourceReducer from './resource';\nimport {\n  ofValidation,\n  PATH_CR_SOURCE,\n  KEY_CR_SOURCE_GITURL,\n  KEY_CR_SOURCE_JENKINS_FILE_PATH,\n  PATH_CR_SOURCE_BASIC_AUTH,\n  KEY_CR_BASIC_AUTH_NAME,\n  KEY_CR_BASIC_AUTH_PASSWORD,\n  KEY_CR_BASIC_AUTH_USERNAME,\n  PATH_CR_SOURCE_SSH_AUTH,\n  KEY_CR_SSH_AUTH_NAME,\n  KEY_CR_SSH_PRIVATE_KEY,\n  KEY_CR,\n  KEY_CR_NAME,\n  withPath,\n  KEY_UI,\n  KEY_CR_SOURCE,\n  KEY_CR_SOURCE_AUTH_TYPE,\n  BUILD_AUTH_TYPE_PUBLIC,\n  KEY_CR_SOURCE_GITREF,\n  KEY_CR_BUILD,\n  KEY_CR_BUILD_PLATFORM,\n  BUILD_PLATFORM_ANDROID,\n  KEY_CR_BUILD_TYPE,\n  BUILD_TYPE_DEBUG,\n  BUILD_AUTH_TYPE_BASIC,\n  BUILD_AUTH_TYPE_SSH\n} from '../components/build/Constants';\n\nconst buildConfigs = resourceReducer({\n  createRequest: BUILD_CONFIG_CREATE_REQUEST,\n  createSuccess: BUILD_CONFIG_CREATE_SUCCESS,\n  createFailure: BUILD_CONFIG_CREATE_FAILURE,\n  listRequest: BUILD_CONFIGS_REQUEST,\n  listSuccess: BUILD_CONFIGS_SUCCESS,\n  listFailure: BUILD_CONFIGS_FAILURE,\n  deleteRequest: BUILD_CONFIG_DELETE_REQUEST,\n  deleteSuccess: BUILD_CONFIG_DELETE_SUCCESS,\n  deleteFailure: BUILD_CONFIG_DELETE_FAILURE,\n  updateSuccess: BUILD_CONFIG_UPDATE_SUCCESS\n});\n\nconst initialState = {\n  config: {\n    [KEY_CR_SOURCE]: {\n      [KEY_CR_SOURCE_AUTH_TYPE]: BUILD_AUTH_TYPE_PUBLIC,\n      [KEY_CR_SOURCE_GITREF]: 'master',\n      [KEY_CR_SOURCE_JENKINS_FILE_PATH]: './'\n    },\n    [KEY_CR_BUILD]: { [KEY_CR_BUILD_PLATFORM]: BUILD_PLATFORM_ANDROID, [KEY_CR_BUILD_TYPE]: BUILD_TYPE_DEBUG }\n  },\n  validation: {\n    config: {},\n    mandatoryFields: {\n      [KEY_CR]: { fields: [KEY_CR_NAME] },\n      [PATH_CR_SOURCE]: { fields: [KEY_CR_SOURCE_GITURL, KEY_CR_SOURCE_GITURL, KEY_CR_SOURCE_JENKINS_FILE_PATH] },\n      [PATH_CR_SOURCE_BASIC_AUTH]: {\n        fields: [KEY_CR_BASIC_AUTH_NAME, KEY_CR_BASIC_AUTH_PASSWORD, KEY_CR_BASIC_AUTH_USERNAME],\n        affectsFun: state => _get(state, withPath(PATH_CR_SOURCE, KEY_CR_SOURCE_AUTH_TYPE)) === BUILD_AUTH_TYPE_BASIC\n      },\n      [PATH_CR_SOURCE_SSH_AUTH]: {\n        fields: [KEY_CR_SSH_AUTH_NAME, KEY_CR_SSH_PRIVATE_KEY],\n        affectsFun: state => _get(state, withPath(PATH_CR_SOURCE, KEY_CR_SOURCE_AUTH_TYPE)) === BUILD_AUTH_TYPE_SSH\n      }\n    }\n  },\n  ui: {}\n};\n\n/**\n * Reducer for BuildConfig dialog functionality */\nexport const buildConfigReducer = (prevState = initialState, action) => {\n  switch (action.type) {\n    case BUILD_CONFIG_FIELD_SET_VALUE: {\n      const state = cloneDeep(prevState);\n      const { path, name, value, valid } = action.payload;\n      _set(state, `${path}.${name}`, value);\n      _set(state, ofValidation(`${path}.${name}`), valid);\n      return state;\n    }\n    case BUILD_CONFIG_FIELD_SET_UI_STATE: {\n      const state = cloneDeep(prevState);\n      const { name, value } = action.payload;\n      _set(state, withPath(KEY_UI, name), value);\n      return state;\n    }\n    case BUILD_CONFIG_FIELD_REMOVE_VALUE: {\n      const state = cloneDeep(prevState);\n      const { path, values } = action.payload;\n      values.forEach(name => {\n        const field = `${path}.${name}`;\n        unset(state, field);\n        unset(state, ofValidation(field));\n      });\n      return state;\n    }\n    case BUILD_CONFIG_CLEAR_STATE: {\n      return cloneDeep(initialState);\n    }\n    default:\n      return prevState;\n  }\n};\n\nexport default buildConfigs;\n"]},"metadata":{},"sourceType":"module"}