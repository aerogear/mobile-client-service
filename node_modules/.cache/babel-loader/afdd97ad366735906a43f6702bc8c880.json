{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Timer from '../../common/Timer';\nimport { excludeKeys } from '../../common/helpers';\n\nvar ModelessOverlay = function (_React$Component) {\n  _inherits(ModelessOverlay, _React$Component);\n\n  function ModelessOverlay(props) {\n    _classCallCheck(this, ModelessOverlay);\n\n    var _this = _possibleConstructorReturn(this, (ModelessOverlay.__proto__ || Object.getPrototypeOf(ModelessOverlay)).call(this, props));\n\n    _this.updateForTransitions = function () {\n      _this.setState({\n        isIn: _this.props.show\n      });\n    };\n\n    _this.state = {\n      isIn: false\n    };\n    _this.inTimer = new Timer(_this.updateForTransitions, 150);\n    return _this;\n  }\n\n  _createClass(ModelessOverlay, [{\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this.inTimer.clearTimer();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          children = _props.children,\n          className = _props.className,\n          bsSize = _props.bsSize,\n          show = _props.show,\n          otherProps = _objectWithoutProperties(_props, ['children', 'className', 'bsSize', 'show']);\n\n      var isIn = this.state.isIn;\n      var classes = classNames('modal modeless-pf fade right-side-modal-pf', {\n        shown: show || isIn,\n        in: show && isIn\n      }, className);\n\n      if (isIn !== show) {\n        this.inTimer.clearTimer();\n        this.inTimer.startTimer();\n      }\n\n      var dialogClasses = classNames('modal-dialog', {\n        'modal-sm': bsSize === 'sm' || bsSize === 'small',\n        'modal-lg': bsSize === 'lg' || bsSize === 'large'\n      });\n      return React.createElement('div', _extends({\n        role: 'dialog',\n        tabIndex: -1,\n        className: classes\n      }, excludeKeys(otherProps, ['show'])), React.createElement('div', {\n        className: dialogClasses\n      }, React.createElement('div', {\n        className: 'modal-content'\n      }, children)));\n    }\n  }]);\n\n  return ModelessOverlay;\n}(React.Component);\n\nModelessOverlay.propTypes = {\n  /** Children */\n  children: PropTypes.node,\n\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** When true, the dialog is shown */\n  show: PropTypes.bool,\n\n  /** Component size variations (effects dialog width). */\n  bsSize: PropTypes.oneOf(['lg', 'large', 'sm', 'small', 'default'])\n};\nModelessOverlay.defaultProps = {\n  children: null,\n  className: '',\n  show: false,\n  bsSize: 'default'\n};\nexport default ModelessOverlay;","map":null,"metadata":{},"sourceType":"module"}