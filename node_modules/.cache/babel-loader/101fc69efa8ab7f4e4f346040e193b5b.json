{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CardHeightMatching from './CardHeightMatching';\nimport { Grid, Row, Col, Clearfix } from '../Grid';\n\nvar CardGrid = function CardGrid(_ref) {\n  var matchHeight = _ref.matchHeight,\n      children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['matchHeight', 'children', 'className']);\n\n  var classes = classNames('container-cards-pf', className);\n  var cardSelector = ['.card-pf-match-height'];\n\n  if (matchHeight) {\n    return React.createElement(Grid, _extends({\n      className: classes\n    }, props), React.createElement(CardHeightMatching, {\n      selector: cardSelector\n    }, children));\n  }\n\n  return React.createElement(Grid, _extends({\n    className: classes\n  }, props), children);\n};\n\nCardGrid.propTypes = {\n  /** Child node - contents of the element */\n  children: PropTypes.node.isRequired,\n\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** Match Height bool */\n  matchHeight: PropTypes.bool\n};\nCardGrid.defaultProps = {\n  className: '',\n  matchHeight: false\n};\nCardGrid.Row = Row;\nCardGrid.Col = Col;\nCardGrid.Clearfix = Clearfix;\nexport default CardGrid;","map":null,"metadata":{},"sourceType":"module"}