{"ast":null,"code":"import _toConsumableArray from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { filter, find } from 'lodash-es';\nimport { DISMISS_ERROR, DISMISS_ALL_ERRORS, ERROR } from '../actions/errors';\nvar defaultState = {\n  errors: []\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DISMISS_ERROR:\n      {\n        var errors = filter(state.errors, function (err) {\n          return !err.message === action.errorMessage;\n        });\n        return {\n          errors: errors\n        };\n      }\n\n    case DISMISS_ALL_ERRORS:\n      return {\n        errors: []\n      };\n\n    case ERROR:\n      {\n        var existingErr = find(state.errors, function (err) {\n          return err.message === action.errorMessage;\n        });\n\n        if (existingErr) {\n          return state;\n        }\n\n        return {\n          errors: [action.error].concat(_toConsumableArray(state.errors))\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/reducers/errors.js"],"names":["filter","find","DISMISS_ERROR","DISMISS_ALL_ERRORS","ERROR","defaultState","errors","reducer","state","action","type","err","message","errorMessage","existingErr","error"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,QAA6B,WAA7B;AACA,SAASC,aAAT,EAAwBC,kBAAxB,EAA4CC,KAA5C,QAAyD,mBAAzD;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,MAAM,EAAE;AADW,CAArB;;AAIA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,aAAL;AAAoB;AAClB,YAAMI,MAAM,GAAGN,MAAM,CAACQ,KAAK,CAACF,MAAP,EAAe,UAAAK,GAAG;AAAA,iBAAI,CAACA,GAAG,CAACC,OAAL,KAAiBH,MAAM,CAACI,YAA5B;AAAA,SAAlB,CAArB;AACA,eAAO;AACLP,UAAAA,MAAM,EAANA;AADK,SAAP;AAGD;;AACD,SAAKH,kBAAL;AACE,aAAO;AACLG,QAAAA,MAAM,EAAE;AADH,OAAP;;AAGF,SAAKF,KAAL;AAAY;AACV,YAAMU,WAAW,GAAGb,IAAI,CAACO,KAAK,CAACF,MAAP,EAAe,UAAAK,GAAG;AAAA,iBAAIA,GAAG,CAACC,OAAJ,KAAgBH,MAAM,CAACI,YAA3B;AAAA,SAAlB,CAAxB;;AACA,YAAIC,WAAJ,EAAiB;AACf,iBAAON,KAAP;AACD;;AACD,eAAO;AACLF,UAAAA,MAAM,GAAGG,MAAM,CAACM,KAAV,4BAAoBP,KAAK,CAACF,MAA1B;AADD,SAAP;AAGD;;AACD;AACE,aAAOE,KAAP;AArBJ;AAuBD,CAxBD;;AA0BA,eAAeD,OAAf","sourcesContent":["import { filter, find } from 'lodash-es';\nimport { DISMISS_ERROR, DISMISS_ALL_ERRORS, ERROR } from '../actions/errors';\n\nconst defaultState = {\n  errors: []\n};\n\nconst reducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case DISMISS_ERROR: {\n      const errors = filter(state.errors, err => !err.message === action.errorMessage);\n      return {\n        errors\n      };\n    }\n    case DISMISS_ALL_ERRORS:\n      return {\n        errors: []\n      };\n    case ERROR: {\n      const existingErr = find(state.errors, err => err.message === action.errorMessage);\n      if (existingErr) {\n        return state;\n      }\n      return {\n        errors: [action.error, ...state.errors]\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}