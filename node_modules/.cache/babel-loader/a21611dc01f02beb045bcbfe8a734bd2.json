{"ast":null,"code":"function _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Dropdown } from '../Dropdown';\nimport { noop } from '../../common/helpers';\nimport ApplicationLauncherToggle from './ApplicationLauncherToggle';\nimport ApplicationLauncherItem from './ApplicationLauncherItem';\n\nvar ApplicationLauncher = function ApplicationLauncher(_ref) {\n  var open = _ref.open,\n      grid = _ref.grid,\n      tooltip = _ref.tooltip,\n      tooltipPlacement = _ref.tooltipPlacement,\n      children = _ref.children,\n      toggleLauncher = _ref.toggleLauncher,\n      className = _ref.className,\n      propTypes = _objectWithoutProperties(_ref, ['open', 'grid', 'tooltip', 'tooltipPlacement', 'children', 'toggleLauncher', 'className']);\n\n  var classes = classNames('applauncher-pf dropdown', {\n    'applauncher-pf-block-list': grid\n  }, {\n    open: open\n  });\n  return React.createElement('li', {\n    className: classes\n  }, React.createElement(ApplicationLauncherToggle, {\n    tooltip: tooltip,\n    tooltipPlacement: tooltipPlacement,\n    onClick: function onClick() {\n      return toggleLauncher();\n    },\n    open: open\n  }), React.createElement(Dropdown.Menu, {\n    className: 'dropdown-menu-right'\n  }, children));\n};\n\nApplicationLauncher.propTypes = {\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** Children Node */\n  children: PropTypes.node.isRequired,\n\n  /** Toggle Tooltip */\n  tooltip: PropTypes.string,\n\n  /** tooltipPlacement */\n  tooltipPlacement: PropTypes.string,\n\n  /** Application Launcher Type (Default List) */\n  grid: PropTypes.bool,\n\n  /** open bool */\n  open: PropTypes.bool,\n\n  /** Toggle launcher func */\n  toggleLauncher: PropTypes.func\n};\nApplicationLauncher.defaultProps = {\n  className: '',\n  tooltip: '',\n  tooltipPlacement: 'left',\n  toggleLauncher: noop,\n  grid: false,\n  open: false\n};\nApplicationLauncher.Toggle = ApplicationLauncherToggle;\nApplicationLauncher.Item = ApplicationLauncherItem;\nexport default ApplicationLauncher;","map":null,"metadata":{},"sourceType":"module"}