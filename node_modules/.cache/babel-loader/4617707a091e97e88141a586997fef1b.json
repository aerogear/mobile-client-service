{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from 'react-collapse';\nimport { default as cx } from 'classnames';\n\nvar LoginFormError = function LoginFormError(_ref) {\n  var children = _ref.children,\n      show = _ref.show,\n      topErrorOnly = _ref.topErrorOnly,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['children', 'show', 'topErrorOnly', 'className']);\n\n  return React.createElement('div', {\n    className: cx('login-form-error', className),\n    style: topErrorOnly ? {\n      minHeight: '20px'\n    } : null\n  }, React.createElement(Collapse, _extends({}, props, {\n    isOpened: children !== null && show\n  }), children));\n};\n\nLoginFormError.propTypes = {\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** children nodes or text */\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** Controlls the collapse to open/close */\n  show: PropTypes.bool,\n\n  /** if it`s a login page with topErrorOnly, add a fixed space for the form error */\n  topErrorOnly: PropTypes.bool\n};\nLoginFormError.defaultProps = {\n  className: null,\n  children: null,\n  show: false,\n  topErrorOnly: false\n};\nexport default LoginFormError;","map":null,"metadata":{},"sourceType":"module"}