{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { noop, EmptyState, Spinner, Wizard } from '../../../index';\nimport { wizardStepShape } from './WizardPatternConstants';\n/**\n * WizardPatternBody - the Wizard Pattern Body component.\n */\n\nvar WizardPatternBody = function WizardPatternBody(_ref) {\n  var loading = _ref.loading,\n      steps = _ref.steps,\n      activeStepIndex = _ref.activeStepIndex,\n      goToStep = _ref.goToStep,\n      loadingTitle = _ref.loadingTitle,\n      loadingMessage = _ref.loadingMessage,\n      activeStepStr = _ref.activeStepStr;\n\n  if (loading) {\n    return React.createElement(Wizard.Row, null, React.createElement(Wizard.Main, null, React.createElement(EmptyState, null, React.createElement(Spinner, {\n      size: 'lg',\n      className: 'blank-slate-pf-icon',\n      loading: true\n    }), React.createElement(EmptyState.Action, null, React.createElement('h3', null, loadingTitle)), React.createElement(EmptyState.Action, {\n      secondary: true\n    }, React.createElement('p', null, loadingMessage)))));\n  }\n\n  var stepProps = function stepProps(stepIndex, title) {\n    var label = (stepIndex + 1).toString();\n    return {\n      key: 'wizard-step-' + title,\n      stepIndex: stepIndex,\n      label: label,\n      step: label,\n      title: title,\n      activeStep: activeStepStr\n    };\n  };\n\n  if (steps && steps.length) {\n    var step = steps[activeStepIndex];\n    var renderedStep = step && step.render && step.render(activeStepIndex, step.title);\n    return React.createElement(React.Fragment, null, React.createElement(Wizard.Steps, {\n      steps: steps.map(function (stepObj, index) {\n        return React.createElement(Wizard.Step, _extends({}, stepProps(index, stepObj.title), {\n          onClick: function onClick() {\n            return goToStep(index);\n          }\n        }));\n      })\n    }), React.createElement(Wizard.Row, null, React.createElement(Wizard.Main, null, React.createElement(Wizard.Contents, {\n      stepIndex: activeStepIndex,\n      activeStepIndex: activeStepIndex\n    }, renderedStep))));\n  }\n\n  return null;\n};\n\nWizardPatternBody.propTypes = {\n  loadingTitle: PropTypes.string,\n  loadingMessage: PropTypes.string,\n  loading: PropTypes.bool,\n  steps: PropTypes.arrayOf(PropTypes.shape(wizardStepShape)),\n  activeStepIndex: PropTypes.number,\n  activeStepStr: PropTypes.string,\n  goToStep: PropTypes.func\n};\nWizardPatternBody.defaultProps = {\n  loadingTitle: 'Loading Wizard...',\n  loadingMessage: 'Loading...',\n  loading: false,\n  steps: [],\n  activeStepIndex: 0,\n  activeStepStr: '1',\n  goToStep: noop\n};\nexport default WizardPatternBody;","map":null,"metadata":{},"sourceType":"module"}