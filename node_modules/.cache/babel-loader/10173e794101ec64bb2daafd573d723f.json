{"ast":null,"code":"import { connect } from 'react-redux';\nimport { setWithValidation } from './Validations';\nimport { createSetBuildConfigValue, setUiState, createRemoveValues } from '../../../actions/buildConfigs';\n\nfunction mapStateToProps(state) {\n  return {\n    createBuildConfigState: state.createBuildConfig\n  };\n}\n\nvar mapDispatchToProps = function mapDispatchToProps(path, validation) {\n  return {\n    setField: setWithValidation(createSetBuildConfigValue(path), validation),\n    setUiState: setUiState,\n    removeValues: createRemoveValues(path)\n  };\n};\n\nexport var createBuildConfigConnect = function createBuildConfigConnect(path, validation, component) {\n  return connect(mapStateToProps, mapDispatchToProps(path, validation))(component);\n};","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/create_build_config/ReduxCommon.js"],"names":["connect","setWithValidation","createSetBuildConfigValue","setUiState","createRemoveValues","mapStateToProps","state","createBuildConfigState","createBuildConfig","mapDispatchToProps","path","validation","setField","removeValues","createBuildConfigConnect","component"],"mappings":"AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,yBAAT,EAAoCC,UAApC,EAAgDC,kBAAhD,QAA0E,+BAA1E;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AACLC,IAAAA,sBAAsB,EAAED,KAAK,CAACE;AADzB,GAAP;AAGD;;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAOC,UAAP;AAAA,SAAuB;AAChDC,IAAAA,QAAQ,EAAEX,iBAAiB,CAACC,yBAAyB,CAACQ,IAAD,CAA1B,EAAkCC,UAAlC,CADqB;AAEhDR,IAAAA,UAAU,EAAVA,UAFgD;AAGhDU,IAAAA,YAAY,EAAET,kBAAkB,CAACM,IAAD;AAHgB,GAAvB;AAAA,CAA3B;;AAMA,OAAO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACJ,IAAD,EAAOC,UAAP,EAAmBI,SAAnB;AAAA,SACtCf,OAAO,CACLK,eADK,EAELI,kBAAkB,CAACC,IAAD,EAAOC,UAAP,CAFb,CAAP,CAGEI,SAHF,CADsC;AAAA,CAAjC","sourcesContent":["import { connect } from 'react-redux';\nimport { setWithValidation } from './Validations';\nimport { createSetBuildConfigValue, setUiState, createRemoveValues } from '../../../actions/buildConfigs';\n\nfunction mapStateToProps(state) {\n  return {\n    createBuildConfigState: state.createBuildConfig\n  };\n}\n\nconst mapDispatchToProps = (path, validation) => ({\n  setField: setWithValidation(createSetBuildConfigValue(path), validation),\n  setUiState,\n  removeValues: createRemoveValues(path)\n});\n\nexport const createBuildConfigConnect = (path, validation, component) =>\n  connect(\n    mapStateToProps,\n    mapDispatchToProps(path, validation)\n  )(component);\n"]},"metadata":{},"sourceType":"module"}