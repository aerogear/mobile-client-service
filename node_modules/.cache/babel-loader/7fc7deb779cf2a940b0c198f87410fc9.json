{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport { Alert } from '../Alert';\nimport { default as TimedToastNotification } from './TimedToastNotification';\nimport { default as ToastNotificationList } from './ToastNotificationList';\n/**\n * ToastNotification Component for Patternfly React\n */\n\nvar ToastNotification = function ToastNotification(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['children', 'className']);\n\n  var notificationClasses = classNames('toast-pf', className);\n  return React.createElement(Alert, _extends({\n    className: notificationClasses\n  }, props), children);\n}; // WARNING: If you change propTypes OR defaultProps  you MUST also change TimedToastNotification\n\n\nToastNotification.propTypes = _extends({}, Alert.propTypes);\nToastNotification.defaultProps = _extends({}, Alert.defaultProps); // WARNING: If you change TOAST_NOTIFICATION_TYPES you MUST also change TimedToastNotification\n\nToastNotification.TOAST_NOTIFICATION_TYPES = [].concat(_toConsumableArray(Alert.ALERT_TYPES));\nToastNotification.Timed = TimedToastNotification;\nToastNotification.List = ToastNotificationList;\nexport default ToastNotification;","map":null,"metadata":{},"sourceType":"module"}