{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ButtonGroup } from '../Button';\nimport { DropdownKebab } from '../DropdownKebab';\n/**\n * TableDropdownKebab component for Patternfly React\n */\n\nvar TableDropdownKebab = function TableDropdownKebab(_ref) {\n  var children = _ref.children,\n      props = _objectWithoutProperties(_ref, ['children']);\n\n  var CustomButtonGroup = function CustomButtonGroup(buttonProps) {\n    return React.createElement(ButtonGroup, _extends({}, buttonProps, {\n      bsClass: ' '\n    }));\n  };\n\n  return React.createElement(DropdownKebab, _extends({\n    componentClass: CustomButtonGroup,\n    toggleStyle: 'default'\n  }, props), children);\n};\n\nTableDropdownKebab.propTypes = {\n  /** children nodes */\n  children: PropTypes.node\n};\nTableDropdownKebab.defaultProps = {\n  children: null\n};\nexport default TableDropdownKebab;","map":null,"metadata":{},"sourceType":"module"}