{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport BsBreadcrumb from 'react-bootstrap/es/Breadcrumb';\n\nvar Breadcrumb = function Breadcrumb(_ref) {\n  var title = _ref.title,\n      props = _objectWithoutProperties(_ref, ['title']);\n\n  var breadcrumbClass = classNames({\n    'breadcrumbs-pf-title': title\n  });\n  return React.createElement(BsBreadcrumb, _extends({\n    className: breadcrumbClass\n  }, props));\n};\n\nBreadcrumb.propTypes = _extends({}, BsBreadcrumb.propTypes, {\n  title: PropTypes.bool\n});\nBreadcrumb.defaultProps = {\n  title: false\n};\nBreadcrumb.Item = BsBreadcrumb.Item;\nexport default Breadcrumb;","map":null,"metadata":{},"sourceType":"module"}