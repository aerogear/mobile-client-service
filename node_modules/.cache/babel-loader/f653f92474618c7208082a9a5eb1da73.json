{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button } from '../Button';\nimport { BUTTON_BS_STYLES } from '../Button/ButtonConstants';\nimport { noop } from '../../common/helpers';\n/**\n * TableButton component for Patternfly React\n */\n\nvar TableButton = function TableButton(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      onClick = _ref.onClick,\n      props = _objectWithoutProperties(_ref, ['children', 'className', 'onClick']);\n\n  var classes = classNames('table-view-pf-btn', className);\n\n  var bsStyle = props.bsStyle,\n      otherProps = _objectWithoutProperties(props, ['bsStyle']);\n\n  return React.createElement('div', _extends({\n    className: classes\n  }, otherProps), React.createElement(Button, {\n    onClick: onClick,\n    bsStyle: bsStyle\n  }, children));\n};\n\nTableButton.propTypes = {\n  /** Children nodes  */\n  children: PropTypes.node,\n\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** onClick callback for button */\n  onClick: PropTypes.func,\n  bsStyle: PropTypes.oneOf(BUTTON_BS_STYLES)\n};\nTableButton.defaultProps = {\n  children: null,\n  className: '',\n  onClick: noop,\n  bsStyle: 'default'\n};\nTableButton.BUTTON_BS_STYLES = BUTTON_BS_STYLES;\nexport default TableButton;","map":null,"metadata":{},"sourceType":"module"}