{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\n\nvar SortDirectionSelector = function SortDirectionSelector(_ref) {\n  var className = _ref.className,\n      isNumeric = _ref.isNumeric,\n      isAscending = _ref.isAscending,\n      props = _objectWithoutProperties(_ref, ['className', 'isNumeric', 'isAscending']);\n\n  var directionName = void 0;\n\n  if (isNumeric) {\n    directionName = isAscending ? 'sort-numeric-asc' : 'sort-numeric-desc';\n  } else {\n    directionName = isAscending ? 'sort-alpha-asc' : 'sort-alpha-desc';\n  }\n\n  return React.createElement(Button, _extends({\n    bsStyle: 'link',\n    className: className\n  }, props), React.createElement(Icon, {\n    type: 'fa',\n    className: 'sort-direction',\n    name: directionName\n  }));\n};\n\nSortDirectionSelector.propTypes = {\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** Boolean if current sort type is numeric */\n  isNumeric: PropTypes.bool,\n\n  /** Boolean if current sort direction is ascending */\n  isAscending: PropTypes.bool\n};\nSortDirectionSelector.defaultProps = {\n  className: '',\n  isNumeric: true,\n  isAscending: true\n};\nexport default SortDirectionSelector;","map":null,"metadata":{},"sourceType":"module"}