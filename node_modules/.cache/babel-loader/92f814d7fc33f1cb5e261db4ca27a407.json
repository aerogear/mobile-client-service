{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\nimport { Icon } from '../Icon';\nimport { getClassName, getIconName, warnIfDeprecatedType } from './helpers';\nimport { ALERT_TYPES, DEPRECATED_ALERT_TYPES, ALERT_TYPE_ERROR } from './AlertConstants';\n/**\n * Alert Component for Patternfly React\n */\n\nvar Alert = function Alert(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      onDismiss = _ref.onDismiss,\n      type = _ref.type,\n      props = _objectWithoutProperties(_ref, ['children', 'className', 'onDismiss', 'type']);\n\n  warnIfDeprecatedType(type);\n  var alertClass = classNames('alert', className, getClassName(type), {\n    'alert-dismissable': onDismiss\n  });\n  var iconName = getIconName(type);\n  return React.createElement('div', _extends({\n    className: alertClass\n  }, props), onDismiss && React.createElement(Button, {\n    bsClass: 'close',\n    'aria-hidden': 'true',\n    onClick: onDismiss\n  }, React.createElement(Icon, {\n    type: 'pf',\n    name: 'close'\n  })), React.createElement(Icon, {\n    type: 'pf',\n    name: iconName\n  }), children);\n};\n\nAlert.propTypes = {\n  /** additional alert classes */\n  className: PropTypes.string,\n\n  /** callback when alert is dismissed  */\n  onDismiss: PropTypes.func,\n\n  /** the type of alert  */\n  type: PropTypes.oneOf([].concat(_toConsumableArray(ALERT_TYPES), _toConsumableArray(DEPRECATED_ALERT_TYPES))),\n\n  /** children nodes  */\n  children: PropTypes.node\n};\nAlert.defaultProps = {\n  className: '',\n  onDismiss: null,\n  // we do not want to default noop b/c of conditional dismiss button\n  type: ALERT_TYPE_ERROR,\n  children: null\n};\nAlert.ALERT_TYPES = ALERT_TYPES;\nexport default Alert;","map":null,"metadata":{},"sourceType":"module"}