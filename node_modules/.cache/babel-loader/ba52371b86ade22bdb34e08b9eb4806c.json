{"ast":null,"code":"import _slicedToArray from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { errorCreator } from './errors';\nimport { list, watch, OpenShiftWatchEvents } from '../services/openshift';\n\nvar requestAction = function requestAction(type) {\n  return {\n    type: type\n  };\n};\n\nvar successAction = function successAction(type, result) {\n  return {\n    type: type,\n    result: result\n  };\n};\n\nvar failureAction = function failureAction(type, error) {\n  return {\n    type: type,\n    error: error\n  };\n};\n\nvar watchStatus = {};\n\nvar fetchIfRequired = function fetchIfRequired(resource, storekey, actionTypes, dispatch, getState, actionCreators) {\n  var requestActionCreator = actionCreators.request || requestAction;\n  var successActionCreators = actionCreators.success || successAction;\n  var currentState = getState();\n  var currentStoreData = currentState[storekey];\n\n  if (currentStoreData && currentStoreData.fetched && watchStatus[resource.kind]) {\n    return Promise.resolve();\n  }\n\n  dispatch(requestActionCreator(actionTypes.REQUEST));\n  return list(resource).then(function (data) {\n    dispatch(successActionCreators(actionTypes.SUCCESS, data));\n  });\n};\n\nvar watchIfRequired = function watchIfRequired(resource, actionTypes, dispatch, actionCreators) {\n  if (watchStatus[resource.kind]) {\n    return Promise.resolve();\n  }\n\n  return watchResource(resource, actionTypes, dispatch, actionCreators);\n};\n\nvar watchResource = function watchResource(resource, actionTypes, dispatch, actionCreators) {\n  var successActionCreators = actionCreators.success || successAction;\n  var failureActionCreator = actionCreators.failure || failureAction;\n  watchStatus[resource.kind] = true; // TODO: add label selectors to the watch url\n\n  return watch(resource).then(function (handler) {\n    handler.onEvent(function (event) {\n      if (event.type === OpenShiftWatchEvents.CLOSED) {\n        watchStatus[resource.kind] = false;\n      } else if (event.type === OpenShiftWatchEvents.ADDED) {\n        dispatch(successActionCreators(actionTypes.ADDED, event.payload));\n      } else if (event.type === OpenShiftWatchEvents.MODIFIED) {\n        dispatch(successActionCreators(actionTypes.MODIFIED, event.payload));\n      } else if (event.type === OpenShiftWatchEvents.DELETED) {\n        dispatch(successActionCreators(actionTypes.DELETED, event.payload));\n      }\n    });\n    handler.catch(function (error) {\n      watchStatus[resource.kind] = false;\n      dispatch(failureActionCreator(actionTypes.FAILURE, error));\n      dispatch(errorCreator(error));\n    });\n    return handler;\n  });\n};\n\nexport var fetchAndWatchOpenShiftResource = function fetchAndWatchOpenShiftResource(resource, storeKey, actionTypes) {\n  var actionCreators = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return function () {\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(dispatch, getState) {\n          var failureActionCreator;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  failureActionCreator = actionCreators.failure || failureAction;\n                  fetchIfRequired(resource, storeKey, actionTypes, dispatch, getState, actionCreators).then(function () {\n                    watchIfRequired(resource, actionTypes, dispatch, actionCreators);\n                  }).catch(function (error) {\n                    dispatch(failureActionCreator(actionTypes.FAILURE, error));\n                    dispatch(errorCreator(error));\n                  });\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref.apply(this, arguments);\n        };\n      }()\n    );\n  };\n};\nexport var fetchAction = function fetchAction(_ref2, doFetch) {\n  var _ref3 = _slicedToArray(_ref2, 3),\n      request = _ref3[0],\n      success = _ref3[1],\n      failure = _ref3[2];\n\n  return function () {\n    return (\n      /*#__PURE__*/\n      function () {\n        var _ref4 = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee2(dispatch) {\n          var result;\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  dispatch(requestAction(request));\n                  _context2.prev = 1;\n                  _context2.next = 4;\n                  return doFetch();\n\n                case 4:\n                  result = _context2.sent;\n                  dispatch(successAction(success, result));\n                  _context2.next = 12;\n                  break;\n\n                case 8:\n                  _context2.prev = 8;\n                  _context2.t0 = _context2[\"catch\"](1);\n                  dispatch(failureAction(failure, _context2.t0));\n                  dispatch(errorCreator(_context2.t0));\n\n                case 12:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, null, [[1, 8]]);\n        }));\n\n        return function (_x3) {\n          return _ref4.apply(this, arguments);\n        };\n      }()\n    );\n  };\n};","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/actions/fetch.js"],"names":["errorCreator","list","watch","OpenShiftWatchEvents","requestAction","type","successAction","result","failureAction","error","watchStatus","fetchIfRequired","resource","storekey","actionTypes","dispatch","getState","actionCreators","requestActionCreator","request","successActionCreators","success","currentState","currentStoreData","fetched","kind","Promise","resolve","REQUEST","then","data","SUCCESS","watchIfRequired","watchResource","failureActionCreator","failure","handler","onEvent","event","CLOSED","ADDED","payload","MODIFIED","DELETED","catch","FAILURE","fetchAndWatchOpenShiftResource","storeKey","fetchAction","doFetch"],"mappings":"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","sourcesContent":["import { errorCreator } from './errors';\nimport { list, watch, OpenShiftWatchEvents } from '../services/openshift';\n\nconst requestAction = type => ({\n  type\n});\n\nconst successAction = (type, result) => ({\n  type,\n  result\n});\n\nconst failureAction = (type, error) => ({\n  type,\n  error\n});\n\nconst watchStatus = {};\n\nconst fetchIfRequired = (resource, storekey, actionTypes, dispatch, getState, actionCreators) => {\n  const requestActionCreator = actionCreators.request || requestAction;\n  const successActionCreators = actionCreators.success || successAction;\n  const currentState = getState();\n  const currentStoreData = currentState[storekey];\n  if (currentStoreData && currentStoreData.fetched && watchStatus[resource.kind]) {\n    return Promise.resolve();\n  }\n  dispatch(requestActionCreator(actionTypes.REQUEST));\n  return list(resource).then(data => {\n    dispatch(successActionCreators(actionTypes.SUCCESS, data));\n  });\n};\n\nconst watchIfRequired = (resource, actionTypes, dispatch, actionCreators) => {\n  if (watchStatus[resource.kind]) {\n    return Promise.resolve();\n  }\n  return watchResource(resource, actionTypes, dispatch, actionCreators);\n};\n\nconst watchResource = (resource, actionTypes, dispatch, actionCreators) => {\n  const successActionCreators = actionCreators.success || successAction;\n  const failureActionCreator = actionCreators.failure || failureAction;\n  watchStatus[resource.kind] = true;\n  // TODO: add label selectors to the watch url\n  return watch(resource).then(handler => {\n    handler.onEvent(event => {\n      if (event.type === OpenShiftWatchEvents.CLOSED) {\n        watchStatus[resource.kind] = false;\n      } else if (event.type === OpenShiftWatchEvents.ADDED) {\n        dispatch(successActionCreators(actionTypes.ADDED, event.payload));\n      } else if (event.type === OpenShiftWatchEvents.MODIFIED) {\n        dispatch(successActionCreators(actionTypes.MODIFIED, event.payload));\n      } else if (event.type === OpenShiftWatchEvents.DELETED) {\n        dispatch(successActionCreators(actionTypes.DELETED, event.payload));\n      }\n    });\n    handler.catch(error => {\n      watchStatus[resource.kind] = false;\n      dispatch(failureActionCreator(actionTypes.FAILURE, error));\n      dispatch(errorCreator(error));\n    });\n    return handler;\n  });\n};\n\nexport const fetchAndWatchOpenShiftResource = (resource, storeKey, actionTypes, actionCreators = {}) => () => async (\n  dispatch,\n  getState\n) => {\n  const failureActionCreator = actionCreators.failure || failureAction;\n  fetchIfRequired(resource, storeKey, actionTypes, dispatch, getState, actionCreators)\n    .then(() => {\n      watchIfRequired(resource, actionTypes, dispatch, actionCreators);\n    })\n    .catch(error => {\n      dispatch(failureActionCreator(actionTypes.FAILURE, error));\n      dispatch(errorCreator(error));\n    });\n};\n\nexport const fetchAction = ([request, success, failure], doFetch) => () => async dispatch => {\n  dispatch(requestAction(request));\n  try {\n    const result = await doFetch();\n    dispatch(successAction(success, result));\n  } catch (error) {\n    dispatch(failureAction(failure, error));\n    dispatch(errorCreator(error));\n  }\n};\n"]},"metadata":{},"sourceType":"module"}