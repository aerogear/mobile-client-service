{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { noop } from '../../common/helpers';\n\nvar HintBlock = function HintBlock(_ref) {\n  var className = _ref.className,\n      onClose = _ref.onClose,\n      title = _ref.title,\n      body = _ref.body,\n      buttonContent = _ref.buttonContent,\n      onButtonClick = _ref.onButtonClick,\n      props = _objectWithoutProperties(_ref, ['className', 'onClose', 'title', 'body', 'buttonContent', 'onButtonClick']);\n\n  var classes = classNames('hint-block-pf', className);\n  return React.createElement('div', _extends({\n    className: classes\n  }, props), onClose && React.createElement('button', {\n    type: 'button',\n    className: 'close',\n    'aria-hidden': 'true',\n    'aria-label': 'Close',\n    onClick: onClose\n  }, React.createElement('span', {\n    className: 'pficon pficon-close'\n  })), React.createElement('div', {\n    className: 'hint-block-pf-title'\n  }, title), React.createElement('div', {\n    className: 'hint-block-pf-body'\n  }, body), buttonContent && React.createElement('button', {\n    className: 'btn btn-primary',\n    type: 'button',\n    onClick: onButtonClick\n  }, buttonContent));\n};\n\nHintBlock.propTypes = {\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** Close callback, if not provided the block will not be closable */\n  onClose: PropTypes.func,\n\n  /** Title for the hint block */\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n\n  /** Body of the hint block */\n  body: PropTypes.oneOfType([PropTypes.string, PropTypes.node]).isRequired,\n\n  /** Optional button contents for the hint block */\n  buttonContent: PropTypes.oneOfType([PropTypes.string, PropTypes.node]),\n\n  /** Callback for the button if buttonContent is provided */\n  onButtonClick: PropTypes.func\n};\nHintBlock.defaultProps = {\n  className: '',\n  onClose: null,\n  buttonContent: null,\n  onButtonClick: noop\n};\nexport default HintBlock;","map":null,"metadata":{},"sourceType":"module"}