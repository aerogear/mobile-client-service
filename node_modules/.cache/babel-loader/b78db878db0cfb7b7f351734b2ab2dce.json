{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CardTitle from './CardTitle';\nimport CardBody from './CardBody';\nimport CardHeading from './CardHeading';\nimport CardFooter from './CardFooter';\nimport CardLink from './CardLink';\nimport CardGrid from './CardGrid';\nimport CardDropdownButton from './CardDropdownButton';\nimport CardHeightMatching from './CardHeightMatching';\nimport { UtilizationCard, UtilizationCardDetails, UtilizationCardDetailsCount, UtilizationCardDetailsDesc, UtilizationCardDetailsLine1, UtilizationCardDetailsLine2 } from './UtilizationTrendCard';\nimport { AggregateStatusCount, AggregateStatusNotifications, AggregateStatusNotification } from './AggregateStatusCard';\n/**\n * Card Component for PatternFly React\n */\n\nvar Card = function Card(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      accented = _ref.accented,\n      aggregated = _ref.aggregated,\n      aggregatedMini = _ref.aggregatedMini,\n      matchHeight = _ref.matchHeight,\n      cardRef = _ref.cardRef,\n      props = _objectWithoutProperties(_ref, ['children', 'className', 'accented', 'aggregated', 'aggregatedMini', 'matchHeight', 'cardRef']);\n\n  var classes = classNames('card-pf', {\n    'card-pf-accented': accented\n  }, {\n    'card-pf-aggregate-status': aggregated\n  }, {\n    'card-pf-aggregate-status card-pf-aggregate-status-mini': aggregatedMini\n  }, {\n    'card-pf-match-height': matchHeight\n  }, className);\n  return React.createElement('div', _extends({\n    className: classes,\n    ref: cardRef\n  }, props), children);\n};\n\nCard.propTypes = {\n  /** Child nodes */\n  children: PropTypes.node.isRequired,\n\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** Top Card Accent Bool */\n  accented: PropTypes.bool,\n\n  /** Aggregate Card Bool */\n  aggregated: PropTypes.bool,\n\n  /** Aggregate Mini Card Bool */\n  aggregatedMini: PropTypes.bool,\n\n  /** Match Height Bool */\n  matchHeight: PropTypes.bool,\n\n  /** Reference prop */\n  cardRef: PropTypes.func\n};\nCard.defaultProps = {\n  className: '',\n  accented: false,\n  aggregated: false,\n  aggregatedMini: false,\n  matchHeight: false,\n  cardRef: null\n};\nCard.Title = CardTitle;\nCard.Body = CardBody;\nCard.Heading = CardHeading;\nCard.Footer = CardFooter;\nCard.Link = CardLink;\nCard.Grid = CardGrid;\nCard.DropdownButton = CardDropdownButton;\nCard.HeightMatching = CardHeightMatching;\nCard.UtilizationCard = UtilizationCard;\nCard.UtilizationCardDetails = UtilizationCardDetails;\nCard.UtilizationCardDetailsCount = UtilizationCardDetailsCount;\nCard.UtilizationCardDetailsDesc = UtilizationCardDetailsDesc;\nCard.UtilizationCardDetailsLine1 = UtilizationCardDetailsLine1;\nCard.UtilizationCardDetailsLine2 = UtilizationCardDetailsLine2;\nCard.AggregateStatusCount = AggregateStatusCount;\nCard.AggregateStatusNotifications = AggregateStatusNotifications;\nCard.AggregateStatusNotification = AggregateStatusNotification;\nexport default Card;","map":null,"metadata":{},"sourceType":"module"}