{"ast":null,"code":"function _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '../Tooltip';\nimport { OverlayTrigger } from '../OverlayTrigger';\nimport { Icon } from '../Icon';\n\nvar ApplicationLauncherItem = function ApplicationLauncherItem(_ref) {\n  var _onClick = _ref.onClick,\n      tooltip = _ref.tooltip,\n      tooltipPlacement = _ref.tooltipPlacement,\n      title = _ref.title,\n      icon = _ref.icon,\n      noIcons = _ref.noIcons,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['onClick', 'tooltip', 'tooltipPlacement', 'title', 'icon', 'noIcons', 'className']);\n\n  var classes = classNames('applauncher-pf-item', className);\n\n  if (tooltip !== null) {\n    return React.createElement(OverlayTrigger, {\n      overlay: React.createElement(Tooltip, {\n        id: title\n      }, tooltip),\n      placement: tooltipPlacement,\n      trigger: ['hover', 'focus'],\n      rootClose: false\n    }, React.createElement('li', {\n      className: classes,\n      role: 'presentation'\n    }, React.createElement('a', {\n      className: 'applauncher-pf-link',\n      href: '#',\n      onClick: function onClick(e) {\n        return _onClick(e);\n      },\n      role: 'menuitem'\n    }, !noIcons && React.createElement(Icon, {\n      type: 'pf',\n      name: icon,\n      className: 'applauncher-pf-link-icon'\n    }), React.createElement('span', {\n      className: 'applauncher-pf-link-title'\n    }, title))));\n  }\n\n  return React.createElement('li', {\n    className: classes,\n    role: 'presentation'\n  }, React.createElement('a', {\n    className: 'applauncher-pf-link',\n    href: '#',\n    onClick: function onClick(e) {\n      return _onClick(e);\n    },\n    role: 'menuitem'\n  }, !noIcons && React.createElement(Icon, {\n    type: 'pf',\n    name: icon,\n    className: 'applauncher-pf-link-icon'\n  }), React.createElement('span', {\n    className: 'applauncher-pf-link-title'\n  }, title)));\n};\n\nApplicationLauncherItem.propTypes = {\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** onClick func */\n  onClick: PropTypes.func,\n\n  /** Title String */\n  title: PropTypes.string.isRequired,\n\n  /** Icon Type */\n  icon: PropTypes.string.isRequired,\n\n  /** App Tooltip */\n  tooltip: PropTypes.string,\n\n  /** Tooltip Placement */\n  tooltipPlacement: PropTypes.string,\n\n  /** No Icons Bool */\n  noIcons: PropTypes.bool\n};\nApplicationLauncherItem.defaultProps = {\n  className: '',\n  onClick: null,\n  noIcons: false,\n  tooltipPlacement: 'left',\n  tooltip: null\n};\nexport default ApplicationLauncherItem;","map":null,"metadata":{},"sourceType":"module"}