{"ast":null,"code":"import _classCallCheck from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport { get, isFunction } from 'lodash-es';\nimport { ValidationRuleBaseClass } from './ValidationRuleBaseClass';\n/**\n * This rule checks that the specified field has the same value of a target field.\n * If the specified `target field` is a function, the rule checks that the value of the field is the same as the result\n * of the function (the function signature should be () => { } ).\n * The configuration of this rule must be something like:\n * {\n *   \"type\": \"SAMEVALUEOF\",           // this is a fixed string identifying this rule\n *   \"error\": \"Your custom error\",    // Optional. The custom error message.\n *                                    // This can be a string, a dictionary or a function (signature: (key, message) => {})\n *                                    // If not specified, a standard error message is returned.\n *   \"target\": \"target fieldname\"     // The target field name that contains the expected value.\n * }\n */\n\nexport var SameValueOfRule =\n/*#__PURE__*/\nfunction (_ValidationRuleBaseCl) {\n  _inherits(SameValueOfRule, _ValidationRuleBaseCl);\n\n  function SameValueOfRule(config) {\n    var _this;\n\n    _classCallCheck(this, SameValueOfRule);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SameValueOfRule).call(this, config));\n    _this.target = config.target;\n    return _this;\n  }\n\n  _createClass(SameValueOfRule, [{\n    key: \"validate\",\n    value: function validate(data, key) {\n      var value = get(data, key);\n      var targetValue = isFunction(this.target) ? this.target() : get(data, this.target);\n\n      if (value !== targetValue) {\n        return {\n          valid: false,\n          error: this.getErrorMessage(key, \"Value of field \".concat(key, \" does not match the required value\"))\n        };\n      }\n\n      return {\n        valid: true\n      };\n    }\n  }]);\n\n  return SameValueOfRule;\n}(ValidationRuleBaseClass);\nexport var NAME = 'SAMEVALUEOF';","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/mobileservices/validator/rules/SameValueOfRule.js"],"names":["get","isFunction","ValidationRuleBaseClass","SameValueOfRule","config","target","data","key","value","targetValue","valid","error","getErrorMessage","NAME"],"mappings":";;;;;AAAA,SAASA,GAAT,EAAcC,UAAd,QAAgC,WAAhC;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AAEA;;;;;;;;;;;;;;AAaA,WAAaC,eAAb;AAAA;AAAA;AAAA;;AACE,2BAAYC,MAAZ,EAAoB;AAAA;;AAAA;;AAClB,yFAAMA,MAAN;AACA,UAAKC,MAAL,GAAcD,MAAM,CAACC,MAArB;AAFkB;AAGnB;;AAJH;AAAA;AAAA,6BAMWC,IANX,EAMiBC,GANjB,EAMsB;AAClB,UAAMC,KAAK,GAAGR,GAAG,CAACM,IAAD,EAAOC,GAAP,CAAjB;AACA,UAAME,WAAW,GAAGR,UAAU,CAAC,KAAKI,MAAN,CAAV,GAA0B,KAAKA,MAAL,EAA1B,GAA0CL,GAAG,CAACM,IAAD,EAAO,KAAKD,MAAZ,CAAjE;;AACA,UAAIG,KAAK,KAAKC,WAAd,EAA2B;AACzB,eAAO;AACLC,UAAAA,KAAK,EAAE,KADF;AAELC,UAAAA,KAAK,EAAE,KAAKC,eAAL,CAAqBL,GAArB,2BAA4CA,GAA5C;AAFF,SAAP;AAID;;AACD,aAAO;AAAEG,QAAAA,KAAK,EAAE;AAAT,OAAP;AACD;AAhBH;;AAAA;AAAA,EAAqCR,uBAArC;AAmBA,OAAO,IAAMW,IAAI,GAAG,aAAb","sourcesContent":["import { get, isFunction } from 'lodash-es';\nimport { ValidationRuleBaseClass } from './ValidationRuleBaseClass';\n\n/**\n * This rule checks that the specified field has the same value of a target field.\n * If the specified `target field` is a function, the rule checks that the value of the field is the same as the result\n * of the function (the function signature should be () => { } ).\n * The configuration of this rule must be something like:\n * {\n *   \"type\": \"SAMEVALUEOF\",           // this is a fixed string identifying this rule\n *   \"error\": \"Your custom error\",    // Optional. The custom error message.\n *                                    // This can be a string, a dictionary or a function (signature: (key, message) => {})\n *                                    // If not specified, a standard error message is returned.\n *   \"target\": \"target fieldname\"     // The target field name that contains the expected value.\n * }\n */\nexport class SameValueOfRule extends ValidationRuleBaseClass {\n  constructor(config) {\n    super(config);\n    this.target = config.target;\n  }\n\n  validate(data, key) {\n    const value = get(data, key);\n    const targetValue = isFunction(this.target) ? this.target() : get(data, this.target);\n    if (value !== targetValue) {\n      return {\n        valid: false,\n        error: this.getErrorMessage(key, `Value of field ${key} does not match the required value`)\n      };\n    }\n    return { valid: true };\n  }\n}\n\nexport const NAME = 'SAMEVALUEOF';\n"]},"metadata":{},"sourceType":"module"}