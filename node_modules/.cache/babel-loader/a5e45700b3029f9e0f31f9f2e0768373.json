{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport { isEqual } from 'lodash';\nimport { DualList } from './index';\nimport { adjustProps } from './helpers';\n\nvar DualListControlled = function (_React$Component) {\n  _inherits(DualListControlled, _React$Component);\n\n  function DualListControlled(props) {\n    _classCallCheck(this, DualListControlled);\n\n    var _this = _possibleConstructorReturn(this, (DualListControlled.__proto__ || Object.getPrototypeOf(DualListControlled)).call(this, props));\n\n    _this.onItemChange = function (_ref) {\n      var side = _ref.side,\n          items = _ref.items,\n          selectCount = _ref.selectCount,\n          isMainChecked = _ref.isMainChecked;\n\n      _this.setState(_defineProperty({}, side, _extends({}, _this.state[side], {\n        items: items,\n        selectCount: selectCount,\n        isMainChecked: isMainChecked\n      })));\n    };\n\n    _this.onMainCheckboxChange = function (_ref2) {\n      var side = _ref2.side,\n          checked = _ref2.checked,\n          items = _ref2.items,\n          selectCount = _ref2.selectCount;\n\n      _this.setState(_defineProperty({}, side, _extends({}, _this.state[side], {\n        items: items,\n        selectCount: selectCount,\n        isMainChecked: checked\n      })));\n    };\n\n    _this.onSortClick = function (_ref3) {\n      var side = _ref3.side,\n          items = _ref3.items,\n          isSortAsc = _ref3.isSortAsc;\n\n      _this.setState(_defineProperty({}, side, _extends({}, _this.state[side], {\n        items: items,\n        isSortAsc: isSortAsc\n      })));\n    };\n\n    _this.onFilterChange = function (_ref4) {\n      var side = _ref4.side,\n          filterTerm = _ref4.filterTerm,\n          items = _ref4.items,\n          isMainChecked = _ref4.isMainChecked;\n\n      _this.setState(_defineProperty({}, side, _extends({}, _this.state[side], {\n        filterTerm: filterTerm,\n        items: items,\n        isMainChecked: isMainChecked\n      })));\n    };\n\n    _this.onChange = function (_ref5) {\n      var left = _ref5.left,\n          right = _ref5.right;\n\n      _this.setState({\n        left: left,\n        right: right\n      });\n    };\n\n    _this.state = _extends({\n      prevProps: props\n    }, adjustProps(props));\n    return _this;\n  }\n\n  _createClass(DualListControlled, [{\n    key: 'render',\n    value: function render() {\n      var _state = this.state,\n          left = _state.left,\n          right = _state.right,\n          allowHiddenInputs = _state.allowHiddenInputs;\n      return React.createElement(DualList, {\n        left: _extends({}, left),\n        right: _extends({}, right),\n        onItemChange: this.onItemChange,\n        onSortClick: this.onSortClick,\n        onFilterChange: this.onFilterChange,\n        onMainCheckboxChange: this.onMainCheckboxChange,\n        onChange: this.onChange,\n        allowHiddenInputs: allowHiddenInputs\n      });\n    }\n  }], [{\n    key: 'getDerivedStateFromProps',\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      return !isEqual(nextProps, prevState.prevProps) ? _extends({\n        prevProps: nextProps\n      }, adjustProps(nextProps)) : null;\n    }\n  }]);\n\n  return DualListControlled;\n}(React.Component);\n\nexport default DualListControlled;","map":null,"metadata":{},"sourceType":"module"}