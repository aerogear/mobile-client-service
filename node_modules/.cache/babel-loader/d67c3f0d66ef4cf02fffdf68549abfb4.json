{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Button, Icon } from '../../../../index';\nimport LoginCardSocialLink from './LoginCardSocialLink';\n\nvar LoginCardSocialColumns = function (_React$Component) {\n  _inherits(LoginCardSocialColumns, _React$Component);\n\n  function LoginCardSocialColumns() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, LoginCardSocialColumns);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = LoginCardSocialColumns.__proto__ || Object.getPrototypeOf(LoginCardSocialColumns)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      expend: false,\n      width: window.innerWidth\n    }, _this.updateWindowWidth = function () {\n      _this.setState({\n        width: window.innerWidth\n      });\n    }, _this.getListItems = function () {\n      _this.hiddenLinks = [];\n      var _this$props = _this.props,\n          links = _this$props.links,\n          numberOfButtonsToShow = _this$props.numberOfButtonsToShow;\n      return links && links.map(function (link, index) {\n        if (index >= numberOfButtonsToShow) {\n          _this.hiddenLinks.push(link);\n\n          return true;\n        }\n\n        return React.createElement(LoginCardSocialLink, {\n          link: link,\n          key: link.key || index\n        });\n      });\n    }, _this.getHiddenListItems = function () {\n      var numberOfButtonsToShow = _this.props.numberOfButtonsToShow;\n      return _this.hiddenLinks && _this.hiddenLinks.map(function (link, index) {\n        return React.createElement(LoginCardSocialLink, {\n          link: link,\n          key: link.key || index + numberOfButtonsToShow\n        });\n      });\n    }, _this.toggleExpend = function () {\n      _this.setState({\n        expend: !_this.state.expend\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(LoginCardSocialColumns, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.updateWindowWidth);\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWindowWidth);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          links = _props.links,\n          numberOfButtonsToShow = _props.numberOfButtonsToShow;\n\n      if (!links) {\n        return null;\n      }\n\n      var _state = this.state,\n          expend = _state.expend,\n          width = _state.width;\n      var expendButton = width > 768 && links.length > numberOfButtonsToShow && React.createElement(Button, {\n        bsStyle: 'link',\n        bsClass: 'btn btn-link login-pf-social-toggle',\n        onClick: this.toggleExpend\n      }, expend ? 'Less' : 'More', ' \\xA0', React.createElement(Icon, {\n        name: 'angle-' + (expend ? 'up' : 'down')\n      }));\n      var doubleColumn = links.length > 4 ? 'login-pf-social-double-col' : '';\n      var moreItems = expend || width < 768 ? this.getHiddenListItems() : null;\n      return React.createElement('div', null, React.createElement('ul', {\n        className: classNames('login-pf-social list-unstyled', doubleColumn)\n      }, this.getListItems(), moreItems), expendButton);\n    }\n  }]);\n\n  return LoginCardSocialColumns;\n}(React.Component);\n\nLoginCardSocialColumns.propTypes = {\n  /** Array of social links to generate. */\n  links: PropTypes.arrayOf(PropTypes.shape(_extends({}, LoginCardSocialLink.propTypes))),\n\n  /** The amount of buttons to show. Above this number, the buttons would be hidden */\n  numberOfButtonsToShow: PropTypes.number\n};\nLoginCardSocialColumns.defaultProps = {\n  links: [],\n  numberOfButtonsToShow: 8\n};\nexport default LoginCardSocialColumns;","map":null,"metadata":{},"sourceType":"module"}