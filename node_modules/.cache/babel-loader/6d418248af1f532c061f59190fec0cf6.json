{"ast":null,"code":"var _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/configuration/ServiceSDKInfo.js\";\nimport React from 'react';\nimport { Col } from 'patternfly-react';\nimport './ServiceSDKInfo.css';\nexport var ServiceSDKInfo = function ServiceSDKInfo(_ref) {\n  var framework = _ref.framework,\n      mobileApp = _ref.mobileApp;\n\n  if (mobileApp) {\n    var status = mobileApp.getStatus();\n    var _services = {\n      services: status.getServices()\n    },\n        _services$services = _services.services,\n        services = _services$services === void 0 ? [] : _services$services;\n    return services ? React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, services.map(function (_ref2) {\n      var type = _ref2.type;\n\n      if (framework.services[type]) {\n        var _framework$services$t = framework.services[type],\n            serviceLogoUrl = _framework$services$t.serviceLogoUrl,\n            serviceName = _framework$services$t.serviceName,\n            setupText = _framework$services$t.setupText,\n            docsLink = _framework$services$t.docsLink;\n        return React.createElement(Col, {\n          md: 6,\n          className: \"service-sdk-info\",\n          key: \"sdk-info-\".concat(serviceName),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16\n          },\n          __self: this\n        }, React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: serviceLogoUrl,\n          alt: \"\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"service-name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, serviceName)))), React.createElement(Col, {\n          md: 12,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"service-details\",\n          key: \"sdk-details-\".concat(serviceName),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: docsLink,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }, setupText)))));\n      }\n\n      console.error(\"Bad service type found '\".concat(type, \"'\"));\n      return null;\n    })) : React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  });\n};\nexport default ServiceSDKInfo;","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/configuration/ServiceSDKInfo.js"],"names":["React","Col","ServiceSDKInfo","framework","mobileApp","status","getStatus","services","getServices","map","type","serviceLogoUrl","serviceName","setupText","docsLink","console","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,kBAApB;AAEA,OAAO,sBAAP;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAA8B;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAC1D,MAAIA,SAAJ,EAAe;AACb,QAAMC,MAAM,GAAGD,SAAS,CAACE,SAAV,EAAf;AADa,oBAEa;AAAEC,MAAAA,QAAQ,EAAEF,MAAM,CAACG,WAAP;AAAZ,KAFb;AAAA,uCAELD,QAFK;AAAA,QAELA,QAFK,mCAEM,EAFN;AAGb,WAAOA,QAAQ,GACb,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,QAAQ,CAACE,GAAT,CAAa,iBAAc;AAAA,UAAXC,IAAW,SAAXA,IAAW;;AAC1B,UAAIP,SAAS,CAACI,QAAV,CAAmBG,IAAnB,CAAJ,EAA8B;AAAA,oCACiCP,SAAS,CAACI,QAAV,CAAmBG,IAAnB,CADjC;AAAA,YACpBC,cADoB,yBACpBA,cADoB;AAAA,YACJC,WADI,yBACJA,WADI;AAAA,YACSC,SADT,yBACSA,SADT;AAAA,YACoBC,QADpB,yBACoBA,QADpB;AAE5B,eACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,SAAS,EAAC,kBAAtB;AAAyC,UAAA,GAAG,qBAAcF,WAAd,CAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,GAAG,EAAED,cAAV;AAA0B,UAAA,GAAG,EAAC,EAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,EAEE;AAAK,UAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAMC,WAAN,CADF,CADF,CAFF,CADF,EASE,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,GAAG,wBAAiBA,WAAjB,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAEE,QAAT;AAAmB,UAAA,MAAM,EAAC,QAA1B;AAAmC,UAAA,GAAG,EAAC,qBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,SADH,CADF,CADF,CADF,CATF,CADF;AAqBD;;AACDE,MAAAA,OAAO,CAACC,KAAR,mCAAyCN,IAAzC;AACA,aAAO,IAAP;AACD,KA3BA,CADH,CADa,GAgCb,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhCF;AAkCD;;AACD,SAAO,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAxCM;AA0CP,eAAeR,cAAf","sourcesContent":["import React from 'react';\nimport { Col } from 'patternfly-react';\n\nimport './ServiceSDKInfo.css';\n\nexport const ServiceSDKInfo = ({ framework, mobileApp }) => {\n  if (mobileApp) {\n    const status = mobileApp.getStatus();\n    const { services = [] } = { services: status.getServices() };\n    return services ? (\n      <React.Fragment>\n        {services.map(({ type }) => {\n          if (framework.services[type]) {\n            const { serviceLogoUrl, serviceName, setupText, docsLink } = framework.services[type];\n            return (\n              <Col md={6} className=\"service-sdk-info\" key={`sdk-info-${serviceName}`}>\n                <Col md={12}>\n                  <img src={serviceLogoUrl} alt=\"\" />\n                  <div className=\"service-name\">\n                    <h4>\n                      <div>{serviceName}</div>\n                    </h4>\n                  </div>\n                </Col>\n                <Col md={12}>\n                  <div className=\"service-details\" key={`sdk-details-${serviceName}`}>\n                    <h5>\n                      <a href={docsLink} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {setupText}\n                      </a>\n                    </h5>\n                  </div>\n                </Col>\n              </Col>\n            );\n          }\n          console.error(`Bad service type found '${type}'`);\n          return null;\n        })}\n      </React.Fragment>\n    ) : (\n      <React.Fragment />\n    );\n  }\n  return <React.Fragment />;\n};\n\nexport default ServiceSDKInfo;\n"]},"metadata":{},"sourceType":"module"}