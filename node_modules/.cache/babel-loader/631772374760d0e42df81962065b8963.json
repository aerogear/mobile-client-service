{"ast":null,"code":"var _jsxFileName = \"/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/create_build_config/BuildSection.js\";\nimport React from 'react';\nimport { FormGroup, ControlLabel, Checkbox } from 'patternfly-react';\nimport { get as _get } from 'lodash-es';\nimport { KEY_CR_BUILD_PLATFORM, KEY_CR_BUILD_TYPE, KEY_CR_ENV_VARS, BUILD_PLATFORM_ANDROID, BUILD_PLATFORM_IOS, BUILD_TYPE_RELEASE, BUILD_TYPE_DEBUG, KEY_HIDE_PLATFORM, PATH_CR_BUILD, KEY_UI, KEY_EXTERNAL_CREDENTIALS } from '../Constants';\nimport FormDropdown from '../../common/FormDropdown';\nimport KeyValueEditor from '../../common/KeyValueEditor';\nimport { createBuildConfigConnect } from './ReduxCommon';\nimport { buildValidation } from './Validations';\nimport IOSCredentialsSection from './IOSCredentialsSection';\nimport AndroidCredentialsSection from './AndroidCredentialsSection';\n\nfunction onEnvVarsChange(setField, rows) {\n  setField(KEY_CR_ENV_VARS, rows.map(function (_ref) {\n    var key = _ref.key,\n        value = _ref.value;\n    return {\n      name: key,\n      value: value\n    };\n  }));\n}\n\nvar BuildSection = function BuildSection(_ref2) {\n  var createBuildConfigState = _ref2.createBuildConfigState,\n      setField = _ref2.setField,\n      setUiState = _ref2.setUiState;\n\n  var _get2 = _get(createBuildConfigState, KEY_UI, {}),\n      hidePlatform = _get2[KEY_HIDE_PLATFORM],\n      externalCredentials = _get2[KEY_EXTERNAL_CREDENTIALS];\n\n  var _get3 = _get(createBuildConfigState, PATH_CR_BUILD, {}),\n      _get3$KEY_CR_BUILD_PL = _get3[KEY_CR_BUILD_PLATFORM],\n      platform = _get3$KEY_CR_BUILD_PL === void 0 ? BUILD_PLATFORM_ANDROID : _get3$KEY_CR_BUILD_PL,\n      _get3$KEY_CR_BUILD_TY = _get3[KEY_CR_BUILD_TYPE],\n      buildType = _get3$KEY_CR_BUILD_TY === void 0 ? BUILD_TYPE_DEBUG : _get3$KEY_CR_BUILD_TY;\n\n  return React.createElement(\"div\", {\n    className: \"section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    className: \"with-divider\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Build Configuration\"), hidePlatform ? React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }) : React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Platform\"), React.createElement(FormDropdown, {\n    id: \"platform\",\n    items: [BUILD_PLATFORM_ANDROID, BUILD_PLATFORM_IOS],\n    titles: ['Android', 'iOS'],\n    onSelect: function onSelect(active) {\n      return setField(KEY_CR_BUILD_PLATFORM, active);\n    },\n    selected: platform,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Build Type\"), React.createElement(FormDropdown, {\n    id: \"buildtype\",\n    items: [BUILD_TYPE_DEBUG, BUILD_TYPE_RELEASE],\n    titles: ['Debug', 'Release'],\n    onSelect: function onSelect(active) {\n      return setField(KEY_CR_BUILD_TYPE, active);\n    },\n    selected: buildType,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  })), platform === BUILD_PLATFORM_ANDROID && buildType === BUILD_TYPE_RELEASE ? React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Checkbox, {\n    checked: externalCredentials,\n    onChange: function onChange(e) {\n      return setUiState(KEY_EXTERNAL_CREDENTIALS, e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"Upload external credentials (Use this option if your Keystore is external to your source code)\")) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), platform === BUILD_PLATFORM_IOS ? React.createElement(IOSCredentialsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), externalCredentials === 'on' ? React.createElement(AndroidCredentialsSection, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }) : React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(ControlLabel, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Environment Variables\"), React.createElement(KeyValueEditor, {\n    onChange: function onChange(rows) {\n      return onEnvVarsChange(setField, rows);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  })));\n};\n\nexport default createBuildConfigConnect(PATH_CR_BUILD, buildValidation, BuildSection);","map":{"version":3,"sources":["/Users/weili/work/mobile-next/golang/src/github.com/aerogear/mobile-developer-console/src/components/build/create_build_config/BuildSection.js"],"names":["React","FormGroup","ControlLabel","Checkbox","get","_get","KEY_CR_BUILD_PLATFORM","KEY_CR_BUILD_TYPE","KEY_CR_ENV_VARS","BUILD_PLATFORM_ANDROID","BUILD_PLATFORM_IOS","BUILD_TYPE_RELEASE","BUILD_TYPE_DEBUG","KEY_HIDE_PLATFORM","PATH_CR_BUILD","KEY_UI","KEY_EXTERNAL_CREDENTIALS","FormDropdown","KeyValueEditor","createBuildConfigConnect","buildValidation","IOSCredentialsSection","AndroidCredentialsSection","onEnvVarsChange","setField","rows","map","key","value","name","BuildSection","createBuildConfigState","setUiState","hidePlatform","externalCredentials","platform","buildType","active","e","target"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FormGroup, ControlLabel, Checkbox } from 'patternfly-react';\nimport { get as _get } from 'lodash-es';\nimport {\n  KEY_CR_BUILD_PLATFORM,\n  KEY_CR_BUILD_TYPE,\n  KEY_CR_ENV_VARS,\n  BUILD_PLATFORM_ANDROID,\n  BUILD_PLATFORM_IOS,\n  BUILD_TYPE_RELEASE,\n  BUILD_TYPE_DEBUG,\n  KEY_HIDE_PLATFORM,\n  PATH_CR_BUILD,\n  KEY_UI,\n  KEY_EXTERNAL_CREDENTIALS\n} from '../Constants';\nimport FormDropdown from '../../common/FormDropdown';\nimport KeyValueEditor from '../../common/KeyValueEditor';\nimport { createBuildConfigConnect } from './ReduxCommon';\nimport { buildValidation } from './Validations';\nimport IOSCredentialsSection from './IOSCredentialsSection';\nimport AndroidCredentialsSection from './AndroidCredentialsSection';\n\nfunction onEnvVarsChange(setField, rows) {\n  setField(\n    KEY_CR_ENV_VARS,\n    rows.map(({ key, value }) => ({\n      name: key,\n      value\n    }))\n  );\n}\n\nconst BuildSection = ({ createBuildConfigState, setField, setUiState }) => {\n  const { [KEY_HIDE_PLATFORM]: hidePlatform, [KEY_EXTERNAL_CREDENTIALS]: externalCredentials } = _get(\n    createBuildConfigState,\n    KEY_UI,\n    {}\n  );\n  const {\n    [KEY_CR_BUILD_PLATFORM]: platform = BUILD_PLATFORM_ANDROID,\n    [KEY_CR_BUILD_TYPE]: buildType = BUILD_TYPE_DEBUG\n  } = _get(createBuildConfigState, PATH_CR_BUILD, {});\n  return (\n    <div className=\"section\">\n      <h3 className=\"with-divider\">Build Configuration</h3>\n      {hidePlatform ? (\n        <React.Fragment />\n      ) : (\n        <FormGroup>\n          <ControlLabel>Platform</ControlLabel>\n          <FormDropdown\n            id=\"platform\"\n            items={[BUILD_PLATFORM_ANDROID, BUILD_PLATFORM_IOS]}\n            titles={['Android', 'iOS']}\n            onSelect={active => setField(KEY_CR_BUILD_PLATFORM, active)}\n            selected={platform}\n          />\n        </FormGroup>\n      )}\n      <FormGroup>\n        <ControlLabel>Build Type</ControlLabel>\n        <FormDropdown\n          id=\"buildtype\"\n          items={[BUILD_TYPE_DEBUG, BUILD_TYPE_RELEASE]}\n          titles={['Debug', 'Release']}\n          onSelect={active => setField(KEY_CR_BUILD_TYPE, active)}\n          selected={buildType}\n        />\n      </FormGroup>\n      {platform === BUILD_PLATFORM_ANDROID && buildType === BUILD_TYPE_RELEASE ? (\n        <FormGroup>\n          <Checkbox checked={externalCredentials} onChange={e => setUiState(KEY_EXTERNAL_CREDENTIALS, e.target.value)}>\n            Upload external credentials (Use this option if your Keystore is external to your source code)\n          </Checkbox>\n        </FormGroup>\n      ) : (\n        <React.Fragment />\n      )}\n      {platform === BUILD_PLATFORM_IOS ? <IOSCredentialsSection /> : <React.Fragment />}\n      {externalCredentials === 'on' ? <AndroidCredentialsSection /> : <React.Fragment />}\n      <FormGroup>\n        <ControlLabel>Environment Variables</ControlLabel>\n        <KeyValueEditor onChange={rows => onEnvVarsChange(setField, rows)} />\n      </FormGroup>\n    </div>\n  );\n};\n\nexport default createBuildConfigConnect(PATH_CR_BUILD, buildValidation, BuildSection);\n"]},"metadata":{},"sourceType":"module"}