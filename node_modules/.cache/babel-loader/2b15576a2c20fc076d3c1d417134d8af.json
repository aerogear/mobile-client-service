{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getContext } from 'recompose';\nimport { toolbarContextTypes } from '../Toolbar/ToolbarConstants';\nimport FilterTypeSelector from './FilterTypeSelector';\nimport FilterValueSelector from './FilterValueSelector';\nimport FilterCategorySelector from './FilterCategorySelector';\nimport FilterCategoryValueSelector from './FilterCategoryValueSelector';\nimport FilterActiveLabel from './FilterActiveLabel';\nimport FilterList from './FilterList';\nimport FilterItem from './FilterItem'; // Disabled eslint due to `isDescendantOfToolbar` being a context property we don't want passed by consumers\n// eslint-disable-next-line react/prop-types\n\nvar ContextualFilter = function ContextualFilter(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      isDescendantOfToolbar = _ref.isDescendantOfToolbar,\n      props = _objectWithoutProperties(_ref, ['children', 'className', 'isDescendantOfToolbar']);\n\n  var classes = classNames({\n    'filter-pf form-group': true,\n    'toolbar-pf-filter': isDescendantOfToolbar\n  }, className);\n  return React.createElement('div', _extends({\n    className: classes\n  }, props), React.createElement('div', {\n    className: 'filter-pf-fields'\n  }, React.createElement('div', {\n    className: 'input-group'\n  }, children)));\n};\n\nContextualFilter.propTypes = {\n  /** Children nodes */\n  children: PropTypes.node,\n\n  /** Additional css classes */\n  className: PropTypes.string\n};\nContextualFilter.defaultProps = {\n  children: null,\n  className: ''\n};\nvar Filter = getContext(toolbarContextTypes)(ContextualFilter);\nFilter.TypeSelector = FilterTypeSelector;\nFilter.ValueSelector = FilterValueSelector;\nFilter.CategorySelector = FilterCategorySelector;\nFilter.CategoryValueSelector = FilterCategoryValueSelector;\nFilter.ActiveLabel = FilterActiveLabel;\nFilter.List = FilterList;\nFilter.Item = FilterItem;\nexport default Filter;","map":null,"metadata":{},"sourceType":"module"}