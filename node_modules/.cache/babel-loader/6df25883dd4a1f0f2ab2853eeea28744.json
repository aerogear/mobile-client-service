{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { OverlayTrigger } from '../../OverlayTrigger/index';\nimport { Tooltip } from '../../Tooltip/index';\n\nvar randomId = function randomId() {\n  return Date.now();\n};\n\nvar BulletChartValue = function BulletChartValue(_ref) {\n  var className = _ref.className,\n      value = _ref.value,\n      percent = _ref.percent,\n      maxValue = _ref.maxValue,\n      prevValue = _ref.prevValue,\n      dot = _ref.dot,\n      vertical = _ref.vertical,\n      props = _objectWithoutProperties(_ref, ['className', 'value', 'percent', 'maxValue', 'prevValue', 'dot', 'vertical']);\n\n  var usedMax = percent ? 100 : maxValue;\n  var percentValue = percent ? value.value + prevValue : (value.value + prevValue) / maxValue * 100;\n  var showValue = Math.min(Math.max(percentValue, 0), usedMax * 1.2);\n\n  var TooltipFunction = function TooltipFunction() {\n    if (value.tooltipFunction) {\n      return value.tooltipFunction(value.value, value.title);\n    }\n\n    var tipText = value.title + ': ' + value.value + (percent ? '%' : '');\n    return React.createElement(Tooltip, {\n      id: value.tooltipId || randomId()\n    }, tipText);\n  };\n\n  var valueClasses = classNames({\n    'bullet-chart-pf-value-dot': dot,\n    'bullet-chart-pf-value-bar': !dot\n  }, className);\n  var valueComponent = void 0;\n\n  if (dot) {\n    valueComponent = React.createElement('div', _extends({\n      className: valueClasses,\n      style: {\n        left: vertical ? undefined : showValue + '%',\n        bottom: vertical ? showValue + '%' : undefined,\n        backgroundColor: value.color,\n        zIndex: Math.round(100 + showValue)\n      }\n    }, props));\n  } else {\n    var prevShowValue = percent ? prevValue : prevValue / maxValue * 100;\n    valueComponent = React.createElement('div', _extends({\n      className: valueClasses,\n      style: {\n        left: vertical ? undefined : prevShowValue + '%',\n        width: vertical ? undefined : showValue - prevShowValue + '%',\n        bottom: vertical ? prevShowValue + '%' : undefined,\n        height: vertical ? showValue - prevShowValue + '%' : undefined,\n        backgroundColor: value.color,\n        zIndex: Math.round(400 - showValue)\n      }\n    }, props));\n  }\n\n  return React.createElement(OverlayTrigger, {\n    key: value.title,\n    overlay: TooltipFunction(value),\n    placement: vertical ? 'right' : 'top',\n    trigger: ['hover', 'focus'],\n    rootClose: false\n  }, valueComponent);\n};\n\nBulletChartValue.propTypes = {\n  /** Additional css classes */\n  className: PropTypes.string,\n\n  /** Value */\n  value: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    color: PropTypes.string,\n    tooltipFunction: PropTypes.func,\n    tooltipId: PropTypes.string\n  }).isRequired,\n\n  /** Option to use value as a percentage, default is true */\n  percent: PropTypes.bool,\n\n  /** Maximum value when not using percents (ignored if percents is true) */\n  maxValue: PropTypes.number,\n\n  /** Previous value (for stacked charts), default 0 */\n  prevValue: PropTypes.number,\n\n  /** Display a dot rather than a bar, default false */\n  dot: PropTypes.bool,\n\n  /** Vertical chart, default false */\n  vertical: PropTypes.bool\n};\nBulletChartValue.defaultProps = {\n  className: '',\n  percent: true,\n  maxValue: 100,\n  prevValue: 0,\n  dot: false,\n  vertical: false\n};\nexport default BulletChartValue;","map":null,"metadata":{},"sourceType":"module"}