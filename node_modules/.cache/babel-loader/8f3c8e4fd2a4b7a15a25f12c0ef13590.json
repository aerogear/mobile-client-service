{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar NotificationDrawerPanelBody = function NotificationDrawerPanelBody(_ref) {\n  var maxHeight = _ref.maxHeight,\n      children = _ref.children,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['maxHeight', 'children', 'className']);\n\n  var classes = classNames('panel-body', className);\n  return React.createElement('div', _extends({\n    className: classes,\n    style: {\n      maxHeight: maxHeight\n    }\n  }, props), children);\n};\n\nNotificationDrawerPanelBody.propTypes = {\n  /** Child node - contents of the element */\n  children: PropTypes.node.isRequired,\n\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** Custom Height for Panel */\n  maxHeight: PropTypes.number\n};\nNotificationDrawerPanelBody.defaultProps = {\n  className: '',\n  maxHeight: null\n};\nexport default NotificationDrawerPanelBody;","map":null,"metadata":{},"sourceType":"module"}