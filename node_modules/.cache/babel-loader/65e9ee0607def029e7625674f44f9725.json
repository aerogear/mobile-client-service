{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Tooltip } from '../Tooltip';\nimport { OverlayTrigger } from '../OverlayTrigger';\nimport LabelWithTooltip from './LabelWithTooltip';\n\nvar CompoundLabel = function (_React$Component) {\n  _inherits(CompoundLabel, _React$Component);\n\n  function CompoundLabel() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, CompoundLabel);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = CompoundLabel.__proto__ || Object.getPrototypeOf(CompoundLabel)).call.apply(_ref, [this].concat(args))), _this), _this.generateTag = function (value) {\n      return React.createElement(LabelWithTooltip, {\n        key: value.id,\n        category: _this.props.category,\n        value: value,\n        onDeleteClick: _this.props.onDeleteClick,\n        truncate: _this.props.valueTruncate,\n        bsStyle: _this.props.bsStyle,\n        className: _this.props.innerClassName,\n        overlayPlacement: _this.props.overlayPlacement\n      });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(CompoundLabel, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var values = [].concat(_toConsumableArray(this.props.values));\n      if (values.length === 0) return null;\n      var categoryTooltip = React.createElement(Tooltip, {\n        id: 'tooltip'\n      }, this.props.category.label);\n      return React.createElement('span', {\n        className: 'label label-primary compound-label-pf'\n      }, React.createElement(OverlayTrigger, {\n        placement: this.props.overlayPlacement,\n        overlay: categoryTooltip\n      }, React.createElement('span', {\n        className: 'category-label-pf'\n      }, this.props.categoryTruncate(this.props.category.label))), React.createElement('ul', {\n        className: 'list-inline ' + this.props.className\n      }, values.sort(function (a, b) {\n        return a.label < b.label ? -1 : 1;\n      }).map(function (tagValue) {\n        return _this2.generateTag(tagValue);\n      })));\n    }\n  }]);\n\n  return CompoundLabel;\n}(React.Component);\n\nCompoundLabel.propTypes = {\n  /** Category in CATEGORY: value(s) pair */\n\n  /**  Parent of label, it does not get displayed in this component */\n  category: PropTypes.shape({\n    id: PropTypes.any.isRequired,\n    label: PropTypes.string.isRequired\n  }).isRequired,\n\n  /** Array of Values in Category:VALUE(S) pair  */\n\n  /** id uniquily identify value within its category, label is text which is displayed */\n  values: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.any.isRequired,\n    label: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n\n  /** Fuction callback called when X button is clicked */\n  onDeleteClick: PropTypes.func.isRequired,\n\n  /** Function used to truncate category label */\n  categoryTruncate: PropTypes.func,\n\n  /** Function used to truncate value label */\n  valueTruncate: PropTypes.func,\n\n  /** Name of CSS class(es) which are set to outer label */\n  className: PropTypes.string,\n\n  /** Bootstrap style which is set to label */\n  bsStyle: PropTypes.string,\n\n  /** Name of CSS class(es) which are set to inner label(s) */\n  innerClassName: PropTypes.string,\n\n  /** Placement of the overlay */\n  overlayPlacement: PropTypes.oneOf(['top', 'right', 'bottom', 'left'])\n};\nCompoundLabel.defaultProps = {\n  categoryTruncate: function categoryTruncate(str) {\n    return str.length > 18 ? str.substring(0, 18) + '...' : str;\n  },\n  valueTruncate: function valueTruncate(str) {\n    return str.length > 18 ? str.substring(0, 18) + '...' : str;\n  },\n  className: '',\n  bsStyle: 'primary',\n  innerClassName: '',\n  overlayPlacement: 'bottom'\n};\nexport default CompoundLabel;","map":null,"metadata":{},"sourceType":"module"}