{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Spinner from '../Spinner/Spinner';\nimport NotificationContent from './NotificationContent';\nimport NotificationInfo from './NotificationInfo';\nimport NotificationMessage from './NotificationMessage';\nimport NotificationInfoRight from './NotificationInfoRight';\nimport NotificationInfoLeft from './NotificationInfoLeft';\n\nvar Notification = function Notification(_ref) {\n  var type = _ref.type,\n      children = _ref.children,\n      seen = _ref.seen,\n      className = _ref.className,\n      props = _objectWithoutProperties(_ref, ['type', 'children', 'seen', 'className']);\n\n  var classes = classNames({\n    'drawer-pf-notification': type === 'notification',\n    'drawer-pf-loading text-center': type === 'loading'\n  }, {\n    unread: !seen\n  }, className);\n  return React.createElement('div', _extends({\n    className: classes\n  }, props), type === 'loading' ? [React.createElement(Spinner, {\n    key: 'notification_spinner',\n    inline: true,\n    loading: true,\n    size: 'xs'\n  }), ' Loading More'] : children);\n};\n\nNotification.propTypes = {\n  /** Child node - contents of the element */\n  children: PropTypes.node,\n\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** seen Notification Bool */\n  seen: PropTypes.bool,\n\n  /** show Loading Notification */\n  type: PropTypes.string\n};\nNotification.defaultProps = {\n  children: null,\n  className: '',\n  seen: false,\n  type: 'notification'\n};\nNotification.Content = NotificationContent;\nNotification.Info = NotificationInfo;\nNotification.InfoRight = NotificationInfoRight;\nNotification.InfoLeft = NotificationInfoLeft;\nNotification.Message = NotificationMessage;\nexport default Notification;","map":null,"metadata":{},"sourceType":"module"}