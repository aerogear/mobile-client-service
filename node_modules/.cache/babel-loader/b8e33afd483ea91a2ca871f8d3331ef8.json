{"ast":null,"code":"function _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from '../../../Dropdown';\nimport { Icon } from '../../../Icon';\n\nvar NotificationDrawerDropDown = function NotificationDrawerDropDown(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      className = _ref.className,\n      pullRight = _ref.pullRight,\n      props = _objectWithoutProperties(_ref, ['id', 'children', 'className', 'pullRight']);\n\n  var classes = classNames('dropdown', {\n    'pull-right': pullRight\n  }, 'dropdown-kebab-pf', className);\n  return React.createElement(Dropdown, {\n    className: classes,\n    id: id\n  }, React.createElement(Dropdown.Toggle, {\n    bsStyle: 'link',\n    noCaret: true\n  }, React.createElement(Icon, {\n    name: 'ellipsis-v'\n  })), React.createElement(Dropdown.Menu, {\n    className: 'dropdown-menu-right'\n  }, children));\n};\n\nNotificationDrawerDropDown.propTypes = {\n  /** dropdown button id */\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Child node - contents of the element */\n  children: PropTypes.node.isRequired,\n\n  /** Additional element css classes */\n  className: PropTypes.string,\n\n  /** menu right aligned */\n  pullRight: PropTypes.bool\n};\nNotificationDrawerDropDown.defaultProps = {\n  pullRight: true,\n  id: null,\n  className: ''\n};\nexport default NotificationDrawerDropDown;","map":null,"metadata":{},"sourceType":"module"}